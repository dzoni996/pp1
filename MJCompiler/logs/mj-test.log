INFO  00:59:04,139 - Compiling source file: C:\Storage\PP1\Projekat\2. sintaksna analiza\Izvorni kod\MJCompiler2\test\program.mj
INFO  00:59:04,215 - #2 program
INFO  00:59:04,215 - #46 MJProgram
INFO  00:59:04,215 - #46 int
INFO  00:59:04,216 - #46 x
INFO  00:59:04,217 - #5 ;
INFO  00:59:04,218 - #46 char
INFO  00:59:04,219 - #46 x2
INFO  00:59:04,219 - #26 [
INFO  00:59:04,219 - #36 ]
INFO  00:59:04,219 - #5 ;
INFO  00:59:04,220 - #23 const
INFO  00:59:04,220 - #46 bool
INFO  00:59:04,220 - #46 y2
INFO  00:59:04,220 - #12 =
INFO  00:59:04,220 - #28 true
INFO  00:59:04,220 - #5 ;
INFO  00:59:04,221 - #31 enum
INFO  00:59:04,222 - #46 nums
INFO  00:59:04,222 - #3 {
INFO  00:59:04,222 - #46 ONE
INFO  00:59:04,222 - #8 ,
INFO  00:59:04,223 - #46 TWO
INFO  00:59:04,223 - #8 ,
INFO  00:59:04,223 - #46 THREE
INFO  00:59:04,223 - #12 =
INFO  00:59:04,223 - #42 3
INFO  00:59:04,224 - #4 }
INFO  00:59:04,224 - #16 class
INFO  00:59:04,224 - #46 klasa
INFO  00:59:04,224 - #41 extends
INFO  00:59:04,224 - #46 Inyt
INFO  00:59:04,224 - #43 implements
INFO  00:59:04,224 - #46 Inter1
INFO  00:59:04,224 - #8 ,
INFO  00:59:04,225 - #46 INter2
INFO  00:59:04,225 - #3 {
INFO  00:59:04,225 - #46 int
INFO  00:59:04,226 - #46 f
INFO  00:59:04,226 - #5 ;
INFO  00:59:04,226 - #46 bool
INFO  00:59:04,226 - #46 f5
INFO  00:59:04,226 - #26 [
INFO  00:59:04,226 - #36 ]
INFO  00:59:04,227 - #5 ;
INFO  00:59:04,227 - #3 {
INFO  00:59:04,227 - #13 void
INFO  00:59:04,228 - #46 f
INFO  00:59:04,229 - #6 (
INFO  00:59:04,229 - #7 )
INFO  00:59:04,229 - #3 {
INFO  00:59:04,229 - #4 }
INFO  00:59:04,230 - #4 }
INFO  00:59:04,231 - #4 }
INFO  00:59:04,231 - #14 interface
INFO  00:59:04,232 - #46 Inter1
INFO  00:59:04,232 - #3 {
INFO  00:59:04,232 - #13 void
INFO  00:59:04,232 - #46 foo
INFO  00:59:04,232 - #6 (
INFO  00:59:04,232 - #46 int
INFO  00:59:04,232 - #46 x
INFO  00:59:04,233 - #8 ,
INFO  00:59:04,234 - #46 int
INFO  00:59:04,234 - #46 z
INFO  00:59:04,234 - #26 [
INFO  00:59:04,234 - #36 ]
INFO  00:59:04,234 - #7 )
INFO  00:59:04,234 - #5 ;
INFO  00:59:04,234 - #4 }
INFO  00:59:04,235 - #3 {
INFO  00:59:04,235 - #13 void
INFO  00:59:04,235 - #46 m2
INFO  00:59:04,236 - #6 (
INFO  00:59:04,236 - #46 int
INFO  00:59:04,236 - #46 x5
INFO  00:59:04,236 - #26 [
INFO  00:59:04,236 - #36 ]
INFO  00:59:04,236 - #7 )
INFO  00:59:04,236 - #3 {
INFO  00:59:04,236 - #46 var
INFO  00:59:04,237 - #15 .
INFO  00:59:04,238 - #46 x
INFO  00:59:04,238 - #15 .
INFO  00:59:04,238 - #46 d
INFO  00:59:04,238 - #26 [
INFO  00:59:04,238 - #35 -
INFO  00:59:04,238 - #42 5
INFO  00:59:04,240 - #32 *
INFO  00:59:04,241 - #42 8
INFO  00:59:04,244 - #32 *
INFO  00:59:04,245 - #42 9
INFO  00:59:04,245 - #32 *
INFO  00:59:04,245 - #42 8
INFO  00:59:04,246 - #36 ]
INFO  00:59:04,247 - #40 ++
INFO  00:59:04,247 - #5 ;
INFO  00:59:04,248 - #46 var
INFO  00:59:04,249 - #15 .
INFO  00:59:04,249 - #46 a
INFO  00:59:04,249 - #12 =
INFO  00:59:04,256 - #46 varA
INFO  00:59:04,273 - #32 *
INFO  00:59:04,274 - #46 varB
INFO  00:59:04,274 - #6 (
INFO  00:59:04,274 - #7 )
INFO  00:59:04,276 - #32 *
INFO  00:59:04,276 - #46 varC
INFO  00:59:04,276 - #6 (
INFO  00:59:04,276 - #28 false
INFO  00:59:04,277 - #7 )
INFO  00:59:04,278 - #5 ;
INFO  00:59:04,279 - #46 var
INFO  00:59:04,280 - #15 .
INFO  00:59:04,280 - #46 b
INFO  00:59:04,280 - #40 ++
INFO  00:59:04,280 - #5 ;
INFO  00:59:04,280 - #46 var
INFO  00:59:04,280 - #15 .
INFO  00:59:04,280 - #46 c
INFO  00:59:04,280 - #6 (
INFO  00:59:04,281 - #7 )
INFO  00:59:04,281 - #5 ;
INFO  00:59:04,281 - #46 var
INFO  00:59:04,281 - #15 .
INFO  00:59:04,281 - #46 d
INFO  00:59:04,281 - #12 =
INFO  00:59:04,281 - #18 new
INFO  00:59:04,281 - #46 klasa
INFO  00:59:04,281 - #5 ;
INFO  00:59:04,283 - #46 var
INFO  00:59:04,284 - #15 .
INFO  00:59:04,284 - #46 e
INFO  00:59:04,284 - #12 =
INFO  00:59:04,284 - #6 (
INFO  00:59:04,285 - #35 -
INFO  00:59:04,285 - #42 25
INFO  00:59:04,285 - #32 *
INFO  00:59:04,285 - #42 9
INFO  00:59:04,285 - #7 )
INFO  00:59:04,285 - #5 ;
INFO  00:59:04,285 - #17 break
INFO  00:59:04,286 - #5 ;
INFO  00:59:04,286 - #38 continue
INFO  00:59:04,289 - #5 ;
INFO  00:59:04,289 - #10 return
INFO  00:59:04,289 - #5 ;
INFO  00:59:04,290 - #10 return
INFO  00:59:04,290 - #42 1
INFO  00:59:04,290 - #35 -
INFO  00:59:04,290 - #42 2
INFO  00:59:04,291 - #5 ;
INFO  00:59:04,291 - #27 read
INFO  00:59:04,291 - #6 (
INFO  00:59:04,291 - #46 a
INFO  00:59:04,291 - #7 )
INFO  00:59:04,291 - #5 ;
INFO  00:59:04,291 - #9 print
INFO  00:59:04,292 - #6 (
INFO  00:59:04,292 - #22 v
INFO  00:59:04,292 - #7 )
INFO  00:59:04,293 - #5 ;
INFO  00:59:04,293 - #3 {
INFO  00:59:04,294 - #9 print
INFO  00:59:04,294 - #6 (
INFO  00:59:04,294 - #22 a
INFO  00:59:04,294 - #7 )
INFO  00:59:04,294 - #5 ;
INFO  00:59:04,294 - #4 }
INFO  00:59:04,294 - #4 }
INFO  00:59:04,294 - #4 }
INFO  00:59:04,298 - Program(
 MJProgram
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  SingleVar(
                    Var(
                     x
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [SingleVar]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            VarDeclaration(
              VarDeclarations(
                Type(
                 char
                ) [Type]
                SingleVar(
                  Var(
                   x2
                    ArrayVar(
                    ) [ArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [VarDeclaration]
          ) [VarDeclLists]
          ConstDeclaration(
            ConstDeclarations(
              Type(
               bool
              ) [Type]
              SingleConst(
                ConstInit(
                 y2
                  InitializerBool(
                  ) [InitializerBool]
                ) [ConstInit]
              ) [SingleConst]
            ) [ConstDeclarations]
          ) [ConstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
           nums
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                NoInitEnum(
                 TWO
                ) [NoInitEnum]
              ) [MultipleEnums]
              InitEnum(
               THREE
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
         klasa
          SuperClass(
            Type(
             Inyt
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            InterfList(
              NoInterfList(
                Type(
                 Inter1
                ) [Type]
              ) [NoInterfList]
              Type(
               INter2
              ) [Type]
            ) [InterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   f
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               bool
              ) [Type]
              SingleVar(
                Var(
                 f5
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              NoOptMethods(
              ) [NoOptMethods]
              MethodDeclarations(
                VoidIdentificator(
                ) [VoidIdentificator]
               f
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
       Inter1
        OptInterMethodDeclList(
          SingleInterfaceMethodDeclaration(
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             foo
              OptionalFormPars(
                MultipleFormPars(
                  SingleFormPars(
                    FormParam(
                      Type(
                       int
                      ) [Type]
                     x
                    ) [FormParam]
                  ) [SingleFormPars]
                  FormParArray(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [FormParArray]
                ) [MultipleFormPars]
              ) [OptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [SingleInterfaceMethodDeclaration]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      VoidIdentificator(
      ) [VoidIdentificator]
     m2
      OptionalFormPars(
        SingleFormPars(
          FormParArray(
            Type(
             int
            ) [Type]
           x5
          ) [FormParArray]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            OptionalStmt(
                              OptionalStmt(
                                NoOptionalStmt(
                                ) [NoOptionalStmt]
                                DesignatorStmt(
                                  DesignStmt(
                                    Design(
                                     var
                                      OptDesignator(
                                        OptDesignator(
                                          OptDesignator(
                                            NoDesignator(
                                            ) [NoDesignator]
                                            DesignField(
                                             x
                                            ) [DesignField]
                                          ) [OptDesignator]
                                          DesignField(
                                           d
                                          ) [DesignField]
                                        ) [OptDesignator]
                                        DesignArr(
                                          Expression(
                                            Positive(
                                            ) [Positive]
                                            Terms(
                                              NumFactor(
                                              ) [NumFactor]
                                              WithMulFacts(
                                                WithMulFacts(
                                                  WithMulFacts(
                                                    NoMulFacts(
                                                    ) [NoMulFacts]
                                                    MultOp(
                                                    ) [MultOp]
                                                    NumFactor(
                                                    ) [NumFactor]
                                                  ) [WithMulFacts]
                                                  MultOp(
                                                  ) [MultOp]
                                                  NumFactor(
                                                  ) [NumFactor]
                                                ) [WithMulFacts]
                                                MultOp(
                                                ) [MultOp]
                                                NumFactor(
                                                ) [NumFactor]
                                              ) [WithMulFacts]
                                            ) [Terms]
                                            NoAddTerms(
                                            ) [NoAddTerms]
                                          ) [Expression]
                                        ) [DesignArr]
                                      ) [OptDesignator]
                                    ) [Design]
                                    PlusPlusSideEff(
                                    ) [PlusPlusSideEff]
                                  ) [DesignStmt]
                                ) [DesignatorStmt]
                              ) [OptionalStmt]
                              DesignatorStmt(
                                DesignStmt(
                                  Design(
                                   var
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       a
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  AddSideEff(
                                    AssignOperation(
                                    ) [AssignOperation]
                                    Expression(
                                      Negative(
                                      ) [Negative]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           varA
                                            NoDesignator(
                                            ) [NoDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        WithMulFacts(
                                          WithMulFacts(
                                            NoMulFacts(
                                            ) [NoMulFacts]
                                            MultOp(
                                            ) [MultOp]
                                            DesignFactor(
                                              Design(
                                               varB
                                                NoDesignator(
                                                ) [NoDesignator]
                                              ) [Design]
                                              WithMethodCall(
                                                NoActPars(
                                                ) [NoActPars]
                                              ) [WithMethodCall]
                                            ) [DesignFactor]
                                          ) [WithMulFacts]
                                          MultOp(
                                          ) [MultOp]
                                          DesignFactor(
                                            Design(
                                             varC
                                              NoDesignator(
                                              ) [NoDesignator]
                                            ) [Design]
                                            WithMethodCall(
                                              WithActPars(
                                                SingleActPars(
                                                  Expression(
                                                    Negative(
                                                    ) [Negative]
                                                    Terms(
                                                      BoolFactor(
                                                      ) [BoolFactor]
                                                      NoMulFacts(
                                                      ) [NoMulFacts]
                                                    ) [Terms]
                                                    NoAddTerms(
                                                    ) [NoAddTerms]
                                                  ) [Expression]
                                                ) [SingleActPars]
                                              ) [WithActPars]
                                            ) [WithMethodCall]
                                          ) [DesignFactor]
                                        ) [WithMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [AddSideEff]
                                ) [DesignStmt]
                              ) [DesignatorStmt]
                            ) [OptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 var
                                  OptDesignator(
                                    NoDesignator(
                                    ) [NoDesignator]
                                    DesignField(
                                     b
                                    ) [DesignField]
                                  ) [OptDesignator]
                                ) [Design]
                                PlusPlusSideEff(
                                ) [PlusPlusSideEff]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               var
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   c
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              ActParsSideEff(
                                NoActPars(
                                ) [NoActPars]
                              ) [ActParsSideEff]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             var
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 d
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AddSideEff(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Negative(
                                ) [Negative]
                                Terms(
                                  NewFactor(
                                    Type(
                                     klasa
                                    ) [Type]
                                    NoExpr(
                                    ) [NoExpr]
                                  ) [NewFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AddSideEff]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           var
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               e
                              ) [DesignField]
                            ) [OptDesignator]
                          ) [Design]
                          AddSideEff(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Negative(
                              ) [Negative]
                              Terms(
                                ExprFactor(
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NumFactor(
                                      ) [NumFactor]
                                      WithMulFacts(
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                        MultOp(
                                        ) [MultOp]
                                        NumFactor(
                                        ) [NumFactor]
                                      ) [WithMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [ExprFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AddSideEff]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    StatementDerived3(
                    ) [StatementDerived3]
                  ) [OptionalStmt]
                  StatementDerived4(
                  ) [StatementDerived4]
                ) [OptionalStmt]
                StatementDerived5(
                  OptRetExprDerived2(
                  ) [OptRetExprDerived2]
                ) [StatementDerived5]
              ) [OptionalStmt]
              StatementDerived5(
                OptRetExprDerived1(
                  Expression(
                    Negative(
                    ) [Negative]
                    Terms(
                      NumFactor(
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    WithAddTerms(
                      NoAddTerms(
                      ) [NoAddTerms]
                      MinusOp(
                      ) [MinusOp]
                      Terms(
                        NumFactor(
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                    ) [WithAddTerms]
                  ) [Expression]
                ) [OptRetExprDerived1]
              ) [StatementDerived5]
            ) [OptionalStmt]
            StatementDerived6(
              Design(
               a
                NoDesignator(
                ) [NoDesignator]
              ) [Design]
            ) [StatementDerived6]
          ) [OptionalStmt]
          StatementDerived7(
            Expression(
              Negative(
              ) [Negative]
              Terms(
                CharFactor(
                ) [CharFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [StatementDerived7]
        ) [OptionalStmt]
        StatementDerived8(
          OptionalStmt(
            NoOptionalStmt(
            ) [NoOptionalStmt]
            StatementDerived7(
              Expression(
                Negative(
                ) [Negative]
                Terms(
                  CharFactor(
                  ) [CharFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
              OptNumConstDerived2(
              ) [OptNumConstDerived2]
            ) [StatementDerived7]
          ) [OptionalStmt]
        ) [StatementDerived8]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  00:59:04,298 - ===================================
INFO  00:59:04,302 -  Print count calls = 257
INFO  00:59:04,302 -  Deklarisanih promenljivih ima = 0
