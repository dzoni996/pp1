INFO  21:56:10,611 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  21:56:10,707 - #2 program
INFO  21:56:10,707 - #45 SemanticTest
INFO  21:56:10,707 - #22 const
INFO  21:56:10,709 - #45 int
INFO  21:56:10,709 - #45 x
INFO  21:56:10,710 - #12 =
INFO  21:56:10,711 - #42 5
INFO  21:56:10,711 - #8 ,
INFO  21:56:10,713 - #45 f
INFO  21:56:10,713 - #12 =
INFO  21:56:10,713 - #42 6
INFO  21:56:10,713 - #5 ;
INFO  21:56:10,713 - #22 const
INFO  21:56:10,714 - #45 bool
INFO  21:56:10,714 - #45 b
INFO  21:56:10,714 - #12 =
INFO  21:56:10,714 - #44 false
INFO  21:56:10,714 - #5 ;
INFO  21:56:10,714 - #45 int
INFO  21:56:10,714 - #45 x1
INFO  21:56:10,714 - #8 ,
INFO  21:56:10,716 - #45 x2
INFO  21:56:10,997 - #25 [
INFO  21:56:11,004 - #34 ]
INFO  21:56:11,004 - #5 ;
INFO  21:56:11,006 - #29 enum
INFO  21:56:11,008 - #45 nums
INFO  21:56:11,009 - #3 {
INFO  21:56:11,009 - #45 ONE
INFO  21:56:11,010 - #8 ,
INFO  21:56:11,012 - #45 TWO
INFO  21:56:11,012 - #12 =
INFO  21:56:11,013 - #42 5
INFO  21:56:11,013 - #8 ,
INFO  21:56:11,014 - #45 THREE
INFO  21:56:11,015 - #4 }
INFO  21:56:11,015 - #16 class
INFO  21:56:11,017 - #45 A
INFO  21:56:11,017 - #3 {
INFO  21:56:11,022 - #4 }
INFO  21:56:11,028 - #14 interface
INFO  21:56:11,028 - #45 I
INFO  21:56:11,034 - #3 {
INFO  21:56:11,034 - #45 int
INFO  21:56:11,035 - #45 x
INFO  21:56:11,036 - #6 (
INFO  21:56:11,037 - #7 )
INFO  21:56:11,037 - #5 ;
INFO  21:56:11,037 - #13 void
INFO  21:56:11,041 - #45 p
INFO  21:56:11,042 - #6 (
INFO  21:56:11,046 - #7 )
INFO  21:56:11,046 - #5 ;
INFO  21:56:11,046 - #4 }
INFO  21:56:11,047 - #3 {
INFO  21:56:11,047 - #45 int
INFO  21:56:11,048 - #45 main
INFO  21:56:11,049 - #6 (
INFO  21:56:11,050 - #7 )
INFO  21:56:11,050 - #3 {
INFO  21:56:11,051 - #45 x
INFO  21:56:11,052 - #12 =
INFO  21:56:11,052 - #42 1
INFO  21:56:11,053 - #11 +
INFO  21:56:11,058 - #42 5
INFO  21:56:11,061 - #5 ;
INFO  21:56:11,062 - #45 metod2
INFO  21:56:11,062 - #6 (
INFO  21:56:11,062 - #45 null
INFO  21:56:11,064 - #8 ,
INFO  21:56:11,065 - #43 a
INFO  21:56:11,065 - #8 ,
INFO  21:56:11,066 - #44 true
INFO  21:56:11,066 - #7 )
INFO  21:56:11,066 - #5 ;
INFO  21:56:11,066 - #10 return
INFO  21:56:11,066 - #42 3
INFO  21:56:11,067 - #5 ;
INFO  21:56:11,067 - #4 }
INFO  21:56:11,067 - #13 void
INFO  21:56:11,067 - #45 metod2
INFO  21:56:11,068 - #6 (
INFO  21:56:11,068 - #45 int
INFO  21:56:11,068 - #45 x
INFO  21:56:11,068 - #25 [
INFO  21:56:11,068 - #34 ]
INFO  21:56:11,068 - #8 ,
INFO  21:56:11,068 - #45 char
INFO  21:56:11,069 - #45 y
INFO  21:56:11,069 - #8 ,
INFO  21:56:11,069 - #45 bool
INFO  21:56:11,069 - #45 z
INFO  21:56:11,069 - #7 )
INFO  21:56:11,069 - #3 {
INFO  21:56:11,070 - #4 }
INFO  21:56:11,070 - #4 }
INFO  21:56:11,084 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              ConstDeclaration(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleConsts(
                    SingleConst(
                      ConstItem(
                       x
                        InitializerNum(
                         5
                        ) [InitializerNum]
                      ) [ConstItem]
                    ) [SingleConst]
                    ConstItem(
                     f
                      InitializerNum(
                       6
                      ) [InitializerNum]
                    ) [ConstItem]
                  ) [MultipleConsts]
                ) [ConstDeclarations]
              ) [ConstDeclaration]
            ) [VarDeclLists]
            ConstDeclaration(
              ConstDeclarations(
                Type(
                 bool
                ) [Type]
                SingleConst(
                  ConstItem(
                   b
                    InitializerBool(
                     false
                    ) [InitializerBool]
                  ) [ConstItem]
                ) [SingleConst]
              ) [ConstDeclarations]
            ) [ConstDeclaration]
          ) [VarDeclLists]
          VarDeclaration(
            VarDeclarations(
              Type(
               int
              ) [Type]
              MultipleVars(
                SingleVar(
                  Var(
                   x1
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
                Var(
                 x2
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [MultipleVars]
            ) [VarDeclarations]
          ) [VarDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             nums
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TWO
                 5
                ) [InitEnum]
              ) [MultipleEnums]
              NoInitEnum(
               THREE
              ) [NoInitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           A
          ) [ClassName]
          NoSuperClass(
          ) [NoSuperClass]
          NoImplInteraces(
          ) [NoImplInteraces]
          NoOptVars(
          ) [NoOptVars]
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
        InterName(
         I
        ) [InterName]
        OptInterMethodDeclList(
          InterfaceMethodDeclarations(
            SingleInterfaceMethodDeclaration(
              InterfaceMethodDeclaration(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               x
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
              ) [InterfaceMethodDeclaration]
            ) [SingleInterfaceMethodDeclaration]
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             p
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [InterfaceMethodDeclarations]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  ProgMethodDeclaration(
    OptMethods(
      OptMethods(
        NoOptMethods(
        ) [NoOptMethods]
        MethodDeclarations(
          MethodDeclTypeName(
            TypeIdentificator(
              Type(
               int
              ) [Type]
            ) [TypeIdentificator]
           main
          ) [MethodDeclTypeName]
          NoOptionalFormPars(
          ) [NoOptionalFormPars]
          NoOptVars(
          ) [NoOptVars]
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                NoOptionalStmt(
                ) [NoOptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    DesignVar(
                      DesignName(
                       x
                      ) [DesignName]
                    ) [DesignVar]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NumFactor(
                           1
                          ) [NumFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        WithAddTerms(
                          NoAddTerms(
                          ) [NoAddTerms]
                          PlusOp(
                          ) [PlusOp]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                        ) [WithAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              DesignatorStmt(
                DesignStmt(
                  DesignVar(
                    DesignName(
                     metod2
                    ) [DesignName]
                  ) [DesignVar]
                  ProcCall(
                    WithActPars(
                      MultiActPars(
                        MultiActPars(
                          SingleActPars(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  DesignVar(
                                    DesignName(
                                     null
                                    ) [DesignName]
                                  ) [DesignVar]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [SingleActPars]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              CharFactor(
                               a
                              ) [CharFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [MultiActPars]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            BoolFactor(
                             true
                            ) [BoolFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [MultiActPars]
                    ) [WithActPars]
                  ) [ProcCall]
                ) [DesignStmt]
              ) [DesignatorStmt]
            ) [OptionalStmt]
            ReturnStmt(
              RetExpr(
                Expression(
                  Positive(
                  ) [Positive]
                  Terms(
                    NumFactor(
                     3
                    ) [NumFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  NoAddTerms(
                  ) [NoAddTerms]
                ) [Expression]
              ) [RetExpr]
            ) [ReturnStmt]
          ) [OptionalStmt]
        ) [MethodDeclarations]
      ) [OptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          VoidIdentificator(
          ) [VoidIdentificator]
         metod2
        ) [MethodDeclTypeName]
        OptionalFormPars(
          MultipleFormPars(
            MultipleFormPars(
              SingleFormPars(
                FormParItem(
                  Type(
                   int
                  ) [Type]
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [FormParItem]
              ) [SingleFormPars]
              FormParItem(
                Type(
                 char
                ) [Type]
               y
                NoArrayVar(
                ) [NoArrayVar]
              ) [FormParItem]
            ) [MultipleFormPars]
            FormParItem(
              Type(
               bool
              ) [Type]
             z
              NoArrayVar(
              ) [NoArrayVar]
            ) [FormParItem]
          ) [MultipleFormPars]
        ) [OptionalFormPars]
        NoOptVars(
        ) [NoOptVars]
        NoOptionalStmt(
        ) [NoOptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
  ) [ProgMethodDeclaration]
) [Program]
INFO  21:56:11,084 - ===================================
INFO  21:56:11,084 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  21:56:11,084 - INFO:  Deklarisana globalna konstanta x na liniji 6
INFO  21:56:11,095 - INFO:  Deklarisana globalna konstanta f na liniji 6
INFO  21:56:11,095 - INFO:  Deklarisana globalna konstanta b na liniji 7
INFO  21:56:11,103 - INFO:  Deklarisana globalna promenljiva x1 na liniji 8
INFO  21:56:11,103 - INFO:  Deklarisan niz x2 na liniji 8
INFO  21:56:11,103 - INFO:  Definisan enum tip nums na liniji 10
INFO  21:56:11,103 - INFO:  Definisana klasa A na liniji 12
INFO  21:56:11,103 - INFO:  Deklarisan metod x u interfejsu na liniji 14
INFO  21:56:11,104 - INFO:  Deklarisan metod p u interfejsu na liniji 15
INFO  21:56:11,104 - INFO:  Definisan interfejs I na liniji 13
INFO  21:56:11,105 - INFO: Obradjuje se funkcija main na liniji 19
ERROR 21:56:11,106 - ERROR: Promenljiva metod2 nije deklarisana na liniji 21		<--------------- ERROR 
