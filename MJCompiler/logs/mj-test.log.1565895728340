INFO  21:01:34,801 - Compiling source file: C:\Storage\PP1\Projekat\2. sintaksna analiza\Izvorni kod\MJCompiler2\test\program.mj
INFO  21:01:34,863 - #2 program
INFO  21:01:34,863 - #46 MJProgram
INFO  21:01:34,863 - #46 int
INFO  21:01:34,864 - #46 x
INFO  21:01:34,864 - #5 ;
INFO  21:01:34,865 - #46 char
INFO  21:01:34,866 - #46 x2
INFO  21:01:34,866 - #26 [
INFO  21:01:34,866 - #36 ]
INFO  21:01:34,866 - #5 ;
INFO  21:01:34,867 - #23 const
INFO  21:01:34,867 - #46 bool
INFO  21:01:34,867 - #46 y2
INFO  21:01:34,867 - #12 =
INFO  21:01:34,867 - #28 true
INFO  21:01:34,867 - #5 ;
INFO  21:01:34,869 - #31 enum
INFO  21:01:34,870 - #46 nums
INFO  21:01:34,870 - #3 {
INFO  21:01:34,870 - #46 ONE
INFO  21:01:34,870 - #8 ,
INFO  21:01:34,871 - #46 TWO
INFO  21:01:34,871 - #8 ,
INFO  21:01:34,871 - #46 THREE
INFO  21:01:34,871 - #12 =
INFO  21:01:34,871 - #42 3
INFO  21:01:34,872 - #4 }
INFO  21:01:34,872 - #16 class
INFO  21:01:34,872 - #46 klasa
INFO  21:01:34,872 - #41 extends
INFO  21:01:34,872 - #46 Inyt
INFO  21:01:34,872 - #43 implements
INFO  21:01:34,872 - #46 Inter1
INFO  21:01:34,872 - #8 ,
INFO  21:01:34,872 - #46 INter2
INFO  21:01:34,872 - #3 {
INFO  21:01:34,873 - #46 int
INFO  21:01:34,874 - #46 f
INFO  21:01:34,874 - #5 ;
INFO  21:01:34,874 - #46 bool
INFO  21:01:34,874 - #46 f5
INFO  21:01:34,874 - #26 [
INFO  21:01:34,874 - #36 ]
INFO  21:01:34,874 - #5 ;
INFO  21:01:34,874 - #3 {
INFO  21:01:34,874 - #13 void
INFO  21:01:34,875 - #46 f
INFO  21:01:34,876 - #6 (
INFO  21:01:34,876 - #7 )
INFO  21:01:34,877 - #3 {
INFO  21:01:34,877 - #4 }
INFO  21:01:34,878 - #4 }
INFO  21:01:34,878 - #4 }
INFO  21:01:34,878 - #14 interface
INFO  21:01:34,879 - #46 Inter1
INFO  21:01:34,879 - #3 {
INFO  21:01:34,879 - #13 void
INFO  21:01:34,879 - #46 foo
INFO  21:01:34,879 - #6 (
INFO  21:01:34,879 - #46 int
INFO  21:01:34,879 - #46 x
INFO  21:01:34,879 - #8 ,
INFO  21:01:34,879 - #46 int
INFO  21:01:34,880 - #46 z
INFO  21:01:34,880 - #26 [
INFO  21:01:34,880 - #36 ]
INFO  21:01:34,880 - #7 )
INFO  21:01:34,881 - #5 ;
INFO  21:01:34,881 - #4 }
INFO  21:01:34,881 - #3 {
INFO  21:01:34,882 - #13 void
INFO  21:01:34,882 - #46 m2
INFO  21:01:34,882 - #6 (
INFO  21:01:34,882 - #46 int
INFO  21:01:34,882 - #46 x5
INFO  21:01:34,882 - #26 [
INFO  21:01:34,883 - #36 ]
INFO  21:01:34,883 - #7 )
INFO  21:01:34,883 - #3 {
INFO  21:01:34,883 - #46 var
INFO  21:01:34,883 - #15 .
INFO  21:01:34,884 - #46 x
INFO  21:01:34,884 - #15 .
INFO  21:01:34,884 - #46 d
INFO  21:01:34,884 - #26 [
INFO  21:01:34,884 - #35 -
INFO  21:01:34,884 - #42 5
INFO  21:01:34,886 - #32 *
INFO  21:01:34,887 - #42 8
INFO  21:01:34,888 - #32 *
INFO  21:01:34,888 - #42 9
INFO  21:01:34,888 - #32 *
INFO  21:01:34,888 - #42 8
INFO  21:01:34,888 - #36 ]
INFO  21:01:34,889 - #40 ++
INFO  21:01:34,889 - #5 ;
INFO  21:01:34,890 - #46 var
INFO  21:01:34,890 - #15 .
INFO  21:01:34,890 - #46 a
INFO  21:01:34,890 - #12 =
INFO  21:01:34,896 - #46 varA
INFO  21:01:34,897 - #32 *
INFO  21:01:34,898 - #46 varB
INFO  21:01:34,898 - #6 (
INFO  21:01:34,898 - #7 )
INFO  21:01:34,898 - #32 *
INFO  21:01:34,898 - #46 varC
INFO  21:01:34,898 - #6 (
INFO  21:01:34,899 - #28 false
INFO  21:01:34,899 - #7 )
INFO  21:01:34,899 - #5 ;
INFO  21:01:34,900 - #46 var
INFO  21:01:34,900 - #15 .
INFO  21:01:34,900 - #46 b
INFO  21:01:34,900 - #40 ++
INFO  21:01:34,900 - #5 ;
INFO  21:01:34,900 - #46 var
INFO  21:01:34,900 - #15 .
INFO  21:01:34,900 - #46 c
INFO  21:01:34,900 - #6 (
INFO  21:01:34,900 - #7 )
INFO  21:01:34,900 - #5 ;
INFO  21:01:34,901 - #46 var
INFO  21:01:34,901 - #15 .
INFO  21:01:34,901 - #46 d
INFO  21:01:34,901 - #12 =
INFO  21:01:34,901 - #18 new
INFO  21:01:34,901 - #46 klasa
INFO  21:01:34,901 - #5 ;
INFO  21:01:34,902 - #46 var
INFO  21:01:34,902 - #15 .
INFO  21:01:34,902 - #46 e
INFO  21:01:34,902 - #12 =
INFO  21:01:34,902 - #6 (
INFO  21:01:34,902 - #35 -
INFO  21:01:34,903 - #42 25
INFO  21:01:34,903 - #32 *
INFO  21:01:34,903 - #42 9
INFO  21:01:34,903 - #7 )
INFO  21:01:34,903 - #5 ;
INFO  21:01:34,903 - #17 break
INFO  21:01:34,903 - #5 ;
INFO  21:01:34,903 - #38 continue
INFO  21:01:34,904 - #5 ;
INFO  21:01:34,904 - #10 return
INFO  21:01:34,904 - #5 ;
INFO  21:01:34,905 - #10 return
INFO  21:01:34,905 - #42 1
INFO  21:01:34,905 - #35 -
INFO  21:01:34,905 - #42 2
INFO  21:01:34,906 - #5 ;
INFO  21:01:34,906 - #27 read
INFO  21:01:34,906 - #6 (
INFO  21:01:34,906 - #46 a
INFO  21:01:34,906 - #7 )
INFO  21:01:34,906 - #5 ;
INFO  21:01:34,906 - #9 print
INFO  21:01:34,907 - #6 (
INFO  21:01:34,907 - #22 v
INFO  21:01:34,907 - #7 )
INFO  21:01:34,908 - #5 ;
INFO  21:01:34,908 - #4 }
INFO  21:01:34,909 - #4 }
INFO  21:01:34,912 - Program(
 MJProgram
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  SingleVar(
                    Var(
                     x
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [SingleVar]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            VarDeclaration(
              VarDeclarations(
                Type(
                 char
                ) [Type]
                SingleVar(
                  Var(
                   x2
                    ArrayVar(
                    ) [ArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [VarDeclaration]
          ) [VarDeclLists]
          ConstDeclaration(
            ConstDeclarations(
              Type(
               bool
              ) [Type]
              SingleConst(
                ConstInit(
                 y2
                  InitializerBool(
                  ) [InitializerBool]
                ) [ConstInit]
              ) [SingleConst]
            ) [ConstDeclarations]
          ) [ConstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
           nums
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                NoInitEnum(
                 TWO
                ) [NoInitEnum]
              ) [MultipleEnums]
              InitEnum(
               THREE
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
         klasa
          SuperClass(
            Type(
             Inyt
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            InterfList(
              NoInterfList(
                Type(
                 Inter1
                ) [Type]
              ) [NoInterfList]
              Type(
               INter2
              ) [Type]
            ) [InterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   f
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               bool
              ) [Type]
              SingleVar(
                Var(
                 f5
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              NoOptMethods(
              ) [NoOptMethods]
              MethodDeclarations(
                VoidIdentificator(
                ) [VoidIdentificator]
               f
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
       Inter1
        OptInterMethodDeclList(
          SingleInterfaceMethodDeclaration(
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             foo
              OptionalFormPars(
                MultipleFormPars(
                  SingleFormPars(
                    FormParam(
                      Type(
                       int
                      ) [Type]
                     x
                    ) [FormParam]
                  ) [SingleFormPars]
                  FormParArray(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [FormParArray]
                ) [MultipleFormPars]
              ) [OptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [SingleInterfaceMethodDeclaration]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      VoidIdentificator(
      ) [VoidIdentificator]
     m2
      OptionalFormPars(
        SingleFormPars(
          FormParArray(
            Type(
             int
            ) [Type]
           x5
          ) [FormParArray]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            OptionalStmt(
                              NoOptionalStmt(
                              ) [NoOptionalStmt]
                              DesignatorStmt(
                                DesignStmt(
                                  Design(
                                   var
                                    OptDesignator(
                                      OptDesignator(
                                        OptDesignator(
                                          NoDesignator(
                                          ) [NoDesignator]
                                          DesignField(
                                           x
                                          ) [DesignField]
                                        ) [OptDesignator]
                                        DesignField(
                                         d
                                        ) [DesignField]
                                      ) [OptDesignator]
                                      DesignArr(
                                        Expression(
                                          Positive(
                                          ) [Positive]
                                          Terms(
                                            NumFactor(
                                            ) [NumFactor]
                                            WithMulFacts(
                                              WithMulFacts(
                                                WithMulFacts(
                                                  NoMulFacts(
                                                  ) [NoMulFacts]
                                                  MultOp(
                                                  ) [MultOp]
                                                  NumFactor(
                                                  ) [NumFactor]
                                                ) [WithMulFacts]
                                                MultOp(
                                                ) [MultOp]
                                                NumFactor(
                                                ) [NumFactor]
                                              ) [WithMulFacts]
                                              MultOp(
                                              ) [MultOp]
                                              NumFactor(
                                              ) [NumFactor]
                                            ) [WithMulFacts]
                                          ) [Terms]
                                          NoAddTerms(
                                          ) [NoAddTerms]
                                        ) [Expression]
                                      ) [DesignArr]
                                    ) [OptDesignator]
                                  ) [Design]
                                  PlusPlusSideEff(
                                  ) [PlusPlusSideEff]
                                ) [DesignStmt]
                              ) [DesignatorStmt]
                            ) [OptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 var
                                  OptDesignator(
                                    NoDesignator(
                                    ) [NoDesignator]
                                    DesignField(
                                     a
                                    ) [DesignField]
                                  ) [OptDesignator]
                                ) [Design]
                                AddSideEff(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Negative(
                                    ) [Negative]
                                    Terms(
                                      DesignFactor(
                                        Design(
                                         varA
                                          NoDesignator(
                                          ) [NoDesignator]
                                        ) [Design]
                                        NoMethodCall(
                                        ) [NoMethodCall]
                                      ) [DesignFactor]
                                      WithMulFacts(
                                        WithMulFacts(
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                          MultOp(
                                          ) [MultOp]
                                          DesignFactor(
                                            Design(
                                             varB
                                              NoDesignator(
                                              ) [NoDesignator]
                                            ) [Design]
                                            WithMethodCall(
                                              NoActPars(
                                              ) [NoActPars]
                                            ) [WithMethodCall]
                                          ) [DesignFactor]
                                        ) [WithMulFacts]
                                        MultOp(
                                        ) [MultOp]
                                        DesignFactor(
                                          Design(
                                           varC
                                            NoDesignator(
                                            ) [NoDesignator]
                                          ) [Design]
                                          WithMethodCall(
                                            WithActPars(
                                              SingleActPars(
                                                Expression(
                                                  Negative(
                                                  ) [Negative]
                                                  Terms(
                                                    BoolFactor(
                                                    ) [BoolFactor]
                                                    NoMulFacts(
                                                    ) [NoMulFacts]
                                                  ) [Terms]
                                                  NoAddTerms(
                                                  ) [NoAddTerms]
                                                ) [Expression]
                                              ) [SingleActPars]
                                            ) [WithActPars]
                                          ) [WithMethodCall]
                                        ) [DesignFactor]
                                      ) [WithMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AddSideEff]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               var
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   b
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              PlusPlusSideEff(
                              ) [PlusPlusSideEff]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             var
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 c
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            ActParsSideEff(
                              NoActPars(
                              ) [NoActPars]
                            ) [ActParsSideEff]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           var
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               d
                              ) [DesignField]
                            ) [OptDesignator]
                          ) [Design]
                          AddSideEff(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Negative(
                              ) [Negative]
                              Terms(
                                NewFactor(
                                  Type(
                                   klasa
                                  ) [Type]
                                  NoExpr(
                                  ) [NoExpr]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AddSideEff]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         var
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             e
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AddSideEff(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Negative(
                            ) [Negative]
                            Terms(
                              ExprFactor(
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NumFactor(
                                    ) [NumFactor]
                                    WithMulFacts(
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                      MultOp(
                                      ) [MultOp]
                                      NumFactor(
                                      ) [NumFactor]
                                    ) [WithMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [ExprFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AddSideEff]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  StatementDerived3(
                  ) [StatementDerived3]
                ) [OptionalStmt]
                StatementDerived4(
                ) [StatementDerived4]
              ) [OptionalStmt]
              StatementDerived5(
                OptRetExprDerived2(
                ) [OptRetExprDerived2]
              ) [StatementDerived5]
            ) [OptionalStmt]
            StatementDerived5(
              OptRetExprDerived1(
                Expression(
                  Negative(
                  ) [Negative]
                  Terms(
                    NumFactor(
                    ) [NumFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  WithAddTerms(
                    NoAddTerms(
                    ) [NoAddTerms]
                    MinusOp(
                    ) [MinusOp]
                    Terms(
                      NumFactor(
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                  ) [WithAddTerms]
                ) [Expression]
              ) [OptRetExprDerived1]
            ) [StatementDerived5]
          ) [OptionalStmt]
          StatementDerived6(
            Design(
             a
              NoDesignator(
              ) [NoDesignator]
            ) [Design]
          ) [StatementDerived6]
        ) [OptionalStmt]
        StatementDerived7(
          Expression(
            Negative(
            ) [Negative]
            Terms(
              CharFactor(
              ) [CharFactor]
              NoMulFacts(
              ) [NoMulFacts]
            ) [Terms]
            NoAddTerms(
            ) [NoAddTerms]
          ) [Expression]
          OptNumConstDerived2(
          ) [OptNumConstDerived2]
        ) [StatementDerived7]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  21:01:34,912 - ===================================
INFO  21:01:34,915 -  Print count calls = 245
INFO  21:01:34,915 -  Deklarisanih promenljivih ima = 0
