INFO  01:55:56,348 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  01:55:56,427 - #2 program
INFO  01:55:56,427 - #45 SemanticTest
INFO  01:55:56,427 - #22 const
INFO  01:55:56,428 - #45 int
INFO  01:55:56,428 - #45 x
INFO  01:55:56,429 - #12 =
INFO  01:55:56,429 - #42 5
INFO  01:55:56,429 - #8 ,
INFO  01:55:56,431 - #45 init
INFO  01:55:56,431 - #12 =
INFO  01:55:56,431 - #42 0
INFO  01:55:56,431 - #5 ;
INFO  01:55:56,431 - #45 int
INFO  01:55:56,432 - #45 x1
INFO  01:55:56,432 - #5 ;
INFO  01:55:56,433 - #45 int
INFO  01:55:56,433 - #45 x2
INFO  01:55:56,433 - #25 [
INFO  01:55:56,433 - #34 ]
INFO  01:55:56,433 - #5 ;
INFO  01:55:56,434 - #29 enum
INFO  01:55:56,434 - #45 nums
INFO  01:55:56,435 - #3 {
INFO  01:55:56,435 - #45 ONE
INFO  01:55:56,435 - #12 =
INFO  01:55:56,435 - #42 1
INFO  01:55:56,435 - #8 ,
INFO  01:55:56,435 - #45 TWO
INFO  01:55:56,435 - #12 =
INFO  01:55:56,436 - #42 5
INFO  01:55:56,436 - #8 ,
INFO  01:55:56,436 - #45 THREE
INFO  01:55:56,436 - #4 }
INFO  01:55:56,436 - #3 {
INFO  01:55:56,436 - #45 int
INFO  01:55:56,437 - #45 main
INFO  01:55:56,437 - #6 (
INFO  01:55:56,437 - #7 )
INFO  01:55:56,437 - #45 int
INFO  01:55:56,438 - #45 var
INFO  01:55:56,438 - #5 ;
INFO  01:55:56,439 - #3 {
INFO  01:55:56,439 - #45 var
INFO  01:55:56,439 - #12 =
INFO  01:55:56,440 - #42 10
INFO  01:55:56,441 - #5 ;
INFO  01:55:56,443 - #9 print
INFO  01:55:56,444 - #6 (
INFO  01:55:56,444 - #45 x
INFO  01:55:56,444 - #7 )
INFO  01:55:56,445 - #5 ;
INFO  01:55:56,445 - #10 return
INFO  01:55:56,445 - #42 0
INFO  01:55:56,445 - #5 ;
INFO  01:55:56,445 - #4 }
INFO  01:55:56,445 - #4 }
INFO  01:55:56,455 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          NoVarDecl(
          ) [NoVarDecl]
          ConstDeclaration(
            ConstDeclarations(
              Type(
               int
              ) [Type]
              MultipleConsts(
                SingleConst(
                  ConstItem(
                   x
                    InitializerNum(
                     5
                    ) [InitializerNum]
                  ) [ConstItem]
                ) [SingleConst]
                ConstItem(
                 init
                  InitializerNum(
                   0
                  ) [InitializerNum]
                ) [ConstItem]
              ) [MultipleConsts]
            ) [ConstDeclarations]
          ) [ConstDeclaration]
        ) [VarDeclLists]
        VarDeclaration(
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               x1
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [VarDeclaration]
      ) [VarDeclLists]
      VarDeclaration(
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x2
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [VarDeclaration]
    ) [VarDeclLists]
    EnumDeclaration(
      EnumDeclarations(
        EnumNamed(
         nums
        ) [EnumNamed]
        MultipleEnums(
          MultipleEnums(
            SingleEnum(
              InitEnum(
               ONE
               1
              ) [InitEnum]
            ) [SingleEnum]
            InitEnum(
             TWO
             5
            ) [InitEnum]
          ) [MultipleEnums]
          NoInitEnum(
           THREE
          ) [NoInitEnum]
        ) [MultipleEnums]
      ) [EnumDeclarations]
    ) [EnumDeclaration]
  ) [VarDeclLists]
  GlobalMeths(
    OptMethods(
      NoOptMethods(
      ) [NoOptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          TypeIdentificator(
            Type(
             int
            ) [Type]
          ) [TypeIdentificator]
         main
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        OptVars(
          NoOptVars(
          ) [NoOptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               var
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              NoOptionalStmt(
              ) [NoOptionalStmt]
              DesignatorStmt(
                AssignOper(
                  DesignVar(
                    DesignatorName(
                     var
                    ) [DesignatorName]
                  ) [DesignVar]
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      NumFactor(
                       10
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                ) [AssignOper]
              ) [DesignatorStmt]
            ) [OptionalStmt]
            PrintStmt(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  DesignFactor(
                    DesignVar(
                      DesignatorName(
                       x
                      ) [DesignatorName]
                    ) [DesignVar]
                    NoMethodCall(
                    ) [NoMethodCall]
                  ) [DesignFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
              OptNumConstDerived2(
              ) [OptNumConstDerived2]
            ) [PrintStmt]
          ) [OptionalStmt]
          ReturnStmt(
            RetExpr(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  NumFactor(
                   0
                  ) [NumFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
            ) [RetExpr]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
  ) [GlobalMeths]
) [Program]
INFO  01:55:56,455 - ===================================
INFO  01:55:56,455 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  01:55:56,456 - INFO:  Deklarisana konstanta x na liniji 6
INFO  01:55:56,456 - INFO:  Deklarisana konstanta init na liniji 6
INFO  01:55:56,456 - INFO:  Deklarisana globalna promenljiva x1 na liniji 7
INFO  01:55:56,456 - INFO:  Deklarisan niz x2 na liniji 8
INFO  01:55:56,456 - INFO:  Definisan enum tip nums na liniji 9
INFO  01:55:56,457 - INFO:  Obradjuje se funkcija main na liniji 17
INFO  01:55:56,457 - INFO:  Deklarisana promenljiva var na liniji 17
INFO  01:55:56,457 - INFO:  Pristup simbolu var na liniji 18
INFO  01:55:56,458 - INFO:  Pristup simbolu x na liniji 21
INFO  01:55:56,458 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  01:55:56,458 - INFO:  Deklarisan metod main na liniji 17
INFO  01:55:56,458 - ===================================
INFO  01:55:56,469 - Uspesno parsiranje!
