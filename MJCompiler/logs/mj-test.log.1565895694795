INFO  21:00:58,625 - Compiling source file: C:\Storage\PP1\Projekat\2. sintaksna analiza\Izvorni kod\MJCompiler2\test\program.mj
INFO  21:00:58,704 - #2 program
INFO  21:00:58,704 - #46 MJProgram
INFO  21:00:58,704 - #46 int
INFO  21:00:58,705 - #46 x
INFO  21:00:58,706 - #5 ;
INFO  21:00:58,708 - #46 char
INFO  21:00:58,708 - #46 x2
INFO  21:00:58,709 - #26 [
INFO  21:00:58,709 - #36 ]
INFO  21:00:58,709 - #5 ;
INFO  21:00:58,711 - #23 const
INFO  21:00:58,711 - #46 bool
INFO  21:00:58,711 - #46 y2
INFO  21:00:58,711 - #12 =
INFO  21:00:58,711 - #28 true
INFO  21:00:58,711 - #5 ;
INFO  21:00:58,713 - #31 enum
INFO  21:00:58,714 - #46 nums
INFO  21:00:58,714 - #3 {
INFO  21:00:58,714 - #46 ONE
INFO  21:00:58,714 - #8 ,
INFO  21:00:58,715 - #46 TWO
INFO  21:00:58,716 - #8 ,
INFO  21:00:58,716 - #46 THREE
INFO  21:00:58,716 - #12 =
INFO  21:00:58,716 - #42 3
INFO  21:00:58,716 - #4 }
INFO  21:00:58,716 - #16 class
INFO  21:00:58,717 - #46 klasa
INFO  21:00:58,717 - #41 extends
INFO  21:00:58,717 - #46 Inyt
INFO  21:00:58,717 - #43 implements
INFO  21:00:58,717 - #46 Inter1
INFO  21:00:58,717 - #8 ,
INFO  21:00:58,717 - #46 INter2
INFO  21:00:58,718 - #3 {
INFO  21:00:58,718 - #46 int
INFO  21:00:58,719 - #46 f
INFO  21:00:58,719 - #5 ;
INFO  21:00:58,720 - #46 bool
INFO  21:00:58,720 - #46 f5
INFO  21:00:58,720 - #26 [
INFO  21:00:58,720 - #36 ]
INFO  21:00:58,720 - #5 ;
INFO  21:00:58,720 - #3 {
INFO  21:00:58,720 - #13 void
INFO  21:00:58,721 - #46 f
INFO  21:00:58,722 - #6 (
INFO  21:00:58,722 - #7 )
INFO  21:00:58,723 - #3 {
INFO  21:00:58,723 - #4 }
INFO  21:00:58,724 - #4 }
INFO  21:00:58,725 - #4 }
INFO  21:00:58,725 - #14 interface
INFO  21:00:58,726 - #46 Inter1
INFO  21:00:58,726 - #3 {
INFO  21:00:58,726 - #13 void
INFO  21:00:58,726 - #46 foo
INFO  21:00:58,727 - #6 (
INFO  21:00:58,727 - #46 int
INFO  21:00:58,727 - #46 x
INFO  21:00:58,727 - #8 ,
INFO  21:00:58,727 - #46 int
INFO  21:00:58,728 - #46 z
INFO  21:00:58,728 - #26 [
INFO  21:00:58,728 - #36 ]
INFO  21:00:58,728 - #7 )
INFO  21:00:58,729 - #5 ;
INFO  21:00:58,729 - #4 }
INFO  21:00:58,729 - #3 {
INFO  21:00:58,730 - #13 void
INFO  21:00:58,730 - #46 m2
INFO  21:00:58,730 - #6 (
INFO  21:00:58,730 - #46 int
INFO  21:00:58,730 - #46 x5
INFO  21:00:58,731 - #26 [
INFO  21:00:58,731 - #36 ]
INFO  21:00:58,731 - #7 )
INFO  21:00:58,731 - #3 {
INFO  21:00:58,731 - #46 var
INFO  21:00:58,731 - #15 .
INFO  21:00:58,732 - #46 x
INFO  21:00:58,732 - #15 .
INFO  21:00:58,732 - #46 d
INFO  21:00:58,732 - #26 [
INFO  21:00:58,732 - #35 -
INFO  21:00:58,733 - #42 5
INFO  21:00:58,734 - #32 *
INFO  21:00:58,736 - #42 8
INFO  21:00:58,737 - #32 *
INFO  21:00:58,737 - #42 9
INFO  21:00:58,737 - #32 *
INFO  21:00:58,737 - #42 8
INFO  21:00:58,737 - #36 ]
INFO  21:00:58,739 - #40 ++
INFO  21:00:58,739 - #5 ;
INFO  21:00:58,740 - #46 var
INFO  21:00:58,740 - #15 .
INFO  21:00:58,740 - #46 a
INFO  21:00:58,741 - #12 =
INFO  21:00:58,747 - #46 varA
INFO  21:00:58,748 - #32 *
INFO  21:00:58,749 - #46 varB
INFO  21:00:58,749 - #6 (
INFO  21:00:58,749 - #7 )
INFO  21:00:58,750 - #32 *
INFO  21:00:58,750 - #46 varC
INFO  21:00:58,751 - #6 (
INFO  21:00:58,751 - #28 false
INFO  21:00:58,751 - #7 )
INFO  21:00:58,752 - #5 ;
INFO  21:00:58,752 - #46 var
INFO  21:00:58,752 - #15 .
INFO  21:00:58,752 - #46 b
INFO  21:00:58,752 - #40 ++
INFO  21:00:58,753 - #5 ;
INFO  21:00:58,753 - #46 var
INFO  21:00:58,753 - #15 .
INFO  21:00:58,753 - #46 c
INFO  21:00:58,753 - #6 (
INFO  21:00:58,753 - #7 )
INFO  21:00:58,753 - #5 ;
INFO  21:00:58,753 - #46 var
INFO  21:00:58,753 - #15 .
INFO  21:00:58,754 - #46 d
INFO  21:00:58,754 - #12 =
INFO  21:00:58,754 - #18 new
INFO  21:00:58,754 - #46 klasa
INFO  21:00:58,754 - #5 ;
INFO  21:00:58,755 - #46 var
INFO  21:00:58,755 - #15 .
INFO  21:00:58,756 - #46 e
INFO  21:00:58,756 - #12 =
INFO  21:00:58,756 - #6 (
INFO  21:00:58,756 - #35 -
INFO  21:00:58,756 - #42 25
INFO  21:00:58,756 - #32 *
INFO  21:00:58,756 - #42 9
INFO  21:00:58,756 - #7 )
INFO  21:00:58,756 - #5 ;
INFO  21:00:58,756 - #17 break
INFO  21:00:58,757 - #5 ;
INFO  21:00:58,757 - #38 continue
INFO  21:00:58,758 - #5 ;
INFO  21:00:58,758 - #10 return
INFO  21:00:58,759 - #5 ;
INFO  21:00:58,760 - #10 return
INFO  21:00:58,760 - #42 1
INFO  21:00:58,760 - #35 -
INFO  21:00:58,760 - #42 2
INFO  21:00:58,762 - #5 ;
INFO  21:00:58,762 - #4 }
INFO  21:00:58,763 - #4 }
INFO  21:00:58,767 - Program(
 MJProgram
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  SingleVar(
                    Var(
                     x
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [SingleVar]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            VarDeclaration(
              VarDeclarations(
                Type(
                 char
                ) [Type]
                SingleVar(
                  Var(
                   x2
                    ArrayVar(
                    ) [ArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [VarDeclaration]
          ) [VarDeclLists]
          ConstDeclaration(
            ConstDeclarations(
              Type(
               bool
              ) [Type]
              SingleConst(
                ConstInit(
                 y2
                  InitializerBool(
                  ) [InitializerBool]
                ) [ConstInit]
              ) [SingleConst]
            ) [ConstDeclarations]
          ) [ConstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
           nums
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                NoInitEnum(
                 TWO
                ) [NoInitEnum]
              ) [MultipleEnums]
              InitEnum(
               THREE
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
         klasa
          SuperClass(
            Type(
             Inyt
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            InterfList(
              NoInterfList(
                Type(
                 Inter1
                ) [Type]
              ) [NoInterfList]
              Type(
               INter2
              ) [Type]
            ) [InterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   f
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               bool
              ) [Type]
              SingleVar(
                Var(
                 f5
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              NoOptMethods(
              ) [NoOptMethods]
              MethodDeclarations(
                VoidIdentificator(
                ) [VoidIdentificator]
               f
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
       Inter1
        OptInterMethodDeclList(
          SingleInterfaceMethodDeclaration(
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             foo
              OptionalFormPars(
                MultipleFormPars(
                  SingleFormPars(
                    FormParam(
                      Type(
                       int
                      ) [Type]
                     x
                    ) [FormParam]
                  ) [SingleFormPars]
                  FormParArray(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [FormParArray]
                ) [MultipleFormPars]
              ) [OptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [SingleInterfaceMethodDeclaration]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      VoidIdentificator(
      ) [VoidIdentificator]
     m2
      OptionalFormPars(
        SingleFormPars(
          FormParArray(
            Type(
             int
            ) [Type]
           x5
          ) [FormParArray]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          NoOptionalStmt(
                          ) [NoOptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               var
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       x
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     d
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                        ) [NumFactor]
                                        WithMulFacts(
                                          WithMulFacts(
                                            WithMulFacts(
                                              NoMulFacts(
                                              ) [NoMulFacts]
                                              MultOp(
                                              ) [MultOp]
                                              NumFactor(
                                              ) [NumFactor]
                                            ) [WithMulFacts]
                                            MultOp(
                                            ) [MultOp]
                                            NumFactor(
                                            ) [NumFactor]
                                          ) [WithMulFacts]
                                          MultOp(
                                          ) [MultOp]
                                          NumFactor(
                                          ) [NumFactor]
                                        ) [WithMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              PlusPlusSideEff(
                              ) [PlusPlusSideEff]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             var
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 a
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AddSideEff(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Negative(
                                ) [Negative]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     varA
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  WithMulFacts(
                                    WithMulFacts(
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                      MultOp(
                                      ) [MultOp]
                                      DesignFactor(
                                        Design(
                                         varB
                                          NoDesignator(
                                          ) [NoDesignator]
                                        ) [Design]
                                        WithMethodCall(
                                          NoActPars(
                                          ) [NoActPars]
                                        ) [WithMethodCall]
                                      ) [DesignFactor]
                                    ) [WithMulFacts]
                                    MultOp(
                                    ) [MultOp]
                                    DesignFactor(
                                      Design(
                                       varC
                                        NoDesignator(
                                        ) [NoDesignator]
                                      ) [Design]
                                      WithMethodCall(
                                        WithActPars(
                                          SingleActPars(
                                            Expression(
                                              Negative(
                                              ) [Negative]
                                              Terms(
                                                BoolFactor(
                                                ) [BoolFactor]
                                                NoMulFacts(
                                                ) [NoMulFacts]
                                              ) [Terms]
                                              NoAddTerms(
                                              ) [NoAddTerms]
                                            ) [Expression]
                                          ) [SingleActPars]
                                        ) [WithActPars]
                                      ) [WithMethodCall]
                                    ) [DesignFactor]
                                  ) [WithMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AddSideEff]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           var
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               b
                              ) [DesignField]
                            ) [OptDesignator]
                          ) [Design]
                          PlusPlusSideEff(
                          ) [PlusPlusSideEff]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         var
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             c
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        ActParsSideEff(
                          NoActPars(
                          ) [NoActPars]
                        ) [ActParsSideEff]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       var
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           d
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AddSideEff(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Negative(
                          ) [Negative]
                          Terms(
                            NewFactor(
                              Type(
                               klasa
                              ) [Type]
                              NoExpr(
                              ) [NoExpr]
                            ) [NewFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AddSideEff]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     var
                      OptDesignator(
                        NoDesignator(
                        ) [NoDesignator]
                        DesignField(
                         e
                        ) [DesignField]
                      ) [OptDesignator]
                    ) [Design]
                    AddSideEff(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Negative(
                        ) [Negative]
                        Terms(
                          ExprFactor(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                ) [NumFactor]
                                WithMulFacts(
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                  MultOp(
                                  ) [MultOp]
                                  NumFactor(
                                  ) [NumFactor]
                                ) [WithMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [ExprFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AddSideEff]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              StatementDerived3(
              ) [StatementDerived3]
            ) [OptionalStmt]
            StatementDerived4(
            ) [StatementDerived4]
          ) [OptionalStmt]
          StatementDerived5(
            OptRetExprDerived2(
            ) [OptRetExprDerived2]
          ) [StatementDerived5]
        ) [OptionalStmt]
        StatementDerived5(
          OptRetExprDerived1(
            Expression(
              Negative(
              ) [Negative]
              Terms(
                NumFactor(
                ) [NumFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              WithAddTerms(
                NoAddTerms(
                ) [NoAddTerms]
                MinusOp(
                ) [MinusOp]
                Terms(
                  NumFactor(
                  ) [NumFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
              ) [WithAddTerms]
            ) [Expression]
          ) [OptRetExprDerived1]
        ) [StatementDerived5]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  21:00:58,768 - ===================================
INFO  21:00:58,771 -  Print count calls = 232
INFO  21:00:58,771 -  Deklarisanih promenljivih ima = 0
