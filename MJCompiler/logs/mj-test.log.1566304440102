INFO  14:11:50,472 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  14:11:50,715 - #2 program
INFO  14:11:50,715 - #45 SemanticTest
INFO  14:11:50,715 - #22 const
INFO  14:11:50,731 - #45 int
INFO  14:11:50,731 - #45 x
INFO  14:11:50,731 - #12 =
INFO  14:11:50,731 - #42 5
INFO  14:11:50,731 - #8 ,
INFO  14:11:50,731 - #45 f
INFO  14:11:50,731 - #12 =
INFO  14:11:50,731 - #42 6
INFO  14:11:50,731 - #5 ;
INFO  14:11:50,731 - #22 const
INFO  14:11:50,731 - #45 bool
INFO  14:11:50,731 - #45 b
INFO  14:11:50,731 - #12 =
INFO  14:11:50,731 - #44 false
INFO  14:11:50,731 - #5 ;
INFO  14:11:50,731 - #45 int
INFO  14:11:50,731 - #45 x1
INFO  14:11:50,731 - #8 ,
INFO  14:11:50,731 - #45 x2
INFO  14:11:50,731 - #25 [
INFO  14:11:50,731 - #34 ]
INFO  14:11:50,731 - #5 ;
INFO  14:11:50,731 - #29 enum
INFO  14:11:50,731 - #45 nums
INFO  14:11:50,731 - #3 {
INFO  14:11:50,731 - #45 ONE
INFO  14:11:50,731 - #8 ,
INFO  14:11:50,731 - #45 TWO
INFO  14:11:50,731 - #12 =
INFO  14:11:50,731 - #42 5
INFO  14:11:50,731 - #8 ,
INFO  14:11:50,731 - #45 THREE
INFO  14:11:50,731 - #4 }
INFO  14:11:50,731 - #16 class
INFO  14:11:50,731 - #45 A
INFO  14:11:50,747 - #3 {
INFO  14:11:50,747 - #4 }
INFO  14:11:50,747 - #14 interface
INFO  14:11:50,747 - #45 I
INFO  14:11:50,747 - #3 {
INFO  14:11:50,747 - #45 int
INFO  14:11:50,747 - #45 x
INFO  14:11:50,747 - #6 (
INFO  14:11:50,747 - #7 )
INFO  14:11:50,747 - #5 ;
INFO  14:11:50,747 - #13 void
INFO  14:11:50,747 - #45 p
INFO  14:11:50,747 - #6 (
INFO  14:11:50,747 - #7 )
INFO  14:11:50,747 - #5 ;
INFO  14:11:50,747 - #4 }
INFO  14:11:50,747 - #3 {
INFO  14:11:50,747 - #45 int
INFO  14:11:50,747 - #45 metod1
INFO  14:11:50,747 - #6 (
INFO  14:11:50,747 - #7 )
INFO  14:11:50,762 - #3 {
INFO  14:11:50,762 - #45 x
INFO  14:11:50,762 - #12 =
INFO  14:11:50,762 - #42 1
INFO  14:11:50,762 - #11 +
INFO  14:11:50,762 - #42 5
INFO  14:11:50,762 - #5 ;
INFO  14:11:50,762 - #10 return
INFO  14:11:50,762 - #42 3
INFO  14:11:50,762 - #5 ;
INFO  14:11:50,762 - #4 }
INFO  14:11:50,762 - #13 void
INFO  14:11:50,762 - #45 metod2
INFO  14:11:50,762 - #6 (
INFO  14:11:50,762 - #45 int
INFO  14:11:50,762 - #45 x
INFO  14:11:50,762 - #25 [
INFO  14:11:50,762 - #34 ]
INFO  14:11:50,762 - #8 ,
INFO  14:11:50,762 - #45 char
INFO  14:11:50,762 - #45 y
INFO  14:11:50,762 - #8 ,
INFO  14:11:50,762 - #45 bool
INFO  14:11:50,762 - #45 z
INFO  14:11:50,762 - #7 )
INFO  14:11:50,762 - #3 {
INFO  14:11:50,778 - #4 }
INFO  14:11:50,778 - #4 }
INFO  14:11:50,825 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              ConstDeclaration(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleConsts(
                    SingleConst(
                      ConstItem(
                       x
                        InitializerNum(
                         5
                        ) [InitializerNum]
                      ) [ConstItem]
                    ) [SingleConst]
                    ConstItem(
                     f
                      InitializerNum(
                       6
                      ) [InitializerNum]
                    ) [ConstItem]
                  ) [MultipleConsts]
                ) [ConstDeclarations]
              ) [ConstDeclaration]
            ) [VarDeclLists]
            ConstDeclaration(
              ConstDeclarations(
                Type(
                 bool
                ) [Type]
                SingleConst(
                  ConstItem(
                   b
                    InitializerBool(
                     false
                    ) [InitializerBool]
                  ) [ConstItem]
                ) [SingleConst]
              ) [ConstDeclarations]
            ) [ConstDeclaration]
          ) [VarDeclLists]
          VarDeclaration(
            VarDeclarations(
              Type(
               int
              ) [Type]
              MultipleVars(
                SingleVar(
                  Var(
                   x1
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
                Var(
                 x2
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [MultipleVars]
            ) [VarDeclarations]
          ) [VarDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             nums
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TWO
                 5
                ) [InitEnum]
              ) [MultipleEnums]
              NoInitEnum(
               THREE
              ) [NoInitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           A
          ) [ClassName]
          NoSuperClass(
          ) [NoSuperClass]
          NoImplInteraces(
          ) [NoImplInteraces]
          NoOptVars(
          ) [NoOptVars]
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
        InterName(
         I
        ) [InterName]
        OptInterMethodDeclList(
          InterfaceMethodDeclarations(
            SingleInterfaceMethodDeclaration(
              InterfaceMethodDeclaration(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               x
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
              ) [InterfaceMethodDeclaration]
            ) [SingleInterfaceMethodDeclaration]
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             p
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [InterfaceMethodDeclarations]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    OptMethods(
      NoOptMethods(
      ) [NoOptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          TypeIdentificator(
            Type(
             int
            ) [Type]
          ) [TypeIdentificator]
         metod1
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        NoOptVars(
        ) [NoOptVars]
        OptionalStmt(
          OptionalStmt(
            NoOptionalStmt(
            ) [NoOptionalStmt]
            DesignatorStmt(
              DesignStmt(
                Design(
                 x
                  NoDesignator(
                  ) [NoDesignator]
                ) [Design]
                AssignOper(
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      NumFactor(
                       1
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    WithAddTerms(
                      NoAddTerms(
                      ) [NoAddTerms]
                      PlusOp(
                      ) [PlusOp]
                      Terms(
                        NumFactor(
                         5
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                    ) [WithAddTerms]
                  ) [Expression]
                ) [AssignOper]
              ) [DesignStmt]
            ) [DesignatorStmt]
          ) [OptionalStmt]
          ReturnStmt(
            OptRetExprDerived1(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  NumFactor(
                   3
                  ) [NumFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
            ) [OptRetExprDerived1]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       metod2
      ) [MethodDeclTypeName]
      OptionalFormPars(
        MultipleFormPars(
          MultipleFormPars(
            SingleFormPars(
              FormParItem(
                Type(
                 int
                ) [Type]
               x
                ArrayVar(
                ) [ArrayVar]
              ) [FormParItem]
            ) [SingleFormPars]
            FormParItem(
              Type(
               char
              ) [Type]
             y
              NoArrayVar(
              ) [NoArrayVar]
            ) [FormParItem]
          ) [MultipleFormPars]
          FormParItem(
            Type(
             bool
            ) [Type]
           z
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [MultipleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      NoOptionalStmt(
      ) [NoOptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  14:11:50,825 - ===================================
INFO  14:11:50,825 - INFO:  Pocetak programa SemanticTest na liniji 4
