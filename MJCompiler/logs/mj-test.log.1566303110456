INFO  11:07:45,065 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:07:45,457 - #2 program
INFO  11:07:45,457 - #45 Program
INFO  11:07:45,457 - #45 int
INFO  11:07:45,469 - #45 x
INFO  11:07:45,470 - #8 ,
INFO  11:07:45,476 - #45 y
INFO  11:07:45,476 - #5 ;
INFO  11:07:45,476 - #14 interface
INFO  11:07:45,478 - #45 I
INFO  11:07:45,478 - #3 {
INFO  11:07:45,479 - #13 void
INFO  11:07:45,479 - #45 m
INFO  11:07:45,483 - #6 (
INFO  11:07:45,483 - #7 )
INFO  11:07:45,484 - #5 ;
INFO  11:07:45,484 - #4 }
INFO  11:07:45,485 - #16 class
INFO  11:07:45,486 - #45 A
INFO  11:07:45,486 - #3 {
INFO  11:07:45,487 - #45 int
INFO  11:07:45,490 - #45 x
INFO  11:07:45,490 - #25 [
INFO  11:07:45,491 - #34 ]
INFO  11:07:45,491 - #8 ,
INFO  11:07:45,493 - #45 y
INFO  11:07:45,493 - #25 [
INFO  11:07:45,493 - #34 ]
INFO  11:07:45,493 - #5 ;
INFO  11:07:45,494 - #4 }
INFO  11:07:45,495 - #29 enum
INFO  11:07:45,495 - #45 Broj
INFO  11:07:45,499 - #3 {
INFO  11:07:45,499 - #45 NULA
INFO  11:07:45,499 - #8 ,
INFO  11:07:45,500 - #45 TRI
INFO  11:07:45,500 - #12 =
INFO  11:07:45,500 - #42 3
INFO  11:07:45,500 - #8 ,
INFO  11:07:45,501 - #45 PET
INFO  11:07:45,502 - #12 =
INFO  11:07:45,502 - #42 5
INFO  11:07:45,502 - #4 }
INFO  11:07:45,502 - #16 class
INFO  11:07:45,503 - #45 B
INFO  11:07:45,503 - #39 extends
INFO  11:07:45,503 - #45 A
INFO  11:07:45,503 - #40 implements
INFO  11:07:45,503 - #45 I
INFO  11:07:45,503 - #3 {
INFO  11:07:45,504 - #45 int
INFO  11:07:45,505 - #45 i
INFO  11:07:45,505 - #5 ;
INFO  11:07:45,505 - #45 int
INFO  11:07:45,505 - #45 x
INFO  11:07:45,505 - #25 [
INFO  11:07:45,505 - #34 ]
INFO  11:07:45,505 - #5 ;
INFO  11:07:45,505 - #3 {
INFO  11:07:45,505 - #45 int
INFO  11:07:45,507 - #45 getValue
INFO  11:07:45,507 - #6 (
INFO  11:07:45,507 - #45 int
INFO  11:07:45,507 - #45 a
INFO  11:07:45,509 - #7 )
INFO  11:07:45,510 - #45 int
INFO  11:07:45,510 - #45 b
INFO  11:07:45,510 - #5 ;
INFO  11:07:45,511 - #45 bool
INFO  11:07:45,511 - #45 c
INFO  11:07:45,511 - #5 ;
INFO  11:07:45,511 - #3 {
INFO  11:07:45,511 - #10 return
INFO  11:07:45,512 - #42 0
INFO  11:07:45,514 - #5 ;
INFO  11:07:45,516 - #4 }
INFO  11:07:45,517 - #13 void
INFO  11:07:45,517 - #45 m
INFO  11:07:45,517 - #6 (
INFO  11:07:45,517 - #7 )
INFO  11:07:45,517 - #3 {
INFO  11:07:45,530 - #4 }
INFO  11:07:45,530 - #4 }
INFO  11:07:45,530 - #4 }
INFO  11:07:45,530 - #16 class
INFO  11:07:45,531 - #45 C
INFO  11:07:45,531 - #39 extends
INFO  11:07:45,531 - #45 B
INFO  11:07:45,531 - #3 {
INFO  11:07:45,533 - #45 A
INFO  11:07:45,533 - #45 theA
INFO  11:07:45,533 - #5 ;
INFO  11:07:45,533 - #45 int
INFO  11:07:45,533 - #45 a
INFO  11:07:45,533 - #5 ;
INFO  11:07:45,533 - #4 }
INFO  11:07:45,533 - #3 {
INFO  11:07:45,533 - #13 void
INFO  11:07:45,535 - #45 main
INFO  11:07:45,535 - #6 (
INFO  11:07:45,535 - #45 int
INFO  11:07:45,543 - #45 x
INFO  11:07:45,543 - #7 )
INFO  11:07:45,543 - #45 A
INFO  11:07:45,544 - #45 a
INFO  11:07:45,544 - #5 ;
INFO  11:07:45,544 - #45 C
INFO  11:07:45,544 - #45 c
INFO  11:07:45,544 - #5 ;
INFO  11:07:45,544 - #45 int
INFO  11:07:45,544 - #45 i
INFO  11:07:45,544 - #5 ;
INFO  11:07:45,544 - #45 int
INFO  11:07:45,544 - #45 x
INFO  11:07:45,545 - #25 [
INFO  11:07:45,545 - #34 ]
INFO  11:07:45,546 - #5 ;
INFO  11:07:45,546 - #3 {
INFO  11:07:45,546 - #45 a
INFO  11:07:45,546 - #12 =
INFO  11:07:45,550 - #18 new
INFO  11:07:45,552 - #45 A
INFO  11:07:45,552 - #5 ;
INFO  11:07:45,553 - #45 a
INFO  11:07:45,554 - #15 .
INFO  11:07:45,554 - #45 x
INFO  11:07:45,554 - #12 =
INFO  11:07:45,555 - #18 new
INFO  11:07:45,555 - #45 int
INFO  11:07:45,555 - #25 [
INFO  11:07:45,555 - #45 Broj
INFO  11:07:45,555 - #15 .
INFO  11:07:45,555 - #45 PET
INFO  11:07:45,555 - #34 ]
INFO  11:07:45,558 - #5 ;
INFO  11:07:45,558 - #45 a
INFO  11:07:45,558 - #15 .
INFO  11:07:45,558 - #45 y
INFO  11:07:45,558 - #12 =
INFO  11:07:45,558 - #18 new
INFO  11:07:45,558 - #45 int
INFO  11:07:45,559 - #25 [
INFO  11:07:45,559 - #42 5
INFO  11:07:45,559 - #34 ]
INFO  11:07:45,559 - #5 ;
INFO  11:07:45,559 - #45 c
INFO  11:07:45,559 - #12 =
INFO  11:07:45,559 - #18 new
INFO  11:07:45,559 - #45 C
INFO  11:07:45,559 - #5 ;
INFO  11:07:45,560 - #45 c
INFO  11:07:45,560 - #15 .
INFO  11:07:45,560 - #45 theA
INFO  11:07:45,560 - #12 =
INFO  11:07:45,560 - #45 a
INFO  11:07:45,560 - #5 ;
INFO  11:07:45,562 - #45 c
INFO  11:07:45,562 - #15 .
INFO  11:07:45,562 - #45 x
INFO  11:07:45,562 - #12 =
INFO  11:07:45,562 - #18 new
INFO  11:07:45,562 - #45 int
INFO  11:07:45,562 - #25 [
INFO  11:07:45,562 - #42 5
INFO  11:07:45,563 - #34 ]
INFO  11:07:45,563 - #5 ;
INFO  11:07:45,563 - #45 x
INFO  11:07:45,563 - #12 =
INFO  11:07:45,563 - #18 new
INFO  11:07:45,563 - #45 int
INFO  11:07:45,563 - #25 [
INFO  11:07:45,564 - #45 Broj
INFO  11:07:45,564 - #15 .
INFO  11:07:45,565 - #45 TRI
INFO  11:07:45,565 - #34 ]
INFO  11:07:45,565 - #5 ;
INFO  11:07:45,565 - #26 read
INFO  11:07:45,565 - #6 (
INFO  11:07:45,565 - #45 c
INFO  11:07:45,565 - #15 .
INFO  11:07:45,565 - #45 i
INFO  11:07:45,565 - #7 )
INFO  11:07:45,565 - #5 ;
INFO  11:07:45,566 - #41 for
INFO  11:07:45,567 - #6 (
INFO  11:07:45,567 - #45 i
INFO  11:07:45,567 - #12 =
INFO  11:07:45,567 - #42 0
INFO  11:07:45,567 - #5 ;
INFO  11:07:45,567 - #45 i
INFO  11:07:45,567 - #19 <
INFO  11:07:45,567 - #42 5
INFO  11:07:45,567 - #5 ;
INFO  11:07:45,567 - #45 i
INFO  11:07:45,567 - #38 ++
INFO  11:07:45,567 - #7 )
INFO  11:07:45,572 - #3 {
INFO  11:07:45,572 - #26 read
INFO  11:07:45,572 - #6 (
INFO  11:07:45,573 - #45 c
INFO  11:07:45,573 - #15 .
INFO  11:07:45,573 - #45 x
INFO  11:07:45,573 - #25 [
INFO  11:07:45,573 - #45 i
INFO  11:07:45,573 - #34 ]
INFO  11:07:45,573 - #7 )
INFO  11:07:45,573 - #5 ;
INFO  11:07:45,573 - #26 read
INFO  11:07:45,574 - #6 (
INFO  11:07:45,574 - #45 c
INFO  11:07:45,574 - #15 .
INFO  11:07:45,575 - #45 theA
INFO  11:07:45,575 - #15 .
INFO  11:07:45,575 - #45 x
INFO  11:07:45,575 - #25 [
INFO  11:07:45,575 - #45 i
INFO  11:07:45,575 - #34 ]
INFO  11:07:45,575 - #7 )
INFO  11:07:45,575 - #5 ;
INFO  11:07:45,575 - #46 if
INFO  11:07:45,575 - #6 (
INFO  11:07:45,575 - #42 1
INFO  11:07:45,575 - #32 >
INFO  11:07:45,575 - #42 2
INFO  11:07:45,577 - #7 )
INFO  11:07:45,578 - #26 read
INFO  11:07:45,579 - #6 (
INFO  11:07:45,579 - #45 a
INFO  11:07:45,579 - #7 )
INFO  11:07:45,579 - #5 ;
INFO  11:07:45,579 - #47 else
INFO  11:07:45,580 - #26 read
INFO  11:07:45,580 - #6 (
INFO  11:07:45,580 - #45 b
INFO  11:07:45,580 - #7 )
INFO  11:07:45,580 - #5 ;
INFO  11:07:45,580 - #4 }
INFO  11:07:45,580 - #9 print
INFO  11:07:45,580 - #6 (
INFO  11:07:45,580 - #45 c
INFO  11:07:45,580 - #15 .
INFO  11:07:45,581 - #45 getValue
INFO  11:07:45,581 - #6 (
INFO  11:07:45,581 - #45 c
INFO  11:07:45,581 - #15 .
INFO  11:07:45,581 - #45 theA
INFO  11:07:45,581 - #15 .
INFO  11:07:45,582 - #45 x
INFO  11:07:45,582 - #25 [
INFO  11:07:45,582 - #45 Broj
INFO  11:07:45,582 - #15 .
INFO  11:07:45,582 - #45 NULA
INFO  11:07:45,582 - #34 ]
INFO  11:07:45,582 - #7 )
INFO  11:07:45,583 - #7 )
INFO  11:07:45,584 - #5 ;
INFO  11:07:45,584 - #45 c
INFO  11:07:45,584 - #15 .
INFO  11:07:45,584 - #45 m
INFO  11:07:45,584 - #6 (
INFO  11:07:45,584 - #7 )
INFO  11:07:45,585 - #5 ;
INFO  11:07:45,586 - #4 }
INFO  11:07:45,586 - #4 }
INFO  11:07:45,612 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:07:45,616 - ===================================
INFO  11:07:45,616 - INFO:  Pocetak programa Program na liniji 1
INFO  11:07:45,616 - INFO:  Deklarisana promenljiva x na liniji 3
INFO  11:07:45,616 - INFO:  Deklarisana promenljiva y na liniji 3
INFO  11:07:45,616 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:07:45,616 - INFO:  Definisan interfejs I na liniji 4
INFO  11:07:45,616 - INFO:  Definisana klasa A na liniji 5
INFO  11:07:45,616 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:07:45,616 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:07:45,616 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:07:45,616 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:07:45,620 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:10:02,387 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:10:02,569 - #2 program
INFO  11:10:02,570 - #45 Program
INFO  11:10:02,570 - #45 int
INFO  11:10:02,572 - #45 x
INFO  11:10:02,573 - #8 ,
INFO  11:10:02,576 - #45 y
INFO  11:10:02,576 - #5 ;
INFO  11:10:02,576 - #14 interface
INFO  11:10:02,576 - #45 I
INFO  11:10:02,576 - #3 {
INFO  11:10:02,577 - #13 void
INFO  11:10:02,577 - #45 m
INFO  11:10:02,578 - #6 (
INFO  11:10:02,578 - #7 )
INFO  11:10:02,580 - #5 ;
INFO  11:10:02,580 - #4 }
INFO  11:10:02,580 - #16 class
INFO  11:10:02,580 - #45 A
INFO  11:10:02,581 - #3 {
INFO  11:10:02,583 - #45 int
INFO  11:10:02,583 - #45 x
INFO  11:10:02,583 - #25 [
INFO  11:10:02,583 - #34 ]
INFO  11:10:02,586 - #8 ,
INFO  11:10:02,587 - #45 y
INFO  11:10:02,587 - #25 [
INFO  11:10:02,587 - #34 ]
INFO  11:10:02,587 - #5 ;
INFO  11:10:02,587 - #4 }
INFO  11:10:02,589 - #29 enum
INFO  11:10:02,589 - #45 Broj
INFO  11:10:02,589 - #3 {
INFO  11:10:02,589 - #45 NULA
INFO  11:10:02,589 - #8 ,
INFO  11:10:02,591 - #45 TRI
INFO  11:10:02,591 - #12 =
INFO  11:10:02,591 - #42 3
INFO  11:10:02,591 - #8 ,
INFO  11:10:02,592 - #45 PET
INFO  11:10:02,592 - #12 =
INFO  11:10:02,592 - #42 5
INFO  11:10:02,592 - #4 }
INFO  11:10:02,592 - #16 class
INFO  11:10:02,592 - #45 B
INFO  11:10:02,593 - #39 extends
INFO  11:10:02,593 - #45 A
INFO  11:10:02,593 - #40 implements
INFO  11:10:02,593 - #45 I
INFO  11:10:02,593 - #3 {
INFO  11:10:02,594 - #45 int
INFO  11:10:02,594 - #45 i
INFO  11:10:02,594 - #5 ;
INFO  11:10:02,594 - #45 int
INFO  11:10:02,594 - #45 x
INFO  11:10:02,594 - #25 [
INFO  11:10:02,595 - #34 ]
INFO  11:10:02,595 - #5 ;
INFO  11:10:02,595 - #3 {
INFO  11:10:02,595 - #45 int
INFO  11:10:02,595 - #45 getValue
INFO  11:10:02,595 - #6 (
INFO  11:10:02,595 - #45 int
INFO  11:10:02,595 - #45 a
INFO  11:10:02,599 - #7 )
INFO  11:10:02,599 - #45 int
INFO  11:10:02,599 - #45 b
INFO  11:10:02,600 - #5 ;
INFO  11:10:02,600 - #45 bool
INFO  11:10:02,600 - #45 c
INFO  11:10:02,600 - #5 ;
INFO  11:10:02,600 - #3 {
INFO  11:10:02,600 - #10 return
INFO  11:10:02,601 - #42 0
INFO  11:10:02,603 - #5 ;
INFO  11:10:02,605 - #4 }
INFO  11:10:02,606 - #13 void
INFO  11:10:02,606 - #45 m
INFO  11:10:02,606 - #6 (
INFO  11:10:02,606 - #7 )
INFO  11:10:02,606 - #3 {
INFO  11:10:02,606 - #4 }
INFO  11:10:02,606 - #4 }
INFO  11:10:02,606 - #4 }
INFO  11:10:02,607 - #16 class
INFO  11:10:02,607 - #45 C
INFO  11:10:02,607 - #39 extends
INFO  11:10:02,607 - #45 B
INFO  11:10:02,607 - #3 {
INFO  11:10:02,607 - #45 A
INFO  11:10:02,607 - #45 theA
INFO  11:10:02,607 - #5 ;
INFO  11:10:02,607 - #45 int
INFO  11:10:02,608 - #45 a
INFO  11:10:02,608 - #5 ;
INFO  11:10:02,608 - #4 }
INFO  11:10:02,608 - #3 {
INFO  11:10:02,608 - #13 void
INFO  11:10:02,608 - #45 main
INFO  11:10:02,609 - #6 (
INFO  11:10:02,609 - #45 int
INFO  11:10:02,615 - #45 x
INFO  11:10:02,615 - #7 )
INFO  11:10:02,616 - #45 A
INFO  11:10:02,616 - #45 a
INFO  11:10:02,616 - #5 ;
INFO  11:10:02,616 - #45 C
INFO  11:10:02,616 - #45 c
INFO  11:10:02,616 - #5 ;
INFO  11:10:02,616 - #45 int
INFO  11:10:02,617 - #45 i
INFO  11:10:02,617 - #5 ;
INFO  11:10:02,617 - #45 int
INFO  11:10:02,617 - #45 x
INFO  11:10:02,617 - #25 [
INFO  11:10:02,617 - #34 ]
INFO  11:10:02,617 - #5 ;
INFO  11:10:02,617 - #3 {
INFO  11:10:02,617 - #45 a
INFO  11:10:02,618 - #12 =
INFO  11:10:02,620 - #18 new
INFO  11:10:02,622 - #45 A
INFO  11:10:02,622 - #5 ;
INFO  11:10:02,624 - #45 a
INFO  11:10:02,624 - #15 .
INFO  11:10:02,624 - #45 x
INFO  11:10:02,629 - #12 =
INFO  11:10:02,634 - #18 new
INFO  11:10:02,634 - #45 int
INFO  11:10:02,635 - #25 [
INFO  11:10:02,635 - #45 Broj
INFO  11:10:02,635 - #15 .
INFO  11:10:02,635 - #45 PET
INFO  11:10:02,635 - #34 ]
INFO  11:10:02,635 - #5 ;
INFO  11:10:02,635 - #45 a
INFO  11:10:02,635 - #15 .
INFO  11:10:02,635 - #45 y
INFO  11:10:02,635 - #12 =
INFO  11:10:02,635 - #18 new
INFO  11:10:02,635 - #45 int
INFO  11:10:02,635 - #25 [
INFO  11:10:02,635 - #42 5
INFO  11:10:02,638 - #34 ]
INFO  11:10:02,638 - #5 ;
INFO  11:10:02,638 - #45 c
INFO  11:10:02,638 - #12 =
INFO  11:10:02,638 - #18 new
INFO  11:10:02,638 - #45 C
INFO  11:10:02,638 - #5 ;
INFO  11:10:02,638 - #45 c
INFO  11:10:02,638 - #15 .
INFO  11:10:02,639 - #45 theA
INFO  11:10:02,639 - #12 =
INFO  11:10:02,639 - #45 a
INFO  11:10:02,639 - #5 ;
INFO  11:10:02,639 - #45 c
INFO  11:10:02,639 - #15 .
INFO  11:10:02,639 - #45 x
INFO  11:10:02,639 - #12 =
INFO  11:10:02,639 - #18 new
INFO  11:10:02,639 - #45 int
INFO  11:10:02,639 - #25 [
INFO  11:10:02,639 - #42 5
INFO  11:10:02,639 - #34 ]
INFO  11:10:02,639 - #5 ;
INFO  11:10:02,639 - #45 x
INFO  11:10:02,639 - #12 =
INFO  11:10:02,639 - #18 new
INFO  11:10:02,639 - #45 int
INFO  11:10:02,639 - #25 [
INFO  11:10:02,639 - #45 Broj
INFO  11:10:02,639 - #15 .
INFO  11:10:02,639 - #45 TRI
INFO  11:10:02,639 - #34 ]
INFO  11:10:02,639 - #5 ;
INFO  11:10:02,639 - #26 read
INFO  11:10:02,639 - #6 (
INFO  11:10:02,639 - #45 c
INFO  11:10:02,639 - #15 .
INFO  11:10:02,639 - #45 i
INFO  11:10:02,639 - #7 )
INFO  11:10:02,639 - #5 ;
INFO  11:10:02,639 - #41 for
INFO  11:10:02,639 - #6 (
INFO  11:10:02,639 - #45 i
INFO  11:10:02,639 - #12 =
INFO  11:10:02,639 - #42 0
INFO  11:10:02,644 - #5 ;
INFO  11:10:02,644 - #45 i
INFO  11:10:02,644 - #19 <
INFO  11:10:02,644 - #42 5
INFO  11:10:02,644 - #5 ;
INFO  11:10:02,644 - #45 i
INFO  11:10:02,644 - #38 ++
INFO  11:10:02,644 - #7 )
INFO  11:10:02,649 - #3 {
INFO  11:10:02,649 - #26 read
INFO  11:10:02,649 - #6 (
INFO  11:10:02,649 - #45 c
INFO  11:10:02,649 - #15 .
INFO  11:10:02,649 - #45 x
INFO  11:10:02,649 - #25 [
INFO  11:10:02,649 - #45 i
INFO  11:10:02,649 - #34 ]
INFO  11:10:02,649 - #7 )
INFO  11:10:02,651 - #5 ;
INFO  11:10:02,651 - #26 read
INFO  11:10:02,651 - #6 (
INFO  11:10:02,651 - #45 c
INFO  11:10:02,651 - #15 .
INFO  11:10:02,651 - #45 theA
INFO  11:10:02,651 - #15 .
INFO  11:10:02,651 - #45 x
INFO  11:10:02,651 - #25 [
INFO  11:10:02,651 - #45 i
INFO  11:10:02,651 - #34 ]
INFO  11:10:02,651 - #7 )
INFO  11:10:02,651 - #5 ;
INFO  11:10:02,651 - #46 if
INFO  11:10:02,651 - #6 (
INFO  11:10:02,651 - #42 1
INFO  11:10:02,651 - #32 >
INFO  11:10:02,651 - #42 2
INFO  11:10:02,652 - #7 )
INFO  11:10:02,652 - #26 read
INFO  11:10:02,652 - #6 (
INFO  11:10:02,652 - #45 a
INFO  11:10:02,652 - #7 )
INFO  11:10:02,652 - #5 ;
INFO  11:10:02,652 - #47 else
INFO  11:10:02,652 - #26 read
INFO  11:10:02,652 - #6 (
INFO  11:10:02,652 - #45 b
INFO  11:10:02,652 - #7 )
INFO  11:10:02,653 - #5 ;
INFO  11:10:02,653 - #4 }
INFO  11:10:02,653 - #9 print
INFO  11:10:02,653 - #6 (
INFO  11:10:02,653 - #45 c
INFO  11:10:02,653 - #15 .
INFO  11:10:02,653 - #45 getValue
INFO  11:10:02,653 - #6 (
INFO  11:10:02,653 - #45 c
INFO  11:10:02,653 - #15 .
INFO  11:10:02,653 - #45 theA
INFO  11:10:02,653 - #15 .
INFO  11:10:02,653 - #45 x
INFO  11:10:02,653 - #25 [
INFO  11:10:02,653 - #45 Broj
INFO  11:10:02,654 - #15 .
INFO  11:10:02,654 - #45 NULA
INFO  11:10:02,654 - #34 ]
INFO  11:10:02,654 - #7 )
INFO  11:10:02,654 - #7 )
INFO  11:10:02,655 - #5 ;
INFO  11:10:02,656 - #45 c
INFO  11:10:02,656 - #15 .
INFO  11:10:02,656 - #45 m
INFO  11:10:02,656 - #6 (
INFO  11:10:02,656 - #7 )
INFO  11:10:02,657 - #5 ;
INFO  11:10:02,658 - #4 }
INFO  11:10:02,658 - #4 }
INFO  11:10:02,690 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:10:02,690 - ===================================
INFO  11:10:02,695 - INFO:  Pocetak programa Program na liniji 1
INFO  11:10:11,423 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:10:11,425 - INFO:  Deklarisan metod m na liniji 15
INFO  11:10:11,425 - INFO:  Definisana klasa B na liniji 8
INFO  11:10:20,668 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:10:20,866 - #2 program
INFO  11:10:20,867 - #45 Program
INFO  11:10:20,867 - #45 int
INFO  11:10:20,868 - #45 x
INFO  11:10:20,869 - #8 ,
INFO  11:10:20,871 - #45 y
INFO  11:10:20,871 - #5 ;
INFO  11:10:20,872 - #14 interface
INFO  11:10:20,872 - #45 I
INFO  11:10:20,872 - #3 {
INFO  11:10:20,873 - #13 void
INFO  11:10:20,873 - #45 m
INFO  11:10:20,874 - #6 (
INFO  11:10:20,874 - #7 )
INFO  11:10:20,874 - #5 ;
INFO  11:10:20,876 - #4 }
INFO  11:10:20,876 - #16 class
INFO  11:10:20,876 - #45 A
INFO  11:10:20,877 - #3 {
INFO  11:10:20,877 - #45 int
INFO  11:10:20,877 - #45 x
INFO  11:10:20,881 - #25 [
INFO  11:10:20,881 - #34 ]
INFO  11:10:20,881 - #8 ,
INFO  11:10:20,882 - #45 y
INFO  11:10:20,882 - #25 [
INFO  11:10:20,882 - #34 ]
INFO  11:10:20,882 - #5 ;
INFO  11:10:20,882 - #4 }
INFO  11:10:20,883 - #29 enum
INFO  11:10:20,884 - #45 Broj
INFO  11:10:20,884 - #3 {
INFO  11:10:20,884 - #45 NULA
INFO  11:10:20,885 - #8 ,
INFO  11:10:20,885 - #45 TRI
INFO  11:10:20,885 - #12 =
INFO  11:10:20,886 - #42 3
INFO  11:10:20,886 - #8 ,
INFO  11:10:20,886 - #45 PET
INFO  11:10:20,886 - #12 =
INFO  11:10:20,886 - #42 5
INFO  11:10:20,887 - #4 }
INFO  11:10:20,887 - #16 class
INFO  11:10:20,887 - #45 B
INFO  11:10:20,887 - #39 extends
INFO  11:10:20,888 - #45 A
INFO  11:10:20,888 - #40 implements
INFO  11:10:20,888 - #45 I
INFO  11:10:20,888 - #3 {
INFO  11:10:20,889 - #45 int
INFO  11:10:20,889 - #45 i
INFO  11:10:20,889 - #5 ;
INFO  11:10:20,889 - #45 int
INFO  11:10:20,889 - #45 x
INFO  11:10:20,890 - #25 [
INFO  11:10:20,890 - #34 ]
INFO  11:10:20,890 - #5 ;
INFO  11:10:20,890 - #3 {
INFO  11:10:20,890 - #45 int
INFO  11:10:20,890 - #45 getValue
INFO  11:10:20,890 - #6 (
INFO  11:10:20,890 - #45 int
INFO  11:10:20,890 - #45 a
INFO  11:10:20,895 - #7 )
INFO  11:10:20,895 - #45 int
INFO  11:10:20,896 - #45 b
INFO  11:10:20,896 - #5 ;
INFO  11:10:20,896 - #45 bool
INFO  11:10:20,896 - #45 c
INFO  11:10:20,896 - #5 ;
INFO  11:10:20,896 - #3 {
INFO  11:10:20,896 - #10 return
INFO  11:10:20,896 - #42 0
INFO  11:10:20,900 - #5 ;
INFO  11:10:20,901 - #4 }
INFO  11:10:20,902 - #13 void
INFO  11:10:20,902 - #45 m
INFO  11:10:20,902 - #6 (
INFO  11:10:20,903 - #7 )
INFO  11:10:20,903 - #3 {
INFO  11:10:20,903 - #4 }
INFO  11:10:20,903 - #4 }
INFO  11:10:20,903 - #4 }
INFO  11:10:20,903 - #16 class
INFO  11:10:20,903 - #45 C
INFO  11:10:20,904 - #39 extends
INFO  11:10:20,904 - #45 B
INFO  11:10:20,904 - #3 {
INFO  11:10:20,904 - #45 A
INFO  11:10:20,904 - #45 theA
INFO  11:10:20,904 - #5 ;
INFO  11:10:20,904 - #45 int
INFO  11:10:20,905 - #45 a
INFO  11:10:20,905 - #5 ;
INFO  11:10:20,905 - #4 }
INFO  11:10:20,905 - #3 {
INFO  11:10:20,905 - #13 void
INFO  11:10:20,905 - #45 main
INFO  11:10:20,905 - #6 (
INFO  11:10:20,906 - #45 int
INFO  11:10:20,907 - #45 x
INFO  11:10:20,907 - #7 )
INFO  11:10:20,907 - #45 A
INFO  11:10:20,907 - #45 a
INFO  11:10:20,907 - #5 ;
INFO  11:10:20,907 - #45 C
INFO  11:10:20,907 - #45 c
INFO  11:10:20,907 - #5 ;
INFO  11:10:20,907 - #45 int
INFO  11:10:20,913 - #45 i
INFO  11:10:20,913 - #5 ;
INFO  11:10:20,913 - #45 int
INFO  11:10:20,913 - #45 x
INFO  11:10:20,913 - #25 [
INFO  11:10:20,913 - #34 ]
INFO  11:10:20,913 - #5 ;
INFO  11:10:20,913 - #3 {
INFO  11:10:20,914 - #45 a
INFO  11:10:20,914 - #12 =
INFO  11:10:20,914 - #18 new
INFO  11:10:20,917 - #45 A
INFO  11:10:20,917 - #5 ;
INFO  11:10:20,918 - #45 a
INFO  11:10:20,919 - #15 .
INFO  11:10:20,919 - #45 x
INFO  11:10:20,919 - #12 =
INFO  11:10:20,924 - #18 new
INFO  11:10:20,924 - #45 int
INFO  11:10:20,924 - #25 [
INFO  11:10:20,924 - #45 Broj
INFO  11:10:20,924 - #15 .
INFO  11:10:20,924 - #45 PET
INFO  11:10:20,929 - #34 ]
INFO  11:10:20,929 - #5 ;
INFO  11:10:20,929 - #45 a
INFO  11:10:20,929 - #15 .
INFO  11:10:20,931 - #45 y
INFO  11:10:20,931 - #12 =
INFO  11:10:20,931 - #18 new
INFO  11:10:20,931 - #45 int
INFO  11:10:20,931 - #25 [
INFO  11:10:20,931 - #42 5
INFO  11:10:20,931 - #34 ]
INFO  11:10:20,931 - #5 ;
INFO  11:10:20,931 - #45 c
INFO  11:10:20,931 - #12 =
INFO  11:10:20,931 - #18 new
INFO  11:10:20,931 - #45 C
INFO  11:10:20,931 - #5 ;
INFO  11:10:20,932 - #45 c
INFO  11:10:20,932 - #15 .
INFO  11:10:20,932 - #45 theA
INFO  11:10:20,932 - #12 =
INFO  11:10:20,932 - #45 a
INFO  11:10:20,932 - #5 ;
INFO  11:10:20,932 - #45 c
INFO  11:10:20,932 - #15 .
INFO  11:10:20,932 - #45 x
INFO  11:10:20,932 - #12 =
INFO  11:10:20,932 - #18 new
INFO  11:10:20,932 - #45 int
INFO  11:10:20,932 - #25 [
INFO  11:10:20,932 - #42 5
INFO  11:10:20,932 - #34 ]
INFO  11:10:20,932 - #5 ;
INFO  11:10:20,932 - #45 x
INFO  11:10:20,932 - #12 =
INFO  11:10:20,932 - #18 new
INFO  11:10:20,932 - #45 int
INFO  11:10:20,932 - #25 [
INFO  11:10:20,932 - #45 Broj
INFO  11:10:20,932 - #15 .
INFO  11:10:20,932 - #45 TRI
INFO  11:10:20,932 - #34 ]
INFO  11:10:20,932 - #5 ;
INFO  11:10:20,932 - #26 read
INFO  11:10:20,932 - #6 (
INFO  11:10:20,932 - #45 c
INFO  11:10:20,932 - #15 .
INFO  11:10:20,932 - #45 i
INFO  11:10:20,932 - #7 )
INFO  11:10:20,935 - #5 ;
INFO  11:10:20,935 - #41 for
INFO  11:10:20,935 - #6 (
INFO  11:10:20,935 - #45 i
INFO  11:10:20,935 - #12 =
INFO  11:10:20,935 - #42 0
INFO  11:10:20,935 - #5 ;
INFO  11:10:20,935 - #45 i
INFO  11:10:20,935 - #19 <
INFO  11:10:20,936 - #42 5
INFO  11:10:20,936 - #5 ;
INFO  11:10:20,936 - #45 i
INFO  11:10:20,936 - #38 ++
INFO  11:10:20,936 - #7 )
INFO  11:10:20,936 - #3 {
INFO  11:10:20,936 - #26 read
INFO  11:10:20,936 - #6 (
INFO  11:10:20,936 - #45 c
INFO  11:10:20,936 - #15 .
INFO  11:10:20,936 - #45 x
INFO  11:10:20,941 - #25 [
INFO  11:10:20,941 - #45 i
INFO  11:10:20,941 - #34 ]
INFO  11:10:20,941 - #7 )
INFO  11:10:20,941 - #5 ;
INFO  11:10:20,941 - #26 read
INFO  11:10:20,941 - #6 (
INFO  11:10:20,941 - #45 c
INFO  11:10:20,941 - #15 .
INFO  11:10:20,941 - #45 theA
INFO  11:10:20,941 - #15 .
INFO  11:10:20,941 - #45 x
INFO  11:10:20,941 - #25 [
INFO  11:10:20,941 - #45 i
INFO  11:10:20,941 - #34 ]
INFO  11:10:20,941 - #7 )
INFO  11:10:20,941 - #5 ;
INFO  11:10:20,941 - #46 if
INFO  11:10:20,941 - #6 (
INFO  11:10:20,941 - #42 1
INFO  11:10:20,941 - #32 >
INFO  11:10:20,941 - #42 2
INFO  11:10:20,941 - #7 )
INFO  11:10:20,941 - #26 read
INFO  11:10:20,941 - #6 (
INFO  11:10:20,941 - #45 a
INFO  11:10:20,941 - #7 )
INFO  11:10:20,941 - #5 ;
INFO  11:10:20,941 - #47 else
INFO  11:10:20,941 - #26 read
INFO  11:10:20,941 - #6 (
INFO  11:10:20,941 - #45 b
INFO  11:10:20,941 - #7 )
INFO  11:10:20,941 - #5 ;
INFO  11:10:20,941 - #4 }
INFO  11:10:20,941 - #9 print
INFO  11:10:20,946 - #6 (
INFO  11:10:20,946 - #45 c
INFO  11:10:20,946 - #15 .
INFO  11:10:20,946 - #45 getValue
INFO  11:10:20,946 - #6 (
INFO  11:10:20,946 - #45 c
INFO  11:10:20,946 - #15 .
INFO  11:10:20,946 - #45 theA
INFO  11:10:20,946 - #15 .
INFO  11:10:20,946 - #45 x
INFO  11:10:20,946 - #25 [
INFO  11:10:20,946 - #45 Broj
INFO  11:10:20,946 - #15 .
INFO  11:10:20,946 - #45 NULA
INFO  11:10:20,946 - #34 ]
INFO  11:10:20,946 - #7 )
INFO  11:10:20,946 - #7 )
INFO  11:10:20,946 - #5 ;
INFO  11:10:20,951 - #45 c
INFO  11:10:20,951 - #15 .
INFO  11:10:20,951 - #45 m
INFO  11:10:20,951 - #6 (
INFO  11:10:20,951 - #7 )
INFO  11:10:20,951 - #5 ;
INFO  11:10:20,951 - #4 }
INFO  11:10:20,951 - #4 }
INFO  11:10:20,982 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:10:20,982 - ===================================
INFO  11:10:20,982 - INFO:  Pocetak programa Program na liniji 1
INFO  11:10:27,714 - INFO:  Deklarisana promenljiva x na liniji 3
INFO  11:10:28,834 - INFO:  Deklarisana promenljiva y na liniji 3
INFO  11:10:28,835 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:10:28,835 - INFO:  Definisan interfejs I na liniji 4
INFO  11:12:32,167 - INFO:  Definisana klasa A na liniji 5
INFO  11:12:32,167 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:28:26,426 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:28:26,672 - #2 program
INFO  11:28:26,673 - #45 Program
INFO  11:28:26,673 - #45 int
INFO  11:28:26,674 - #45 x
INFO  11:28:26,674 - #8 ,
INFO  11:28:26,681 - #45 y
INFO  11:28:26,681 - #5 ;
INFO  11:28:26,681 - #14 interface
INFO  11:28:26,681 - #45 I
INFO  11:28:26,681 - #3 {
INFO  11:28:26,683 - #13 void
INFO  11:28:26,683 - #45 m
INFO  11:28:26,684 - #6 (
INFO  11:28:26,684 - #7 )
INFO  11:28:26,685 - #5 ;
INFO  11:28:26,685 - #4 }
INFO  11:28:26,685 - #16 class
INFO  11:28:26,686 - #45 A
INFO  11:28:26,686 - #3 {
INFO  11:28:26,688 - #45 int
INFO  11:28:26,690 - #45 x
INFO  11:28:26,691 - #25 [
INFO  11:28:26,692 - #34 ]
INFO  11:28:26,692 - #8 ,
INFO  11:28:26,693 - #45 y
INFO  11:28:26,693 - #25 [
INFO  11:28:26,693 - #34 ]
INFO  11:28:26,693 - #5 ;
INFO  11:28:26,695 - #4 }
INFO  11:28:26,696 - #29 enum
INFO  11:28:26,696 - #45 Broj
INFO  11:28:26,696 - #3 {
INFO  11:28:26,696 - #45 NULA
INFO  11:28:26,696 - #8 ,
INFO  11:28:26,698 - #45 TRI
INFO  11:28:26,698 - #12 =
INFO  11:28:26,698 - #42 3
INFO  11:28:26,698 - #8 ,
INFO  11:28:26,699 - #45 PET
INFO  11:28:26,699 - #12 =
INFO  11:28:26,699 - #42 5
INFO  11:28:26,699 - #4 }
INFO  11:28:26,700 - #16 class
INFO  11:28:26,700 - #45 B
INFO  11:28:26,700 - #39 extends
INFO  11:28:26,700 - #45 A
INFO  11:28:26,700 - #40 implements
INFO  11:28:26,700 - #45 I
INFO  11:28:26,700 - #3 {
INFO  11:28:26,701 - #45 int
INFO  11:28:26,701 - #45 i
INFO  11:28:26,701 - #5 ;
INFO  11:28:26,701 - #45 int
INFO  11:28:26,701 - #45 x
INFO  11:28:26,701 - #25 [
INFO  11:28:26,701 - #34 ]
INFO  11:28:26,701 - #5 ;
INFO  11:28:26,701 - #3 {
INFO  11:28:26,701 - #45 int
INFO  11:28:26,703 - #45 getValue
INFO  11:28:26,703 - #6 (
INFO  11:28:26,706 - #45 int
INFO  11:28:26,706 - #45 a
INFO  11:28:26,706 - #7 )
INFO  11:28:26,706 - #45 int
INFO  11:28:26,706 - #45 b
INFO  11:28:26,706 - #5 ;
INFO  11:28:26,707 - #45 bool
INFO  11:28:26,707 - #45 c
INFO  11:28:26,707 - #5 ;
INFO  11:28:26,707 - #3 {
INFO  11:28:26,707 - #10 return
INFO  11:28:26,709 - #42 0
INFO  11:28:26,710 - #5 ;
INFO  11:28:26,712 - #4 }
INFO  11:28:26,712 - #13 void
INFO  11:28:26,713 - #45 m
INFO  11:28:26,713 - #6 (
INFO  11:28:26,713 - #7 )
INFO  11:28:26,713 - #3 {
INFO  11:28:26,713 - #4 }
INFO  11:28:26,713 - #4 }
INFO  11:28:26,713 - #4 }
INFO  11:28:26,714 - #16 class
INFO  11:28:26,714 - #45 C
INFO  11:28:26,714 - #39 extends
INFO  11:28:26,714 - #45 B
INFO  11:28:26,714 - #3 {
INFO  11:28:26,714 - #45 A
INFO  11:28:26,714 - #45 theA
INFO  11:28:26,714 - #5 ;
INFO  11:28:26,714 - #45 int
INFO  11:28:26,714 - #45 a
INFO  11:28:26,714 - #5 ;
INFO  11:28:26,715 - #4 }
INFO  11:28:26,715 - #3 {
INFO  11:28:26,715 - #13 void
INFO  11:28:26,715 - #45 main
INFO  11:28:26,715 - #6 (
INFO  11:28:26,715 - #45 int
INFO  11:28:26,716 - #45 x
INFO  11:28:26,721 - #7 )
INFO  11:28:26,721 - #45 A
INFO  11:28:26,721 - #45 a
INFO  11:28:26,721 - #5 ;
INFO  11:28:26,721 - #45 C
INFO  11:28:26,721 - #45 c
INFO  11:28:26,721 - #5 ;
INFO  11:28:26,721 - #45 int
INFO  11:28:26,721 - #45 i
INFO  11:28:26,721 - #5 ;
INFO  11:28:26,721 - #45 int
INFO  11:28:26,722 - #45 x
INFO  11:28:26,722 - #25 [
INFO  11:28:26,722 - #34 ]
INFO  11:28:26,722 - #5 ;
INFO  11:28:26,722 - #3 {
INFO  11:28:26,722 - #45 a
INFO  11:28:26,722 - #12 =
INFO  11:28:26,723 - #18 new
INFO  11:28:26,724 - #45 A
INFO  11:28:26,724 - #5 ;
INFO  11:28:26,725 - #45 a
INFO  11:28:26,725 - #15 .
INFO  11:28:26,725 - #45 x
INFO  11:28:26,725 - #12 =
INFO  11:28:26,726 - #18 new
INFO  11:28:26,726 - #45 int
INFO  11:28:26,726 - #25 [
INFO  11:28:26,726 - #45 Broj
INFO  11:28:26,726 - #15 .
INFO  11:28:26,727 - #45 PET
INFO  11:28:26,727 - #34 ]
INFO  11:28:26,727 - #5 ;
INFO  11:28:26,727 - #45 a
INFO  11:28:26,727 - #15 .
INFO  11:28:26,727 - #45 y
INFO  11:28:26,727 - #12 =
INFO  11:28:26,727 - #18 new
INFO  11:28:26,730 - #45 int
INFO  11:28:26,730 - #25 [
INFO  11:28:26,730 - #42 5
INFO  11:28:26,730 - #34 ]
INFO  11:28:26,730 - #5 ;
INFO  11:28:26,730 - #45 c
INFO  11:28:26,730 - #12 =
INFO  11:28:26,730 - #18 new
INFO  11:28:26,730 - #45 C
INFO  11:28:26,730 - #5 ;
INFO  11:28:26,731 - #45 c
INFO  11:28:26,731 - #15 .
INFO  11:28:26,731 - #45 theA
INFO  11:28:26,733 - #12 =
INFO  11:28:26,733 - #45 a
INFO  11:28:26,733 - #5 ;
INFO  11:28:26,734 - #45 c
INFO  11:28:26,736 - #15 .
INFO  11:28:26,736 - #45 x
INFO  11:28:26,736 - #12 =
INFO  11:28:26,736 - #18 new
INFO  11:28:26,736 - #45 int
INFO  11:28:26,736 - #25 [
INFO  11:28:26,736 - #42 5
INFO  11:28:26,736 - #34 ]
INFO  11:28:26,736 - #5 ;
INFO  11:28:26,736 - #45 x
INFO  11:28:26,736 - #12 =
INFO  11:28:26,736 - #18 new
INFO  11:28:26,736 - #45 int
INFO  11:28:26,736 - #25 [
INFO  11:28:26,736 - #45 Broj
INFO  11:28:26,736 - #15 .
INFO  11:28:26,736 - #45 TRI
INFO  11:28:26,736 - #34 ]
INFO  11:28:26,739 - #5 ;
INFO  11:28:26,739 - #26 read
INFO  11:28:26,739 - #6 (
INFO  11:28:26,739 - #45 c
INFO  11:28:26,739 - #15 .
INFO  11:28:26,739 - #45 i
INFO  11:28:26,739 - #7 )
INFO  11:28:26,739 - #5 ;
INFO  11:28:26,739 - #41 for
INFO  11:28:26,739 - #6 (
INFO  11:28:26,739 - #45 i
INFO  11:28:26,740 - #12 =
INFO  11:28:26,740 - #42 0
INFO  11:28:26,740 - #5 ;
INFO  11:28:26,740 - #45 i
INFO  11:28:26,740 - #19 <
INFO  11:28:26,740 - #42 5
INFO  11:28:26,742 - #5 ;
INFO  11:28:26,744 - #45 i
INFO  11:28:26,744 - #38 ++
INFO  11:28:26,744 - #7 )
INFO  11:28:26,744 - #3 {
INFO  11:28:26,744 - #26 read
INFO  11:28:26,744 - #6 (
INFO  11:28:26,746 - #45 c
INFO  11:28:26,746 - #15 .
INFO  11:28:26,746 - #45 x
INFO  11:28:26,746 - #25 [
INFO  11:28:26,746 - #45 i
INFO  11:28:26,746 - #34 ]
INFO  11:28:26,746 - #7 )
INFO  11:28:26,746 - #5 ;
INFO  11:28:26,746 - #26 read
INFO  11:28:26,747 - #6 (
INFO  11:28:26,747 - #45 c
INFO  11:28:26,747 - #15 .
INFO  11:28:26,747 - #45 theA
INFO  11:28:26,747 - #15 .
INFO  11:28:26,747 - #45 x
INFO  11:28:26,747 - #25 [
INFO  11:28:26,747 - #45 i
INFO  11:28:26,747 - #34 ]
INFO  11:28:26,747 - #7 )
INFO  11:28:26,747 - #5 ;
INFO  11:28:26,747 - #46 if
INFO  11:28:26,747 - #6 (
INFO  11:28:26,747 - #42 1
INFO  11:28:26,747 - #32 >
INFO  11:28:26,747 - #42 2
INFO  11:28:26,747 - #7 )
INFO  11:28:26,750 - #26 read
INFO  11:28:26,750 - #6 (
INFO  11:28:26,750 - #45 a
INFO  11:28:26,750 - #7 )
INFO  11:28:26,750 - #5 ;
INFO  11:28:26,750 - #47 else
INFO  11:28:26,750 - #26 read
INFO  11:28:26,750 - #6 (
INFO  11:28:26,750 - #45 b
INFO  11:28:26,750 - #7 )
INFO  11:28:26,750 - #5 ;
INFO  11:28:26,750 - #4 }
INFO  11:28:26,751 - #9 print
INFO  11:28:26,752 - #6 (
INFO  11:28:26,752 - #45 c
INFO  11:28:26,752 - #15 .
INFO  11:28:26,752 - #45 getValue
INFO  11:28:26,752 - #6 (
INFO  11:28:26,752 - #45 c
INFO  11:28:26,752 - #15 .
INFO  11:28:26,752 - #45 theA
INFO  11:28:26,752 - #15 .
INFO  11:28:26,752 - #45 x
INFO  11:28:26,752 - #25 [
INFO  11:28:26,752 - #45 Broj
INFO  11:28:26,752 - #15 .
INFO  11:28:26,752 - #45 NULA
INFO  11:28:26,752 - #34 ]
INFO  11:28:26,753 - #7 )
INFO  11:28:26,753 - #7 )
INFO  11:28:26,754 - #5 ;
INFO  11:28:26,755 - #45 c
INFO  11:28:26,755 - #15 .
INFO  11:28:26,755 - #45 m
INFO  11:28:26,755 - #6 (
INFO  11:28:26,755 - #7 )
INFO  11:28:26,756 - #5 ;
INFO  11:28:26,756 - #4 }
INFO  11:28:26,756 - #4 }
INFO  11:28:26,784 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:28:26,789 - ===================================
INFO  11:28:26,789 - INFO:  Pocetak programa Program na liniji 1
INFO  11:28:32,056 - INFO:  Deklarisanaglobalna  promenljiva x na liniji 3
INFO  11:28:32,995 - INFO:  Deklarisanaglobalna  promenljiva y na liniji 3
INFO  11:28:32,996 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:28:32,996 - INFO:  Definisan interfejs I na liniji 4
INFO  11:28:35,745 - INFO:  Deklarisan niz x na liniji 5
INFO  11:29:34,369 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:29:34,590 - #2 program
INFO  11:29:34,590 - #45 Program
INFO  11:29:34,590 - #45 int
INFO  11:29:34,595 - #45 x
INFO  11:29:34,598 - #8 ,
INFO  11:29:34,598 - #45 y
INFO  11:29:34,598 - #5 ;
INFO  11:29:34,603 - #14 interface
INFO  11:29:34,603 - #45 I
INFO  11:29:34,603 - #3 {
INFO  11:29:34,603 - #13 void
INFO  11:29:34,603 - #45 m
INFO  11:29:34,604 - #6 (
INFO  11:29:34,605 - #7 )
INFO  11:29:34,606 - #5 ;
INFO  11:29:34,606 - #4 }
INFO  11:29:34,607 - #16 class
INFO  11:29:34,607 - #45 A
INFO  11:29:34,607 - #3 {
INFO  11:29:34,609 - #45 int
INFO  11:29:34,612 - #45 x
INFO  11:29:34,612 - #25 [
INFO  11:29:34,612 - #34 ]
INFO  11:29:34,613 - #8 ,
INFO  11:29:34,614 - #45 y
INFO  11:29:34,614 - #25 [
INFO  11:29:34,614 - #34 ]
INFO  11:29:34,614 - #5 ;
INFO  11:29:34,614 - #4 }
INFO  11:29:34,616 - #29 enum
INFO  11:29:34,617 - #45 Broj
INFO  11:29:34,617 - #3 {
INFO  11:29:34,617 - #45 NULA
INFO  11:29:34,618 - #8 ,
INFO  11:29:34,618 - #45 TRI
INFO  11:29:34,618 - #12 =
INFO  11:29:34,619 - #42 3
INFO  11:29:34,619 - #8 ,
INFO  11:29:34,619 - #45 PET
INFO  11:29:34,619 - #12 =
INFO  11:29:34,619 - #42 5
INFO  11:29:34,620 - #4 }
INFO  11:29:34,620 - #16 class
INFO  11:29:34,620 - #45 B
INFO  11:29:34,620 - #39 extends
INFO  11:29:34,620 - #45 A
INFO  11:29:34,620 - #40 implements
INFO  11:29:34,620 - #45 I
INFO  11:29:34,620 - #3 {
INFO  11:29:34,622 - #45 int
INFO  11:29:34,622 - #45 i
INFO  11:29:34,622 - #5 ;
INFO  11:29:34,622 - #45 int
INFO  11:29:34,623 - #45 x
INFO  11:29:34,623 - #25 [
INFO  11:29:34,623 - #34 ]
INFO  11:29:34,623 - #5 ;
INFO  11:29:34,623 - #3 {
INFO  11:29:34,623 - #45 int
INFO  11:29:34,623 - #45 getValue
INFO  11:29:34,623 - #6 (
INFO  11:29:34,626 - #45 int
INFO  11:29:34,626 - #45 a
INFO  11:29:34,627 - #7 )
INFO  11:29:34,627 - #45 int
INFO  11:29:34,627 - #45 b
INFO  11:29:34,628 - #5 ;
INFO  11:29:34,628 - #45 bool
INFO  11:29:34,628 - #45 c
INFO  11:29:34,628 - #5 ;
INFO  11:29:34,628 - #3 {
INFO  11:29:34,628 - #10 return
INFO  11:29:34,630 - #42 0
INFO  11:29:34,631 - #5 ;
INFO  11:29:34,633 - #4 }
INFO  11:29:34,634 - #13 void
INFO  11:29:34,634 - #45 m
INFO  11:29:34,634 - #6 (
INFO  11:29:34,634 - #7 )
INFO  11:29:34,634 - #3 {
INFO  11:29:34,634 - #4 }
INFO  11:29:34,634 - #4 }
INFO  11:29:34,634 - #4 }
INFO  11:29:34,635 - #16 class
INFO  11:29:34,635 - #45 C
INFO  11:29:34,635 - #39 extends
INFO  11:29:34,635 - #45 B
INFO  11:29:34,635 - #3 {
INFO  11:29:34,635 - #45 A
INFO  11:29:34,635 - #45 theA
INFO  11:29:34,635 - #5 ;
INFO  11:29:34,636 - #45 int
INFO  11:29:34,636 - #45 a
INFO  11:29:34,636 - #5 ;
INFO  11:29:34,636 - #4 }
INFO  11:29:34,636 - #3 {
INFO  11:29:34,636 - #13 void
INFO  11:29:34,636 - #45 main
INFO  11:29:34,636 - #6 (
INFO  11:29:34,636 - #45 int
INFO  11:29:34,654 - #45 x
INFO  11:29:34,654 - #7 )
INFO  11:29:34,654 - #45 A
INFO  11:29:34,655 - #45 a
INFO  11:29:34,655 - #5 ;
INFO  11:29:34,655 - #45 C
INFO  11:29:34,655 - #45 c
INFO  11:29:34,655 - #5 ;
INFO  11:29:34,655 - #45 int
INFO  11:29:34,655 - #45 i
INFO  11:29:34,656 - #5 ;
INFO  11:29:34,657 - #45 int
INFO  11:29:34,657 - #45 x
INFO  11:29:34,657 - #25 [
INFO  11:29:34,658 - #34 ]
INFO  11:29:34,658 - #5 ;
INFO  11:29:34,658 - #3 {
INFO  11:29:34,658 - #45 a
INFO  11:29:34,658 - #12 =
INFO  11:29:34,659 - #18 new
INFO  11:29:34,661 - #45 A
INFO  11:29:34,661 - #5 ;
INFO  11:29:34,662 - #45 a
INFO  11:29:34,662 - #15 .
INFO  11:29:34,662 - #45 x
INFO  11:29:34,662 - #12 =
INFO  11:29:34,663 - #18 new
INFO  11:29:34,663 - #45 int
INFO  11:29:34,663 - #25 [
INFO  11:29:34,663 - #45 Broj
INFO  11:29:34,663 - #15 .
INFO  11:29:34,663 - #45 PET
INFO  11:29:34,663 - #34 ]
INFO  11:29:34,667 - #5 ;
INFO  11:29:34,668 - #45 a
INFO  11:29:34,668 - #15 .
INFO  11:29:34,668 - #45 y
INFO  11:29:34,668 - #12 =
INFO  11:29:34,668 - #18 new
INFO  11:29:34,668 - #45 int
INFO  11:29:34,668 - #25 [
INFO  11:29:34,668 - #42 5
INFO  11:29:34,668 - #34 ]
INFO  11:29:34,668 - #5 ;
INFO  11:29:34,668 - #45 c
INFO  11:29:34,668 - #12 =
INFO  11:29:34,669 - #18 new
INFO  11:29:34,669 - #45 C
INFO  11:29:34,669 - #5 ;
INFO  11:29:34,669 - #45 c
INFO  11:29:34,669 - #15 .
INFO  11:29:34,669 - #45 theA
INFO  11:29:34,669 - #12 =
INFO  11:29:34,669 - #45 a
INFO  11:29:34,669 - #5 ;
INFO  11:29:34,669 - #45 c
INFO  11:29:34,669 - #15 .
INFO  11:29:34,669 - #45 x
INFO  11:29:34,669 - #12 =
INFO  11:29:34,669 - #18 new
INFO  11:29:34,669 - #45 int
INFO  11:29:34,669 - #25 [
INFO  11:29:34,669 - #42 5
INFO  11:29:34,669 - #34 ]
INFO  11:29:34,669 - #5 ;
INFO  11:29:34,669 - #45 x
INFO  11:29:34,669 - #12 =
INFO  11:29:34,669 - #18 new
INFO  11:29:34,669 - #45 int
INFO  11:29:34,669 - #25 [
INFO  11:29:34,669 - #45 Broj
INFO  11:29:34,669 - #15 .
INFO  11:29:34,669 - #45 TRI
INFO  11:29:34,669 - #34 ]
INFO  11:29:34,669 - #5 ;
INFO  11:29:34,669 - #26 read
INFO  11:29:34,669 - #6 (
INFO  11:29:34,669 - #45 c
INFO  11:29:34,669 - #15 .
INFO  11:29:34,669 - #45 i
INFO  11:29:34,669 - #7 )
INFO  11:29:34,669 - #5 ;
INFO  11:29:34,669 - #41 for
INFO  11:29:34,669 - #6 (
INFO  11:29:34,669 - #45 i
INFO  11:29:34,669 - #12 =
INFO  11:29:34,669 - #42 0
INFO  11:29:34,674 - #5 ;
INFO  11:29:34,674 - #45 i
INFO  11:29:34,674 - #19 <
INFO  11:29:34,674 - #42 5
INFO  11:29:34,675 - #5 ;
INFO  11:29:34,675 - #45 i
INFO  11:29:34,675 - #38 ++
INFO  11:29:34,675 - #7 )
INFO  11:29:34,675 - #3 {
INFO  11:29:34,679 - #26 read
INFO  11:29:34,679 - #6 (
INFO  11:29:34,679 - #45 c
INFO  11:29:34,679 - #15 .
INFO  11:29:34,679 - #45 x
INFO  11:29:34,679 - #25 [
INFO  11:29:34,680 - #45 i
INFO  11:29:34,681 - #34 ]
INFO  11:29:34,681 - #7 )
INFO  11:29:34,681 - #5 ;
INFO  11:29:34,681 - #26 read
INFO  11:29:34,681 - #6 (
INFO  11:29:34,681 - #45 c
INFO  11:29:34,681 - #15 .
INFO  11:29:34,681 - #45 theA
INFO  11:29:34,682 - #15 .
INFO  11:29:34,682 - #45 x
INFO  11:29:34,682 - #25 [
INFO  11:29:34,682 - #45 i
INFO  11:29:34,682 - #34 ]
INFO  11:29:34,682 - #7 )
INFO  11:29:34,682 - #5 ;
INFO  11:29:34,683 - #46 if
INFO  11:29:34,683 - #6 (
INFO  11:29:34,683 - #42 1
INFO  11:29:34,683 - #32 >
INFO  11:29:34,683 - #42 2
INFO  11:29:34,684 - #7 )
INFO  11:29:34,684 - #26 read
INFO  11:29:34,685 - #6 (
INFO  11:29:34,685 - #45 a
INFO  11:29:34,685 - #7 )
INFO  11:29:34,685 - #5 ;
INFO  11:29:34,685 - #47 else
INFO  11:29:34,685 - #26 read
INFO  11:29:34,685 - #6 (
INFO  11:29:34,685 - #45 b
INFO  11:29:34,685 - #7 )
INFO  11:29:34,685 - #5 ;
INFO  11:29:34,685 - #4 }
INFO  11:29:34,685 - #9 print
INFO  11:29:34,686 - #6 (
INFO  11:29:34,686 - #45 c
INFO  11:29:34,686 - #15 .
INFO  11:29:34,686 - #45 getValue
INFO  11:29:34,686 - #6 (
INFO  11:29:34,686 - #45 c
INFO  11:29:34,686 - #15 .
INFO  11:29:34,686 - #45 theA
INFO  11:29:34,686 - #15 .
INFO  11:29:34,686 - #45 x
INFO  11:29:34,686 - #25 [
INFO  11:29:34,686 - #45 Broj
INFO  11:29:34,687 - #15 .
INFO  11:29:34,687 - #45 NULA
INFO  11:29:34,687 - #34 ]
INFO  11:29:34,687 - #7 )
INFO  11:29:34,687 - #7 )
INFO  11:29:34,688 - #5 ;
INFO  11:29:34,688 - #45 c
INFO  11:29:34,688 - #15 .
INFO  11:29:34,688 - #45 m
INFO  11:29:34,688 - #6 (
INFO  11:29:34,688 - #7 )
INFO  11:29:34,688 - #5 ;
INFO  11:29:34,688 - #4 }
INFO  11:29:34,688 - #4 }
INFO  11:29:34,733 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:29:34,735 - ===================================
INFO  11:29:34,735 - INFO:  Pocetak programa Program na liniji 1
INFO  11:29:38,606 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:29:40,003 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:29:40,004 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:29:40,004 - INFO:  Definisan interfejs I na liniji 4
INFO  11:29:45,029 - INFO:  Deklarisan niz x na liniji 5
INFO  11:29:45,923 - INFO:  Deklarisan niz y na liniji 5
INFO  11:29:45,924 - INFO:  Definisana klasa A na liniji 5
INFO  11:29:45,924 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:29:49,620 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:30:03,690 - INFO:  Deklarisan niz x na liniji 9
INFO  11:30:03,691 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:30:18,730 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:30:21,381 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:30:32,086 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:30:32,087 - INFO:  Deklarisan metod m na liniji 15
INFO  11:30:32,087 - INFO:  Definisana klasa B na liniji 8
INFO  11:30:54,365 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:30:57,237 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:30:57,237 - INFO:  Definisana klasa C na liniji 18
INFO  11:30:57,238 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:33:13,629 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:33:13,717 - #2 program
INFO  11:33:13,717 - #45 Program
INFO  11:33:13,717 - #45 int
INFO  11:33:13,719 - #45 x
INFO  11:33:13,719 - #8 ,
INFO  11:33:13,721 - #45 y
INFO  11:33:13,722 - #5 ;
INFO  11:33:13,722 - #14 interface
INFO  11:33:13,722 - #45 I
INFO  11:33:13,722 - #3 {
INFO  11:33:13,723 - #13 void
INFO  11:33:13,723 - #45 m
INFO  11:33:13,724 - #6 (
INFO  11:33:13,724 - #7 )
INFO  11:33:13,724 - #5 ;
INFO  11:33:13,724 - #4 }
INFO  11:33:13,724 - #16 class
INFO  11:33:13,725 - #45 A
INFO  11:33:13,725 - #3 {
INFO  11:33:13,727 - #45 int
INFO  11:33:13,727 - #45 x
INFO  11:33:13,727 - #25 [
INFO  11:33:13,727 - #34 ]
INFO  11:33:13,727 - #8 ,
INFO  11:33:13,728 - #45 y
INFO  11:33:13,728 - #25 [
INFO  11:33:13,728 - #34 ]
INFO  11:33:13,728 - #5 ;
INFO  11:33:13,728 - #4 }
INFO  11:33:13,729 - #29 enum
INFO  11:33:13,729 - #45 Broj
INFO  11:33:13,729 - #3 {
INFO  11:33:13,729 - #45 NULA
INFO  11:33:13,730 - #8 ,
INFO  11:33:13,730 - #45 TRI
INFO  11:33:13,730 - #12 =
INFO  11:33:13,730 - #42 3
INFO  11:33:13,730 - #8 ,
INFO  11:33:13,730 - #45 PET
INFO  11:33:13,730 - #12 =
INFO  11:33:13,730 - #42 5
INFO  11:33:13,730 - #4 }
INFO  11:33:13,730 - #16 class
INFO  11:33:13,731 - #45 B
INFO  11:33:13,731 - #39 extends
INFO  11:33:13,732 - #45 A
INFO  11:33:13,732 - #40 implements
INFO  11:33:13,732 - #45 I
INFO  11:33:13,732 - #3 {
INFO  11:33:13,732 - #45 int
INFO  11:33:13,732 - #45 i
INFO  11:33:13,732 - #5 ;
INFO  11:33:13,733 - #45 int
INFO  11:33:13,733 - #45 x
INFO  11:33:13,733 - #25 [
INFO  11:33:13,733 - #34 ]
INFO  11:33:13,733 - #5 ;
INFO  11:33:13,733 - #3 {
INFO  11:33:13,733 - #45 int
INFO  11:33:13,733 - #45 getValue
INFO  11:33:13,735 - #6 (
INFO  11:33:13,735 - #45 int
INFO  11:33:13,736 - #45 a
INFO  11:33:13,736 - #7 )
INFO  11:33:13,736 - #45 int
INFO  11:33:13,736 - #45 b
INFO  11:33:13,736 - #5 ;
INFO  11:33:13,736 - #45 bool
INFO  11:33:13,736 - #45 c
INFO  11:33:13,736 - #5 ;
INFO  11:33:13,737 - #3 {
INFO  11:33:13,737 - #10 return
INFO  11:33:13,737 - #42 0
INFO  11:33:13,738 - #5 ;
INFO  11:33:13,739 - #4 }
INFO  11:33:13,739 - #13 void
INFO  11:33:13,739 - #45 m
INFO  11:33:13,739 - #6 (
INFO  11:33:13,739 - #7 )
INFO  11:33:13,739 - #3 {
INFO  11:33:13,739 - #4 }
INFO  11:33:13,739 - #4 }
INFO  11:33:13,739 - #4 }
INFO  11:33:13,739 - #16 class
INFO  11:33:13,739 - #45 C
INFO  11:33:13,739 - #39 extends
INFO  11:33:13,739 - #45 B
INFO  11:33:13,739 - #3 {
INFO  11:33:13,739 - #45 A
INFO  11:33:13,739 - #45 theA
INFO  11:33:13,740 - #5 ;
INFO  11:33:13,740 - #45 int
INFO  11:33:13,740 - #45 a
INFO  11:33:13,740 - #5 ;
INFO  11:33:13,740 - #3 {
INFO  11:33:13,740 - #13 void
INFO  11:33:13,740 - #45 main
INFO  11:33:13,740 - #6 (
INFO  11:33:13,740 - #45 int
INFO  11:33:13,741 - #45 x
INFO  11:33:13,742 - #7 )
INFO  11:33:13,742 - #45 A
INFO  11:33:13,742 - #45 a
INFO  11:33:13,742 - #5 ;
INFO  11:33:13,742 - #45 C
INFO  11:33:13,742 - #45 c
INFO  11:33:13,742 - #5 ;
INFO  11:33:13,742 - #45 int
INFO  11:33:13,742 - #45 i
INFO  11:33:13,742 - #5 ;
INFO  11:33:13,742 - #45 int
INFO  11:33:13,742 - #45 x
INFO  11:33:13,742 - #25 [
INFO  11:33:13,742 - #34 ]
INFO  11:33:13,743 - #5 ;
INFO  11:33:13,743 - #3 {
INFO  11:33:13,743 - #45 a
INFO  11:33:13,743 - #12 =
INFO  11:33:13,744 - #18 new
INFO  11:33:13,745 - #45 A
INFO  11:33:13,745 - #5 ;
INFO  11:33:13,745 - #45 a
INFO  11:33:13,745 - #15 .
INFO  11:33:13,745 - #45 x
INFO  11:33:13,746 - #12 =
INFO  11:33:13,746 - #18 new
INFO  11:33:13,746 - #45 int
INFO  11:33:13,746 - #25 [
INFO  11:33:13,746 - #45 Broj
INFO  11:33:13,746 - #15 .
INFO  11:33:13,747 - #45 PET
INFO  11:33:13,747 - #34 ]
INFO  11:33:13,747 - #5 ;
INFO  11:33:13,748 - #45 a
INFO  11:33:13,748 - #15 .
INFO  11:33:13,748 - #45 y
INFO  11:33:13,748 - #12 =
INFO  11:33:13,748 - #18 new
INFO  11:33:13,748 - #45 int
INFO  11:33:13,748 - #25 [
INFO  11:33:13,748 - #42 5
INFO  11:33:13,748 - #34 ]
INFO  11:33:13,748 - #5 ;
INFO  11:33:13,748 - #45 c
INFO  11:33:13,748 - #12 =
INFO  11:33:13,749 - #18 new
INFO  11:33:13,749 - #45 C
INFO  11:33:13,749 - #5 ;
INFO  11:33:13,749 - #45 c
INFO  11:33:13,749 - #15 .
INFO  11:33:13,749 - #45 theA
INFO  11:33:13,749 - #12 =
INFO  11:33:13,749 - #45 a
INFO  11:33:13,750 - #5 ;
INFO  11:33:13,750 - #45 c
INFO  11:33:13,750 - #15 .
INFO  11:33:13,750 - #45 x
INFO  11:33:13,750 - #12 =
INFO  11:33:13,750 - #18 new
INFO  11:33:13,750 - #45 int
INFO  11:33:13,750 - #25 [
INFO  11:33:13,750 - #42 5
INFO  11:33:13,750 - #34 ]
INFO  11:33:13,750 - #5 ;
INFO  11:33:13,754 - #45 x
INFO  11:33:13,754 - #12 =
INFO  11:33:13,754 - #18 new
INFO  11:33:13,756 - #45 int
INFO  11:33:13,756 - #25 [
INFO  11:33:13,756 - #45 Broj
INFO  11:33:13,756 - #15 .
INFO  11:33:13,756 - #45 TRI
INFO  11:33:13,756 - #34 ]
INFO  11:33:13,756 - #5 ;
INFO  11:33:13,756 - #26 read
INFO  11:33:13,756 - #6 (
INFO  11:33:13,756 - #45 c
INFO  11:33:13,756 - #15 .
INFO  11:33:13,756 - #45 i
INFO  11:33:13,756 - #7 )
INFO  11:33:13,756 - #5 ;
INFO  11:33:13,757 - #41 for
INFO  11:33:13,757 - #6 (
INFO  11:33:13,757 - #45 i
INFO  11:33:13,757 - #12 =
INFO  11:33:13,757 - #42 0
INFO  11:33:13,758 - #5 ;
INFO  11:33:13,758 - #45 i
INFO  11:33:13,758 - #19 <
INFO  11:33:13,758 - #42 5
INFO  11:33:13,759 - #5 ;
INFO  11:33:13,760 - #45 i
INFO  11:33:13,760 - #38 ++
INFO  11:33:13,760 - #7 )
INFO  11:33:13,761 - #3 {
INFO  11:33:13,761 - #26 read
INFO  11:33:13,761 - #6 (
INFO  11:33:13,761 - #45 c
INFO  11:33:13,761 - #15 .
INFO  11:33:13,761 - #45 x
INFO  11:33:13,761 - #25 [
INFO  11:33:13,761 - #45 i
INFO  11:33:13,761 - #34 ]
INFO  11:33:13,761 - #7 )
INFO  11:33:13,761 - #5 ;
INFO  11:33:13,761 - #26 read
INFO  11:33:13,762 - #6 (
INFO  11:33:13,762 - #45 c
INFO  11:33:13,762 - #15 .
INFO  11:33:13,762 - #45 theA
INFO  11:33:13,762 - #15 .
INFO  11:33:13,762 - #45 x
INFO  11:33:13,762 - #25 [
INFO  11:33:13,762 - #45 i
INFO  11:33:13,762 - #34 ]
INFO  11:33:13,762 - #7 )
INFO  11:33:13,762 - #5 ;
INFO  11:33:13,762 - #46 if
INFO  11:33:13,762 - #6 (
INFO  11:33:13,762 - #42 1
INFO  11:33:13,762 - #32 >
INFO  11:33:13,762 - #42 2
INFO  11:33:13,763 - #7 )
INFO  11:33:13,763 - #26 read
INFO  11:33:13,763 - #6 (
INFO  11:33:13,763 - #45 a
INFO  11:33:13,763 - #7 )
INFO  11:33:13,763 - #5 ;
INFO  11:33:13,763 - #47 else
INFO  11:33:13,764 - #26 read
INFO  11:33:13,764 - #6 (
INFO  11:33:13,764 - #45 b
INFO  11:33:13,764 - #7 )
INFO  11:33:13,764 - #5 ;
INFO  11:33:13,764 - #4 }
INFO  11:33:13,764 - #9 print
INFO  11:33:13,764 - #6 (
INFO  11:33:13,764 - #45 c
INFO  11:33:13,764 - #15 .
INFO  11:33:13,764 - #45 getValue
INFO  11:33:13,764 - #6 (
INFO  11:33:13,764 - #45 c
INFO  11:33:13,764 - #15 .
INFO  11:33:13,764 - #45 theA
INFO  11:33:13,764 - #15 .
INFO  11:33:13,764 - #45 x
INFO  11:33:13,764 - #25 [
INFO  11:33:13,764 - #45 Broj
INFO  11:33:13,764 - #15 .
INFO  11:33:13,764 - #45 NULA
INFO  11:33:13,764 - #34 ]
INFO  11:33:13,764 - #7 )
INFO  11:33:13,765 - #7 )
INFO  11:33:13,766 - #5 ;
INFO  11:33:13,766 - #45 c
INFO  11:33:13,767 - #15 .
INFO  11:33:13,767 - #45 m
INFO  11:33:13,767 - #6 (
INFO  11:33:13,767 - #7 )
INFO  11:33:13,767 - #5 ;
INFO  11:33:13,767 - #4 }
INFO  11:33:13,767 - #4 }
ERROR 11:33:13,767 - 
Sintaksna greska na liniji 37
ERROR 11:33:13,768 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 37
INFO  11:33:22,656 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:33:22,735 - #2 program
INFO  11:33:22,735 - #45 Program
INFO  11:33:22,735 - #45 int
INFO  11:33:22,736 - #45 x
INFO  11:33:22,737 - #8 ,
INFO  11:33:22,738 - #45 y
INFO  11:33:22,739 - #5 ;
INFO  11:33:22,739 - #14 interface
INFO  11:33:22,739 - #45 I
INFO  11:33:22,739 - #3 {
INFO  11:33:22,739 - #13 void
INFO  11:33:22,739 - #45 m
INFO  11:33:22,740 - #6 (
INFO  11:33:22,741 - #7 )
INFO  11:33:22,741 - #5 ;
INFO  11:33:22,742 - #4 }
INFO  11:33:22,742 - #16 class
INFO  11:33:22,742 - #45 A
INFO  11:33:22,742 - #3 {
INFO  11:33:22,743 - #45 int
INFO  11:33:22,743 - #45 x
INFO  11:33:22,743 - #25 [
INFO  11:33:22,746 - #34 ]
INFO  11:33:22,746 - #8 ,
INFO  11:33:22,746 - #45 y
INFO  11:33:22,746 - #25 [
INFO  11:33:22,746 - #34 ]
INFO  11:33:22,747 - #5 ;
INFO  11:33:22,747 - #4 }
INFO  11:33:22,748 - #29 enum
INFO  11:33:22,748 - #45 Broj
INFO  11:33:22,748 - #3 {
INFO  11:33:22,748 - #45 NULA
INFO  11:33:22,748 - #8 ,
INFO  11:33:22,748 - #45 TRI
INFO  11:33:22,749 - #12 =
INFO  11:33:22,749 - #42 3
INFO  11:33:22,749 - #8 ,
INFO  11:33:22,749 - #45 PET
INFO  11:33:22,749 - #12 =
INFO  11:33:22,750 - #42 5
INFO  11:33:22,751 - #4 }
INFO  11:33:22,751 - #16 class
INFO  11:33:22,751 - #45 B
INFO  11:33:22,751 - #39 extends
INFO  11:33:22,751 - #45 A
INFO  11:33:22,751 - #40 implements
INFO  11:33:22,751 - #45 I
INFO  11:33:22,752 - #3 {
INFO  11:33:22,752 - #45 int
INFO  11:33:22,752 - #45 i
INFO  11:33:22,752 - #5 ;
INFO  11:33:22,752 - #45 int
INFO  11:33:22,752 - #45 x
INFO  11:33:22,752 - #25 [
INFO  11:33:22,752 - #34 ]
INFO  11:33:22,752 - #5 ;
INFO  11:33:22,752 - #3 {
INFO  11:33:22,752 - #45 int
INFO  11:33:22,753 - #45 getValue
INFO  11:33:22,754 - #6 (
INFO  11:33:22,754 - #45 int
INFO  11:33:22,754 - #45 a
INFO  11:33:22,755 - #7 )
INFO  11:33:22,755 - #45 int
INFO  11:33:22,755 - #45 b
INFO  11:33:22,755 - #5 ;
INFO  11:33:22,755 - #45 bool
INFO  11:33:22,755 - #45 c
INFO  11:33:22,755 - #5 ;
INFO  11:33:22,755 - #3 {
INFO  11:33:22,755 - #10 return
INFO  11:33:22,756 - #42 0
INFO  11:33:22,757 - #5 ;
INFO  11:33:22,758 - #4 }
INFO  11:33:22,759 - #13 void
INFO  11:33:22,759 - #45 m
INFO  11:33:22,759 - #6 (
INFO  11:33:22,759 - #7 )
INFO  11:33:22,759 - #3 {
INFO  11:33:22,759 - #4 }
INFO  11:33:22,759 - #4 }
INFO  11:33:22,759 - #4 }
INFO  11:33:22,759 - #16 class
INFO  11:33:22,759 - #45 C
INFO  11:33:22,759 - #39 extends
INFO  11:33:22,759 - #45 B
INFO  11:33:22,759 - #3 {
INFO  11:33:22,760 - #45 A
INFO  11:33:22,760 - #45 theA
INFO  11:33:22,760 - #5 ;
INFO  11:33:22,760 - #45 int
INFO  11:33:22,760 - #45 a
INFO  11:33:22,760 - #5 ;
INFO  11:33:22,760 - #4 }
INFO  11:33:22,760 - #3 {
INFO  11:33:22,760 - #13 void
INFO  11:33:22,760 - #45 main
INFO  11:33:22,760 - #6 (
INFO  11:33:22,760 - #45 int
INFO  11:33:22,761 - #45 x
INFO  11:33:22,761 - #7 )
INFO  11:33:22,761 - #45 A
INFO  11:33:22,761 - #45 a
INFO  11:33:22,761 - #5 ;
INFO  11:33:22,761 - #45 C
INFO  11:33:22,761 - #45 c
INFO  11:33:22,761 - #5 ;
INFO  11:33:22,761 - #45 int
INFO  11:33:22,761 - #45 i
INFO  11:33:22,761 - #5 ;
INFO  11:33:22,761 - #45 int
INFO  11:33:22,761 - #45 x
INFO  11:33:22,762 - #25 [
INFO  11:33:22,762 - #34 ]
INFO  11:33:22,762 - #5 ;
INFO  11:33:22,762 - #3 {
INFO  11:33:22,762 - #45 a
INFO  11:33:22,762 - #12 =
INFO  11:33:22,763 - #18 new
INFO  11:33:22,764 - #45 A
INFO  11:33:22,764 - #5 ;
INFO  11:33:22,764 - #45 a
INFO  11:33:22,764 - #15 .
INFO  11:33:22,764 - #45 x
INFO  11:33:22,764 - #12 =
INFO  11:33:22,764 - #18 new
INFO  11:33:22,765 - #45 int
INFO  11:33:22,765 - #25 [
INFO  11:33:22,765 - #45 Broj
INFO  11:33:22,765 - #15 .
INFO  11:33:22,765 - #45 PET
INFO  11:33:22,765 - #34 ]
INFO  11:33:22,766 - #5 ;
INFO  11:33:22,767 - #45 a
INFO  11:33:22,767 - #15 .
INFO  11:33:22,767 - #45 y
INFO  11:33:22,767 - #12 =
INFO  11:33:22,767 - #18 new
INFO  11:33:22,767 - #45 int
INFO  11:33:22,767 - #25 [
INFO  11:33:22,767 - #42 5
INFO  11:33:22,767 - #34 ]
INFO  11:33:22,767 - #5 ;
INFO  11:33:22,767 - #45 c
INFO  11:33:22,768 - #12 =
INFO  11:33:22,768 - #18 new
INFO  11:33:22,768 - #45 C
INFO  11:33:22,768 - #5 ;
INFO  11:33:22,768 - #45 c
INFO  11:33:22,768 - #15 .
INFO  11:33:22,768 - #45 theA
INFO  11:33:22,768 - #12 =
INFO  11:33:22,768 - #45 a
INFO  11:33:22,768 - #5 ;
INFO  11:33:22,768 - #45 c
INFO  11:33:22,768 - #15 .
INFO  11:33:22,768 - #45 x
INFO  11:33:22,768 - #12 =
INFO  11:33:22,768 - #18 new
INFO  11:33:22,768 - #45 int
INFO  11:33:22,769 - #25 [
INFO  11:33:22,769 - #42 5
INFO  11:33:22,769 - #34 ]
INFO  11:33:22,770 - #5 ;
INFO  11:33:22,770 - #45 x
INFO  11:33:22,770 - #12 =
INFO  11:33:22,774 - #18 new
INFO  11:33:22,774 - #45 int
INFO  11:33:22,774 - #25 [
INFO  11:33:22,774 - #45 Broj
INFO  11:33:22,774 - #15 .
INFO  11:33:22,774 - #45 TRI
INFO  11:33:22,774 - #34 ]
INFO  11:33:22,774 - #5 ;
INFO  11:33:22,774 - #26 read
INFO  11:33:22,775 - #6 (
INFO  11:33:22,775 - #45 c
INFO  11:33:22,775 - #15 .
INFO  11:33:22,775 - #45 i
INFO  11:33:22,775 - #7 )
INFO  11:33:22,775 - #5 ;
INFO  11:33:22,775 - #41 for
INFO  11:33:22,775 - #6 (
INFO  11:33:22,775 - #45 i
INFO  11:33:22,775 - #12 =
INFO  11:33:22,776 - #42 0
INFO  11:33:22,776 - #5 ;
INFO  11:33:22,776 - #45 i
INFO  11:33:22,776 - #19 <
INFO  11:33:22,776 - #42 5
INFO  11:33:22,777 - #5 ;
INFO  11:33:22,778 - #45 i
INFO  11:33:22,778 - #38 ++
INFO  11:33:22,778 - #7 )
INFO  11:33:22,779 - #3 {
INFO  11:33:22,779 - #26 read
INFO  11:33:22,779 - #6 (
INFO  11:33:22,779 - #45 c
INFO  11:33:22,779 - #15 .
INFO  11:33:22,779 - #45 x
INFO  11:33:22,779 - #25 [
INFO  11:33:22,779 - #45 i
INFO  11:33:22,780 - #34 ]
INFO  11:33:22,780 - #7 )
INFO  11:33:22,780 - #5 ;
INFO  11:33:22,780 - #26 read
INFO  11:33:22,780 - #6 (
INFO  11:33:22,780 - #45 c
INFO  11:33:22,780 - #15 .
INFO  11:33:22,780 - #45 theA
INFO  11:33:22,780 - #15 .
INFO  11:33:22,780 - #45 x
INFO  11:33:22,780 - #25 [
INFO  11:33:22,780 - #45 i
INFO  11:33:22,780 - #34 ]
INFO  11:33:22,780 - #7 )
INFO  11:33:22,780 - #5 ;
INFO  11:33:22,780 - #46 if
INFO  11:33:22,780 - #6 (
INFO  11:33:22,780 - #42 1
INFO  11:33:22,780 - #32 >
INFO  11:33:22,780 - #42 2
INFO  11:33:22,781 - #7 )
INFO  11:33:22,781 - #26 read
INFO  11:33:22,781 - #6 (
INFO  11:33:22,781 - #45 a
INFO  11:33:22,781 - #7 )
INFO  11:33:22,781 - #5 ;
INFO  11:33:22,781 - #47 else
INFO  11:33:22,782 - #26 read
INFO  11:33:22,782 - #6 (
INFO  11:33:22,782 - #45 b
INFO  11:33:22,782 - #7 )
INFO  11:33:22,782 - #5 ;
INFO  11:33:22,782 - #4 }
INFO  11:33:22,782 - #9 print
INFO  11:33:22,782 - #6 (
INFO  11:33:22,782 - #45 c
INFO  11:33:22,782 - #15 .
INFO  11:33:22,782 - #45 getValue
INFO  11:33:22,782 - #6 (
INFO  11:33:22,783 - #45 c
INFO  11:33:22,783 - #15 .
INFO  11:33:22,783 - #45 theA
INFO  11:33:22,783 - #15 .
INFO  11:33:22,783 - #45 x
INFO  11:33:22,783 - #25 [
INFO  11:33:22,783 - #45 Broj
INFO  11:33:22,783 - #15 .
INFO  11:33:22,783 - #45 NULA
INFO  11:33:22,783 - #34 ]
INFO  11:33:22,783 - #7 )
INFO  11:33:22,783 - #7 )
INFO  11:33:22,784 - #5 ;
INFO  11:33:22,785 - #45 c
INFO  11:33:22,785 - #15 .
INFO  11:33:22,785 - #45 m
INFO  11:33:22,785 - #6 (
INFO  11:33:22,785 - #7 )
INFO  11:33:22,786 - #5 ;
INFO  11:33:22,786 - #4 }
INFO  11:33:22,786 - #4 }
INFO  11:33:22,800 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:33:22,803 - ===================================
INFO  11:33:22,803 - INFO:  Pocetak programa Program na liniji 1
INFO  11:33:22,803 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:33:22,803 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:33:22,803 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:33:22,803 - INFO:  Definisan interfejs I na liniji 4
INFO  11:33:22,803 - INFO:  Deklarisan niz x na liniji 5
INFO  11:33:22,803 - INFO:  Deklarisan niz y na liniji 5
INFO  11:33:22,803 - INFO:  Definisana klasa A na liniji 5
INFO  11:33:22,803 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:33:22,803 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:33:22,804 - INFO:  Deklarisan niz x na liniji 9
INFO  11:33:22,804 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:33:22,804 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:33:22,804 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:33:22,805 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:33:22,805 - INFO:  Deklarisan metod m na liniji 15
INFO  11:33:22,805 - INFO:  Definisana klasa B na liniji 8
INFO  11:33:22,805 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:33:22,805 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:33:22,805 - INFO:  Definisana klasa C na liniji 18
INFO  11:33:22,805 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:33:22,805 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:33:22,805 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:33:22,805 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:33:22,806 - ERROR: Postoji definisana promenljiva sa imenom x na liniji 20		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 21		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 22		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 22		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 22		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 23		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 24		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 25		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 26		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 27		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 29		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:33:22,806 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:33:22,807 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:33:22,807 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:33:22,807 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
INFO  11:33:22,807 - INFO:  Deklarisan metod main na liniji 20
INFO  11:33:22,807 - ===================================
ERROR 11:33:22,808 - Postoji greska u generisanom kodu!
INFO  11:33:27,245 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:33:27,416 - #2 program
INFO  11:33:27,416 - #45 Program
INFO  11:33:27,416 - #45 int
INFO  11:33:27,416 - #45 x
INFO  11:33:27,416 - #8 ,
INFO  11:33:27,421 - #45 y
INFO  11:33:27,421 - #5 ;
INFO  11:33:27,421 - #14 interface
INFO  11:33:27,421 - #45 I
INFO  11:33:27,421 - #3 {
INFO  11:33:27,425 - #13 void
INFO  11:33:27,425 - #45 m
INFO  11:33:27,426 - #6 (
INFO  11:33:27,426 - #7 )
INFO  11:33:27,427 - #5 ;
INFO  11:33:27,427 - #4 }
INFO  11:33:27,428 - #16 class
INFO  11:33:27,428 - #45 A
INFO  11:33:27,428 - #3 {
INFO  11:33:27,429 - #45 int
INFO  11:33:27,432 - #45 x
INFO  11:33:27,432 - #25 [
INFO  11:33:27,434 - #34 ]
INFO  11:33:27,434 - #8 ,
INFO  11:33:27,434 - #45 y
INFO  11:33:27,435 - #25 [
INFO  11:33:27,435 - #34 ]
INFO  11:33:27,435 - #5 ;
INFO  11:33:27,435 - #4 }
INFO  11:33:27,436 - #29 enum
INFO  11:33:27,436 - #45 Broj
INFO  11:33:27,436 - #3 {
INFO  11:33:27,436 - #45 NULA
INFO  11:33:27,436 - #8 ,
INFO  11:33:27,438 - #45 TRI
INFO  11:33:27,438 - #12 =
INFO  11:33:27,438 - #42 3
INFO  11:33:27,438 - #8 ,
INFO  11:33:27,438 - #45 PET
INFO  11:33:27,439 - #12 =
INFO  11:33:27,439 - #42 5
INFO  11:33:27,439 - #4 }
INFO  11:33:27,439 - #16 class
INFO  11:33:27,439 - #45 B
INFO  11:33:27,439 - #39 extends
INFO  11:33:27,439 - #45 A
INFO  11:33:27,439 - #40 implements
INFO  11:33:27,439 - #45 I
INFO  11:33:27,439 - #3 {
INFO  11:33:27,441 - #45 int
INFO  11:33:27,441 - #45 i
INFO  11:33:27,441 - #5 ;
INFO  11:33:27,441 - #45 int
INFO  11:33:27,442 - #45 x
INFO  11:33:27,442 - #25 [
INFO  11:33:27,442 - #34 ]
INFO  11:33:27,442 - #5 ;
INFO  11:33:27,442 - #3 {
INFO  11:33:27,442 - #45 int
INFO  11:33:27,442 - #45 getValue
INFO  11:33:27,442 - #6 (
INFO  11:33:27,446 - #45 int
INFO  11:33:27,446 - #45 a
INFO  11:33:27,446 - #7 )
INFO  11:33:27,448 - #45 int
INFO  11:33:27,448 - #45 b
INFO  11:33:27,448 - #5 ;
INFO  11:33:27,448 - #45 bool
INFO  11:33:27,448 - #45 c
INFO  11:33:27,448 - #5 ;
INFO  11:33:27,448 - #3 {
INFO  11:33:27,448 - #10 return
INFO  11:33:27,449 - #42 0
INFO  11:33:27,451 - #5 ;
INFO  11:33:27,452 - #4 }
INFO  11:33:27,454 - #13 void
INFO  11:33:27,454 - #45 m
INFO  11:33:27,454 - #6 (
INFO  11:33:27,454 - #7 )
INFO  11:33:27,454 - #3 {
INFO  11:33:27,454 - #4 }
INFO  11:33:27,455 - #4 }
INFO  11:33:27,455 - #4 }
INFO  11:33:27,455 - #16 class
INFO  11:33:27,455 - #45 C
INFO  11:33:27,455 - #39 extends
INFO  11:33:27,455 - #45 B
INFO  11:33:27,455 - #3 {
INFO  11:33:27,455 - #45 A
INFO  11:33:27,455 - #45 theA
INFO  11:33:27,455 - #5 ;
INFO  11:33:27,455 - #45 int
INFO  11:33:27,456 - #45 a
INFO  11:33:27,456 - #5 ;
INFO  11:33:27,456 - #4 }
INFO  11:33:27,456 - #3 {
INFO  11:33:27,456 - #13 void
INFO  11:33:27,456 - #45 main
INFO  11:33:27,456 - #6 (
INFO  11:33:27,456 - #45 int
INFO  11:33:27,460 - #45 x
INFO  11:33:27,465 - #7 )
INFO  11:33:27,465 - #45 A
INFO  11:33:27,465 - #45 a
INFO  11:33:27,465 - #5 ;
INFO  11:33:27,465 - #45 C
INFO  11:33:27,465 - #45 c
INFO  11:33:27,465 - #5 ;
INFO  11:33:27,465 - #45 int
INFO  11:33:27,465 - #45 i
INFO  11:33:27,466 - #5 ;
INFO  11:33:27,466 - #45 int
INFO  11:33:27,466 - #45 x
INFO  11:33:27,466 - #25 [
INFO  11:33:27,466 - #34 ]
INFO  11:33:27,466 - #5 ;
INFO  11:33:27,466 - #3 {
INFO  11:33:27,466 - #45 a
INFO  11:33:27,466 - #12 =
INFO  11:33:27,467 - #18 new
INFO  11:33:27,469 - #45 A
INFO  11:33:27,469 - #5 ;
INFO  11:33:27,469 - #45 a
INFO  11:33:27,469 - #15 .
INFO  11:33:27,469 - #45 x
INFO  11:33:27,475 - #12 =
INFO  11:33:27,480 - #18 new
INFO  11:33:27,480 - #45 int
INFO  11:33:27,480 - #25 [
INFO  11:33:27,480 - #45 Broj
INFO  11:33:27,480 - #15 .
INFO  11:33:27,480 - #45 PET
INFO  11:33:27,480 - #34 ]
INFO  11:33:27,480 - #5 ;
INFO  11:33:27,483 - #45 a
INFO  11:33:27,483 - #15 .
INFO  11:33:27,483 - #45 y
INFO  11:33:27,483 - #12 =
INFO  11:33:27,483 - #18 new
INFO  11:33:27,483 - #45 int
INFO  11:33:27,483 - #25 [
INFO  11:33:27,483 - #42 5
INFO  11:33:27,483 - #34 ]
INFO  11:33:27,483 - #5 ;
INFO  11:33:27,483 - #45 c
INFO  11:33:27,483 - #12 =
INFO  11:33:27,483 - #18 new
INFO  11:33:27,483 - #45 C
INFO  11:33:27,483 - #5 ;
INFO  11:33:27,484 - #45 c
INFO  11:33:27,484 - #15 .
INFO  11:33:27,484 - #45 theA
INFO  11:33:27,484 - #12 =
INFO  11:33:27,484 - #45 a
INFO  11:33:27,484 - #5 ;
INFO  11:33:27,484 - #45 c
INFO  11:33:27,484 - #15 .
INFO  11:33:27,484 - #45 x
INFO  11:33:27,484 - #12 =
INFO  11:33:27,484 - #18 new
INFO  11:33:27,484 - #45 int
INFO  11:33:27,484 - #25 [
INFO  11:33:27,484 - #42 5
INFO  11:33:27,484 - #34 ]
INFO  11:33:27,484 - #5 ;
INFO  11:33:27,484 - #45 x
INFO  11:33:27,484 - #12 =
INFO  11:33:27,484 - #18 new
INFO  11:33:27,484 - #45 int
INFO  11:33:27,484 - #25 [
INFO  11:33:27,484 - #45 Broj
INFO  11:33:27,484 - #15 .
INFO  11:33:27,484 - #45 TRI
INFO  11:33:27,484 - #34 ]
INFO  11:33:27,484 - #5 ;
INFO  11:33:27,484 - #26 read
INFO  11:33:27,484 - #6 (
INFO  11:33:27,484 - #45 c
INFO  11:33:27,484 - #15 .
INFO  11:33:27,484 - #45 i
INFO  11:33:27,484 - #7 )
INFO  11:33:27,484 - #5 ;
INFO  11:33:27,484 - #41 for
INFO  11:33:27,484 - #6 (
INFO  11:33:27,484 - #45 i
INFO  11:33:27,484 - #12 =
INFO  11:33:27,484 - #42 0
INFO  11:33:27,484 - #5 ;
INFO  11:33:27,484 - #45 i
INFO  11:33:27,484 - #19 <
INFO  11:33:27,484 - #42 5
INFO  11:33:27,492 - #5 ;
INFO  11:33:27,492 - #45 i
INFO  11:33:27,492 - #38 ++
INFO  11:33:27,492 - #7 )
INFO  11:33:27,492 - #3 {
INFO  11:33:27,492 - #26 read
INFO  11:33:27,492 - #6 (
INFO  11:33:27,492 - #45 c
INFO  11:33:27,492 - #15 .
INFO  11:33:27,492 - #45 x
INFO  11:33:27,497 - #25 [
INFO  11:33:27,497 - #45 i
INFO  11:33:27,497 - #34 ]
INFO  11:33:27,497 - #7 )
INFO  11:33:27,498 - #5 ;
INFO  11:33:27,498 - #26 read
INFO  11:33:27,498 - #6 (
INFO  11:33:27,498 - #45 c
INFO  11:33:27,498 - #15 .
INFO  11:33:27,498 - #45 theA
INFO  11:33:27,498 - #15 .
INFO  11:33:27,498 - #45 x
INFO  11:33:27,498 - #25 [
INFO  11:33:27,498 - #45 i
INFO  11:33:27,498 - #34 ]
INFO  11:33:27,498 - #7 )
INFO  11:33:27,498 - #5 ;
INFO  11:33:27,498 - #46 if
INFO  11:33:27,499 - #6 (
INFO  11:33:27,499 - #42 1
INFO  11:33:27,499 - #32 >
INFO  11:33:27,499 - #42 2
INFO  11:33:27,500 - #7 )
INFO  11:33:27,500 - #26 read
INFO  11:33:27,500 - #6 (
INFO  11:33:27,500 - #45 a
INFO  11:33:27,500 - #7 )
INFO  11:33:27,500 - #5 ;
INFO  11:33:27,500 - #47 else
INFO  11:33:27,500 - #26 read
INFO  11:33:27,500 - #6 (
INFO  11:33:27,500 - #45 b
INFO  11:33:27,500 - #7 )
INFO  11:33:27,500 - #5 ;
INFO  11:33:27,500 - #4 }
INFO  11:33:27,501 - #9 print
INFO  11:33:27,502 - #6 (
INFO  11:33:27,502 - #45 c
INFO  11:33:27,502 - #15 .
INFO  11:33:27,502 - #45 getValue
INFO  11:33:27,502 - #6 (
INFO  11:33:27,502 - #45 c
INFO  11:33:27,502 - #15 .
INFO  11:33:27,502 - #45 theA
INFO  11:33:27,502 - #15 .
INFO  11:33:27,502 - #45 x
INFO  11:33:27,502 - #25 [
INFO  11:33:27,502 - #45 Broj
INFO  11:33:27,502 - #15 .
INFO  11:33:27,502 - #45 NULA
INFO  11:33:27,502 - #34 ]
INFO  11:33:27,503 - #7 )
INFO  11:33:27,503 - #7 )
INFO  11:33:27,504 - #5 ;
INFO  11:33:27,504 - #45 c
INFO  11:33:27,504 - #15 .
INFO  11:33:27,504 - #45 m
INFO  11:33:27,504 - #6 (
INFO  11:33:27,504 - #7 )
INFO  11:33:27,505 - #5 ;
INFO  11:33:27,505 - #4 }
INFO  11:33:27,505 - #4 }
INFO  11:33:27,536 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:33:27,541 - ===================================
INFO  11:33:27,541 - INFO:  Pocetak programa Program na liniji 1
INFO  11:33:36,116 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:33:37,844 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:34:00,207 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:34:01,023 - ERROR: Postoji definisana promenljiva sa imenom x na liniji 20		<--------------- ERROR 
ERROR 11:34:01,024 - ERROR: Odgovarajuci tip mora biti int na liniji 21		<--------------- ERROR 
INFO  11:37:20,637 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:37:20,845 - #2 program
INFO  11:37:20,845 - #45 Program
INFO  11:37:20,845 - #45 int
INFO  11:37:20,848 - #45 x
INFO  11:37:20,848 - #8 ,
INFO  11:37:20,853 - #45 y
INFO  11:37:20,854 - #5 ;
INFO  11:37:20,854 - #14 interface
INFO  11:37:20,854 - #45 I
INFO  11:37:20,854 - #3 {
INFO  11:37:20,855 - #13 void
INFO  11:37:20,855 - #45 m
INFO  11:37:20,856 - #6 (
INFO  11:37:20,856 - #7 )
INFO  11:37:20,859 - #5 ;
INFO  11:37:20,859 - #4 }
INFO  11:37:20,860 - #16 class
INFO  11:37:20,860 - #45 A
INFO  11:37:20,860 - #3 {
INFO  11:37:20,867 - #45 int
INFO  11:37:20,870 - #45 x
INFO  11:37:20,870 - #25 [
INFO  11:37:20,870 - #34 ]
INFO  11:37:20,870 - #8 ,
INFO  11:37:20,871 - #45 y
INFO  11:37:20,871 - #25 [
INFO  11:37:20,871 - #34 ]
INFO  11:37:20,872 - #5 ;
INFO  11:37:20,872 - #4 }
INFO  11:37:20,873 - #29 enum
INFO  11:37:20,874 - #45 Broj
INFO  11:37:20,875 - #3 {
INFO  11:37:20,875 - #45 NULA
INFO  11:37:20,875 - #8 ,
INFO  11:37:20,875 - #45 TRI
INFO  11:37:20,875 - #12 =
INFO  11:37:20,875 - #42 3
INFO  11:37:20,875 - #8 ,
INFO  11:37:20,875 - #45 PET
INFO  11:37:20,875 - #12 =
INFO  11:37:20,875 - #42 5
INFO  11:37:20,875 - #4 }
INFO  11:37:20,880 - #16 class
INFO  11:37:20,880 - #45 B
INFO  11:37:20,881 - #39 extends
INFO  11:37:20,882 - #45 A
INFO  11:37:20,882 - #40 implements
INFO  11:37:20,882 - #45 I
INFO  11:37:20,882 - #3 {
INFO  11:37:20,883 - #45 int
INFO  11:37:20,883 - #45 i
INFO  11:37:20,883 - #5 ;
INFO  11:37:20,883 - #45 int
INFO  11:37:20,884 - #45 x
INFO  11:37:20,884 - #25 [
INFO  11:37:20,884 - #34 ]
INFO  11:37:20,884 - #5 ;
INFO  11:37:20,887 - #3 {
INFO  11:37:20,887 - #45 int
INFO  11:37:20,890 - #45 getValue
INFO  11:37:20,891 - #6 (
INFO  11:37:20,893 - #45 int
INFO  11:37:20,893 - #45 a
INFO  11:37:20,893 - #7 )
INFO  11:37:20,894 - #45 int
INFO  11:37:20,894 - #45 b
INFO  11:37:20,894 - #5 ;
INFO  11:37:20,894 - #45 bool
INFO  11:37:20,894 - #45 c
INFO  11:37:20,894 - #5 ;
INFO  11:37:20,895 - #3 {
INFO  11:37:20,895 - #10 return
INFO  11:37:20,896 - #42 0
INFO  11:37:20,898 - #5 ;
INFO  11:37:20,900 - #4 }
INFO  11:37:20,900 - #13 void
INFO  11:37:20,901 - #45 m
INFO  11:37:20,901 - #6 (
INFO  11:37:20,901 - #7 )
INFO  11:37:20,902 - #3 {
INFO  11:37:20,902 - #4 }
INFO  11:37:20,902 - #4 }
INFO  11:37:20,902 - #4 }
INFO  11:37:20,903 - #16 class
INFO  11:37:20,903 - #45 C
INFO  11:37:20,903 - #39 extends
INFO  11:37:20,903 - #45 B
INFO  11:37:20,903 - #3 {
INFO  11:37:20,903 - #45 A
INFO  11:37:20,904 - #45 theA
INFO  11:37:20,905 - #5 ;
INFO  11:37:20,905 - #45 int
INFO  11:37:20,905 - #45 a
INFO  11:37:20,905 - #5 ;
INFO  11:37:20,906 - #4 }
INFO  11:37:20,906 - #3 {
INFO  11:37:20,906 - #13 void
INFO  11:37:20,906 - #45 main
INFO  11:37:20,907 - #6 (
INFO  11:37:20,907 - #45 int
INFO  11:37:20,916 - #45 x
INFO  11:37:20,920 - #7 )
INFO  11:37:20,920 - #45 A
INFO  11:37:20,920 - #45 a
INFO  11:37:20,920 - #5 ;
INFO  11:37:20,921 - #45 C
INFO  11:37:20,921 - #45 c
INFO  11:37:20,921 - #5 ;
INFO  11:37:20,921 - #45 int
INFO  11:37:20,921 - #45 i
INFO  11:37:20,921 - #5 ;
INFO  11:37:20,921 - #45 int
INFO  11:37:20,921 - #45 x
INFO  11:37:20,921 - #25 [
INFO  11:37:20,921 - #34 ]
INFO  11:37:20,921 - #5 ;
INFO  11:37:20,921 - #3 {
INFO  11:37:20,921 - #45 a
INFO  11:37:20,921 - #12 =
INFO  11:37:20,923 - #18 new
INFO  11:37:20,925 - #45 A
INFO  11:37:20,925 - #5 ;
INFO  11:37:20,926 - #45 a
INFO  11:37:20,927 - #15 .
INFO  11:37:20,927 - #45 x
INFO  11:37:20,927 - #12 =
INFO  11:37:20,927 - #18 new
INFO  11:37:20,927 - #45 int
INFO  11:37:20,927 - #25 [
INFO  11:37:20,927 - #45 Broj
INFO  11:37:20,927 - #15 .
INFO  11:37:20,927 - #45 PET
INFO  11:37:20,927 - #34 ]
INFO  11:37:20,927 - #5 ;
INFO  11:37:20,927 - #45 a
INFO  11:37:20,927 - #15 .
INFO  11:37:20,927 - #45 y
INFO  11:37:20,932 - #12 =
INFO  11:37:20,932 - #18 new
INFO  11:37:20,932 - #45 int
INFO  11:37:20,932 - #25 [
INFO  11:37:20,932 - #42 5
INFO  11:37:20,932 - #34 ]
INFO  11:37:20,933 - #5 ;
INFO  11:37:20,933 - #45 c
INFO  11:37:20,933 - #12 =
INFO  11:37:20,933 - #18 new
INFO  11:37:20,933 - #45 C
INFO  11:37:20,934 - #5 ;
INFO  11:37:20,934 - #45 c
INFO  11:37:20,934 - #15 .
INFO  11:37:20,934 - #45 theA
INFO  11:37:20,934 - #12 =
INFO  11:37:20,934 - #45 a
INFO  11:37:20,936 - #5 ;
INFO  11:37:20,936 - #45 c
INFO  11:37:20,936 - #15 .
INFO  11:37:20,936 - #45 x
INFO  11:37:20,936 - #12 =
INFO  11:37:20,936 - #18 new
INFO  11:37:20,936 - #45 int
INFO  11:37:20,936 - #25 [
INFO  11:37:20,936 - #42 5
INFO  11:37:20,936 - #34 ]
INFO  11:37:20,936 - #5 ;
INFO  11:37:20,936 - #45 x
INFO  11:37:20,936 - #12 =
INFO  11:37:20,936 - #18 new
INFO  11:37:20,936 - #45 int
INFO  11:37:20,936 - #25 [
INFO  11:37:20,936 - #45 Broj
INFO  11:37:20,936 - #15 .
INFO  11:37:20,936 - #45 TRI
INFO  11:37:20,936 - #34 ]
INFO  11:37:20,936 - #5 ;
INFO  11:37:20,936 - #26 read
INFO  11:37:20,936 - #6 (
INFO  11:37:20,936 - #45 c
INFO  11:37:20,936 - #15 .
INFO  11:37:20,936 - #45 i
INFO  11:37:20,936 - #7 )
INFO  11:37:20,936 - #5 ;
INFO  11:37:20,936 - #41 for
INFO  11:37:20,941 - #6 (
INFO  11:37:20,941 - #45 i
INFO  11:37:20,941 - #12 =
INFO  11:37:20,941 - #42 0
INFO  11:37:20,941 - #5 ;
INFO  11:37:20,941 - #45 i
INFO  11:37:20,941 - #19 <
INFO  11:37:20,941 - #42 5
INFO  11:37:20,941 - #5 ;
INFO  11:37:20,951 - #45 i
INFO  11:37:20,951 - #38 ++
INFO  11:37:20,951 - #7 )
INFO  11:37:20,951 - #3 {
INFO  11:37:20,951 - #26 read
INFO  11:37:20,951 - #6 (
INFO  11:37:20,951 - #45 c
INFO  11:37:20,951 - #15 .
INFO  11:37:20,951 - #45 x
INFO  11:37:20,951 - #25 [
INFO  11:37:20,951 - #45 i
INFO  11:37:20,951 - #34 ]
INFO  11:37:20,951 - #7 )
INFO  11:37:20,951 - #5 ;
INFO  11:37:20,951 - #26 read
INFO  11:37:20,951 - #6 (
INFO  11:37:20,956 - #45 c
INFO  11:37:20,956 - #15 .
INFO  11:37:20,956 - #45 theA
INFO  11:37:20,956 - #15 .
INFO  11:37:20,956 - #45 x
INFO  11:37:20,956 - #25 [
INFO  11:37:20,956 - #45 i
INFO  11:37:20,956 - #34 ]
INFO  11:37:20,956 - #7 )
INFO  11:37:20,956 - #5 ;
INFO  11:37:20,956 - #46 if
INFO  11:37:20,958 - #6 (
INFO  11:37:20,958 - #42 1
INFO  11:37:20,958 - #32 >
INFO  11:37:20,958 - #42 2
INFO  11:37:20,959 - #7 )
INFO  11:37:20,959 - #26 read
INFO  11:37:20,959 - #6 (
INFO  11:37:20,959 - #45 a
INFO  11:37:20,959 - #7 )
INFO  11:37:20,959 - #5 ;
INFO  11:37:20,959 - #47 else
INFO  11:37:20,959 - #26 read
INFO  11:37:20,959 - #6 (
INFO  11:37:20,959 - #45 b
INFO  11:37:20,959 - #7 )
INFO  11:37:20,959 - #5 ;
INFO  11:37:20,959 - #4 }
INFO  11:37:20,959 - #9 print
INFO  11:37:20,959 - #6 (
INFO  11:37:20,959 - #45 c
INFO  11:37:20,959 - #15 .
INFO  11:37:20,959 - #45 getValue
INFO  11:37:20,959 - #6 (
INFO  11:37:20,959 - #45 c
INFO  11:37:20,959 - #15 .
INFO  11:37:20,959 - #45 theA
INFO  11:37:20,965 - #15 .
INFO  11:37:20,965 - #45 x
INFO  11:37:20,965 - #25 [
INFO  11:37:20,965 - #45 Broj
INFO  11:37:20,966 - #15 .
INFO  11:37:20,966 - #45 NULA
INFO  11:37:20,966 - #34 ]
INFO  11:37:20,966 - #7 )
INFO  11:37:20,969 - #7 )
INFO  11:37:20,970 - #5 ;
INFO  11:37:20,970 - #45 c
INFO  11:37:20,970 - #15 .
INFO  11:37:20,970 - #45 m
INFO  11:37:20,970 - #6 (
INFO  11:37:20,970 - #7 )
INFO  11:37:20,970 - #5 ;
INFO  11:37:20,970 - #4 }
INFO  11:37:20,970 - #4 }
INFO  11:37:21,013 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:37:21,028 - ===================================
INFO  11:37:21,028 - INFO:  Pocetak programa Program na liniji 1
INFO  11:37:21,033 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:37:21,033 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:37:21,033 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:37:21,033 - INFO:  Definisan interfejs I na liniji 4
INFO  11:37:21,033 - INFO:  Deklarisan niz x na liniji 5
INFO  11:37:21,034 - INFO:  Deklarisan niz y na liniji 5
INFO  11:37:21,036 - INFO:  Definisana klasa A na liniji 5
INFO  11:37:21,036 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:37:21,036 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:37:21,037 - INFO:  Deklarisan niz x na liniji 9
INFO  11:37:21,037 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:37:21,037 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:37:21,037 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:37:21,038 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:37:21,039 - INFO:  Deklarisan metod m na liniji 15
INFO  11:37:21,039 - INFO:  Definisana klasa B na liniji 8
INFO  11:37:21,039 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:37:21,039 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:37:21,039 - INFO:  Definisana klasa C na liniji 18
INFO  11:37:21,039 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:37:21,039 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:37:21,039 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:37:21,039 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:37:21,039 - ERROR: Postoji definisana promenljiva sa imenom x na liniji 20		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 21		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 22		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 22		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 22		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 23		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 24		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 25		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 26		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 27		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 29		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:37:21,039 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
INFO  11:37:21,044 - INFO:  Deklarisan metod main na liniji 20
INFO  11:37:21,044 - ===================================
ERROR 11:37:21,044 - Postoji greska u generisanom kodu!
INFO  11:37:56,364 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:37:56,471 - #2 program
INFO  11:37:56,471 - #45 Program
INFO  11:37:56,471 - #45 int
INFO  11:37:56,472 - #45 x
INFO  11:37:56,473 - #8 ,
INFO  11:37:56,474 - #45 y
INFO  11:37:56,474 - #5 ;
INFO  11:37:56,476 - #14 interface
INFO  11:37:56,476 - #45 I
INFO  11:37:56,476 - #3 {
INFO  11:37:56,476 - #13 void
INFO  11:37:56,476 - #45 m
INFO  11:37:56,476 - #6 (
INFO  11:37:56,476 - #7 )
INFO  11:37:56,479 - #5 ;
INFO  11:37:56,479 - #4 }
INFO  11:37:56,479 - #16 class
INFO  11:37:56,480 - #45 A
INFO  11:37:56,480 - #3 {
INFO  11:37:56,483 - #45 int
INFO  11:37:56,483 - #45 x
INFO  11:37:56,483 - #25 [
INFO  11:37:56,483 - #34 ]
INFO  11:37:56,483 - #8 ,
INFO  11:37:56,484 - #45 y
INFO  11:37:56,484 - #25 [
INFO  11:37:56,484 - #34 ]
INFO  11:37:56,484 - #5 ;
INFO  11:37:56,484 - #4 }
INFO  11:37:56,486 - #29 enum
INFO  11:37:56,486 - #45 Broj
INFO  11:37:56,486 - #3 {
INFO  11:37:56,486 - #45 NULA
INFO  11:37:56,486 - #8 ,
INFO  11:37:56,486 - #45 TRI
INFO  11:37:56,486 - #12 =
INFO  11:37:56,486 - #42 3
INFO  11:37:56,486 - #8 ,
INFO  11:37:56,486 - #45 PET
INFO  11:37:56,487 - #12 =
INFO  11:37:56,487 - #42 5
INFO  11:37:56,487 - #4 }
INFO  11:37:56,487 - #16 class
INFO  11:37:56,488 - #45 B
INFO  11:37:56,488 - #39 extends
INFO  11:37:56,488 - #45 A
INFO  11:37:56,488 - #40 implements
INFO  11:37:56,488 - #45 I
INFO  11:37:56,488 - #3 {
INFO  11:37:56,488 - #45 int
INFO  11:37:56,489 - #45 i
INFO  11:37:56,489 - #5 ;
INFO  11:37:56,489 - #45 int
INFO  11:37:56,489 - #45 x
INFO  11:37:56,489 - #25 [
INFO  11:37:56,489 - #34 ]
INFO  11:37:56,489 - #5 ;
INFO  11:37:56,489 - #3 {
INFO  11:37:56,490 - #45 int
INFO  11:37:56,490 - #45 getValue
INFO  11:37:56,490 - #6 (
INFO  11:37:56,491 - #45 int
INFO  11:37:56,491 - #45 a
INFO  11:37:56,492 - #7 )
INFO  11:37:56,492 - #45 int
INFO  11:37:56,492 - #45 b
INFO  11:37:56,492 - #5 ;
INFO  11:37:56,492 - #45 bool
INFO  11:37:56,492 - #45 c
INFO  11:37:56,492 - #5 ;
INFO  11:37:56,492 - #3 {
INFO  11:37:56,493 - #10 return
INFO  11:37:56,493 - #42 0
INFO  11:37:56,496 - #5 ;
INFO  11:37:56,496 - #4 }
INFO  11:37:56,497 - #13 void
INFO  11:37:56,497 - #45 m
INFO  11:37:56,497 - #6 (
INFO  11:37:56,497 - #7 )
INFO  11:37:56,497 - #3 {
INFO  11:37:56,497 - #4 }
INFO  11:37:56,497 - #4 }
INFO  11:37:56,497 - #4 }
INFO  11:37:56,497 - #16 class
INFO  11:37:56,497 - #45 C
INFO  11:37:56,498 - #39 extends
INFO  11:37:56,498 - #45 B
INFO  11:37:56,498 - #3 {
INFO  11:37:56,498 - #45 A
INFO  11:37:56,498 - #45 theA
INFO  11:37:56,498 - #5 ;
INFO  11:37:56,498 - #45 int
INFO  11:37:56,498 - #45 a
INFO  11:37:56,498 - #5 ;
INFO  11:37:56,498 - #4 }
INFO  11:37:56,499 - #3 {
INFO  11:37:56,499 - #13 void
INFO  11:37:56,499 - #45 main
INFO  11:37:56,499 - #6 (
INFO  11:37:56,499 - #45 int
INFO  11:37:56,499 - #45 x
INFO  11:37:56,499 - #7 )
INFO  11:37:56,499 - #45 A
INFO  11:37:56,499 - #45 a
INFO  11:37:56,499 - #5 ;
INFO  11:37:56,499 - #45 C
INFO  11:37:56,499 - #45 c
INFO  11:37:56,500 - #5 ;
INFO  11:37:56,501 - #45 int
INFO  11:37:56,501 - #45 i
INFO  11:37:56,501 - #5 ;
INFO  11:37:56,501 - #45 int
INFO  11:37:56,501 - #45 x
INFO  11:37:56,501 - #25 [
INFO  11:37:56,501 - #34 ]
INFO  11:37:56,501 - #5 ;
INFO  11:37:56,501 - #3 {
INFO  11:37:56,501 - #45 a
INFO  11:37:56,501 - #12 =
INFO  11:37:56,502 - #18 new
INFO  11:37:56,502 - #45 A
INFO  11:37:56,502 - #5 ;
INFO  11:37:56,503 - #45 a
INFO  11:37:56,503 - #15 .
INFO  11:37:56,503 - #45 x
INFO  11:37:56,503 - #12 =
INFO  11:37:56,503 - #18 new
INFO  11:37:56,504 - #45 int
INFO  11:37:56,504 - #25 [
INFO  11:37:56,504 - #45 Broj
INFO  11:37:56,504 - #15 .
INFO  11:37:56,504 - #45 PET
INFO  11:37:56,504 - #34 ]
INFO  11:37:56,505 - #5 ;
INFO  11:37:56,506 - #45 a
INFO  11:37:56,506 - #15 .
INFO  11:37:56,506 - #45 y
INFO  11:37:56,506 - #12 =
INFO  11:37:56,506 - #18 new
INFO  11:37:56,506 - #45 int
INFO  11:37:56,506 - #25 [
INFO  11:37:56,506 - #42 5
INFO  11:37:56,506 - #34 ]
INFO  11:37:56,506 - #5 ;
INFO  11:37:56,507 - #45 c
INFO  11:37:56,507 - #12 =
INFO  11:37:56,507 - #18 new
INFO  11:37:56,507 - #45 C
INFO  11:37:56,507 - #5 ;
INFO  11:37:56,507 - #45 c
INFO  11:37:56,507 - #15 .
INFO  11:37:56,507 - #45 theA
INFO  11:37:56,507 - #12 =
INFO  11:37:56,507 - #45 a
INFO  11:37:56,507 - #5 ;
INFO  11:37:56,507 - #45 c
INFO  11:37:56,508 - #15 .
INFO  11:37:56,508 - #45 x
INFO  11:37:56,508 - #12 =
INFO  11:37:56,508 - #18 new
INFO  11:37:56,508 - #45 int
INFO  11:37:56,508 - #25 [
INFO  11:37:56,508 - #42 5
INFO  11:37:56,508 - #34 ]
INFO  11:37:56,512 - #5 ;
INFO  11:37:56,512 - #45 x
INFO  11:37:56,512 - #12 =
INFO  11:37:56,515 - #18 new
INFO  11:37:56,515 - #45 int
INFO  11:37:56,515 - #25 [
INFO  11:37:56,515 - #45 Broj
INFO  11:37:56,515 - #15 .
INFO  11:37:56,515 - #45 TRI
INFO  11:37:56,515 - #34 ]
INFO  11:37:56,515 - #5 ;
INFO  11:37:56,515 - #26 read
INFO  11:37:56,515 - #6 (
INFO  11:37:56,515 - #45 c
INFO  11:37:56,515 - #15 .
INFO  11:37:56,515 - #45 i
INFO  11:37:56,516 - #7 )
INFO  11:37:56,516 - #5 ;
INFO  11:37:56,516 - #41 for
INFO  11:37:56,516 - #6 (
INFO  11:37:56,516 - #45 i
INFO  11:37:56,516 - #12 =
INFO  11:37:56,516 - #42 0
INFO  11:37:56,516 - #5 ;
INFO  11:37:56,516 - #45 i
INFO  11:37:56,516 - #19 <
INFO  11:37:56,517 - #42 5
INFO  11:37:56,518 - #5 ;
INFO  11:37:56,518 - #45 i
INFO  11:37:56,518 - #38 ++
INFO  11:37:56,518 - #7 )
INFO  11:37:56,519 - #3 {
INFO  11:37:56,519 - #26 read
INFO  11:37:56,519 - #6 (
INFO  11:37:56,519 - #45 c
INFO  11:37:56,519 - #15 .
INFO  11:37:56,519 - #45 x
INFO  11:37:56,519 - #25 [
INFO  11:37:56,519 - #45 i
INFO  11:37:56,520 - #34 ]
INFO  11:37:56,520 - #7 )
INFO  11:37:56,520 - #5 ;
INFO  11:37:56,520 - #26 read
INFO  11:37:56,520 - #6 (
INFO  11:37:56,520 - #45 c
INFO  11:37:56,520 - #15 .
INFO  11:37:56,520 - #45 theA
INFO  11:37:56,520 - #15 .
INFO  11:37:56,520 - #45 x
INFO  11:37:56,520 - #25 [
INFO  11:37:56,520 - #45 i
INFO  11:37:56,521 - #34 ]
INFO  11:37:56,521 - #7 )
INFO  11:37:56,521 - #5 ;
INFO  11:37:56,521 - #46 if
INFO  11:37:56,521 - #6 (
INFO  11:37:56,521 - #42 1
INFO  11:37:56,521 - #32 >
INFO  11:37:56,521 - #42 2
INFO  11:37:56,522 - #7 )
INFO  11:37:56,522 - #26 read
INFO  11:37:56,522 - #6 (
INFO  11:37:56,522 - #45 a
INFO  11:37:56,522 - #7 )
INFO  11:37:56,522 - #5 ;
INFO  11:37:56,522 - #47 else
INFO  11:37:56,522 - #26 read
INFO  11:37:56,522 - #6 (
INFO  11:37:56,523 - #45 b
INFO  11:37:56,523 - #7 )
INFO  11:37:56,523 - #5 ;
INFO  11:37:56,523 - #4 }
INFO  11:37:56,523 - #9 print
INFO  11:37:56,523 - #6 (
INFO  11:37:56,523 - #45 c
INFO  11:37:56,523 - #15 .
INFO  11:37:56,523 - #45 getValue
INFO  11:37:56,523 - #6 (
INFO  11:37:56,523 - #45 c
INFO  11:37:56,524 - #15 .
INFO  11:37:56,524 - #45 theA
INFO  11:37:56,524 - #15 .
INFO  11:37:56,524 - #45 x
INFO  11:37:56,524 - #25 [
INFO  11:37:56,524 - #45 Broj
INFO  11:37:56,524 - #15 .
INFO  11:37:56,524 - #45 NULA
INFO  11:37:56,524 - #34 ]
INFO  11:37:56,524 - #7 )
INFO  11:37:56,527 - #7 )
INFO  11:37:56,528 - #5 ;
INFO  11:37:56,529 - #45 c
INFO  11:37:56,529 - #15 .
INFO  11:37:56,529 - #45 m
INFO  11:37:56,529 - #6 (
INFO  11:37:56,529 - #7 )
INFO  11:37:56,530 - #5 ;
INFO  11:37:56,530 - #4 }
INFO  11:37:56,530 - #4 }
INFO  11:37:56,550 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:37:56,554 - ===================================
INFO  11:37:56,554 - INFO:  Pocetak programa Program na liniji 1
INFO  11:37:56,554 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:37:56,554 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:37:56,554 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:37:56,554 - INFO:  Definisan interfejs I na liniji 4
INFO  11:37:56,554 - INFO:  Deklarisan niz x na liniji 5
INFO  11:37:56,554 - INFO:  Deklarisan niz y na liniji 5
INFO  11:37:56,554 - INFO:  Definisana klasa A na liniji 5
INFO  11:37:56,554 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:37:56,556 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:37:56,556 - INFO:  Deklarisan niz x na liniji 9
INFO  11:37:56,556 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:37:56,556 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:37:56,556 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:37:56,557 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:37:56,557 - INFO:  Deklarisan metod m na liniji 15
INFO  11:37:56,557 - INFO:  Definisana klasa B na liniji 8
INFO  11:37:56,557 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:37:56,557 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:37:56,557 - INFO:  Definisana klasa C na liniji 18
INFO  11:37:56,557 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:37:56,557 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:37:56,557 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:37:56,557 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:37:56,557 - ERROR: Postoji definisana promenljiva sa imenom x na liniji 20		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip mora biti int na liniji 21		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip mora biti int na liniji 22		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 22		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip mora biti int na liniji 22		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip mora biti int na liniji 23		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip mora biti int na liniji 24		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip mora biti int na liniji 25		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip mora biti int na liniji 26		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:37:56,557 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 27		<--------------- ERROR 
ERROR 11:37:56,561 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:37:56,561 - ERROR: Odgovarajuci tip mora biti int na liniji 29		<--------------- ERROR 
ERROR 11:37:56,563 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:37:56,564 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:37:56,564 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:37:56,565 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:37:56,565 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
INFO  11:37:56,565 - INFO:  Deklarisan metod main na liniji 20
INFO  11:37:56,565 - ===================================
ERROR 11:37:56,567 - Postoji greska u generisanom kodu!
INFO  11:38:38,771 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:38:38,950 - #2 program
INFO  11:38:38,950 - #45 Program
INFO  11:38:38,951 - #45 int
INFO  11:38:38,951 - #45 x
INFO  11:38:38,951 - #8 ,
INFO  11:38:38,956 - #45 y
INFO  11:38:38,956 - #5 ;
INFO  11:38:38,956 - #14 interface
INFO  11:38:38,956 - #45 I
INFO  11:38:38,956 - #3 {
INFO  11:38:38,956 - #13 void
INFO  11:38:38,956 - #45 m
INFO  11:38:38,956 - #6 (
INFO  11:38:38,956 - #7 )
INFO  11:38:38,960 - #5 ;
INFO  11:38:38,961 - #4 }
INFO  11:38:38,962 - #16 class
INFO  11:38:38,962 - #45 A
INFO  11:38:38,962 - #3 {
INFO  11:38:38,963 - #45 int
INFO  11:38:38,966 - #45 x
INFO  11:38:38,967 - #25 [
INFO  11:38:38,967 - #34 ]
INFO  11:38:38,967 - #8 ,
INFO  11:38:38,967 - #45 y
INFO  11:38:38,968 - #25 [
INFO  11:38:38,968 - #34 ]
INFO  11:38:38,968 - #5 ;
INFO  11:38:38,968 - #4 }
INFO  11:38:38,969 - #29 enum
INFO  11:38:38,970 - #45 Broj
INFO  11:38:38,970 - #3 {
INFO  11:38:38,970 - #45 NULA
INFO  11:38:38,970 - #8 ,
INFO  11:38:38,971 - #45 TRI
INFO  11:38:38,971 - #12 =
INFO  11:38:38,971 - #42 3
INFO  11:38:38,971 - #8 ,
INFO  11:38:38,971 - #45 PET
INFO  11:38:38,971 - #12 =
INFO  11:38:38,972 - #42 5
INFO  11:38:38,972 - #4 }
INFO  11:38:38,972 - #16 class
INFO  11:38:38,972 - #45 B
INFO  11:38:38,972 - #39 extends
INFO  11:38:38,972 - #45 A
INFO  11:38:38,972 - #40 implements
INFO  11:38:38,972 - #45 I
INFO  11:38:38,972 - #3 {
INFO  11:38:38,974 - #45 int
INFO  11:38:38,974 - #45 i
INFO  11:38:38,974 - #5 ;
INFO  11:38:38,974 - #45 int
INFO  11:38:38,974 - #45 x
INFO  11:38:38,974 - #25 [
INFO  11:38:38,975 - #34 ]
INFO  11:38:38,975 - #5 ;
INFO  11:38:38,975 - #3 {
INFO  11:38:38,975 - #45 int
INFO  11:38:38,975 - #45 getValue
INFO  11:38:38,975 - #6 (
INFO  11:38:38,975 - #45 int
INFO  11:38:38,975 - #45 a
INFO  11:38:38,975 - #7 )
INFO  11:38:38,979 - #45 int
INFO  11:38:38,979 - #45 b
INFO  11:38:38,979 - #5 ;
INFO  11:38:38,979 - #45 bool
INFO  11:38:38,979 - #45 c
INFO  11:38:38,980 - #5 ;
INFO  11:38:38,980 - #3 {
INFO  11:38:38,980 - #10 return
INFO  11:38:38,981 - #42 0
INFO  11:38:38,982 - #5 ;
INFO  11:38:38,984 - #4 }
INFO  11:38:38,985 - #13 void
INFO  11:38:38,985 - #45 m
INFO  11:38:38,985 - #6 (
INFO  11:38:38,985 - #7 )
INFO  11:38:38,986 - #3 {
INFO  11:38:38,986 - #4 }
INFO  11:38:38,986 - #4 }
INFO  11:38:38,986 - #4 }
INFO  11:38:38,986 - #16 class
INFO  11:38:38,986 - #45 C
INFO  11:38:38,986 - #39 extends
INFO  11:38:38,986 - #45 B
INFO  11:38:38,986 - #3 {
INFO  11:38:38,986 - #45 A
INFO  11:38:38,987 - #45 theA
INFO  11:38:38,988 - #5 ;
INFO  11:38:38,988 - #45 int
INFO  11:38:38,988 - #45 a
INFO  11:38:38,988 - #5 ;
INFO  11:38:38,988 - #4 }
INFO  11:38:38,988 - #3 {
INFO  11:38:38,988 - #13 void
INFO  11:38:38,989 - #45 main
INFO  11:38:38,989 - #6 (
INFO  11:38:38,989 - #45 int
INFO  11:38:38,994 - #45 x
INFO  11:38:38,994 - #7 )
INFO  11:38:38,994 - #45 A
INFO  11:38:38,994 - #45 a
INFO  11:38:38,994 - #5 ;
INFO  11:38:38,994 - #45 C
INFO  11:38:38,994 - #45 c
INFO  11:38:38,994 - #5 ;
INFO  11:38:38,994 - #45 int
INFO  11:38:38,994 - #45 i
INFO  11:38:38,994 - #5 ;
INFO  11:38:38,994 - #45 int
INFO  11:38:38,994 - #45 x
INFO  11:38:38,994 - #25 [
INFO  11:38:38,994 - #34 ]
INFO  11:38:38,994 - #5 ;
INFO  11:38:38,994 - #3 {
INFO  11:38:38,994 - #45 a
INFO  11:38:38,994 - #12 =
INFO  11:38:38,999 - #18 new
INFO  11:38:38,999 - #45 A
INFO  11:38:38,999 - #5 ;
INFO  11:38:39,001 - #45 a
INFO  11:38:39,002 - #15 .
INFO  11:38:39,002 - #45 x
INFO  11:38:39,002 - #12 =
INFO  11:38:39,002 - #18 new
INFO  11:38:39,002 - #45 int
INFO  11:38:39,003 - #25 [
INFO  11:38:39,003 - #45 Broj
INFO  11:38:39,003 - #15 .
INFO  11:38:39,003 - #45 PET
INFO  11:38:39,003 - #34 ]
INFO  11:38:39,003 - #5 ;
INFO  11:38:39,008 - #45 a
INFO  11:38:39,008 - #15 .
INFO  11:38:39,008 - #45 y
INFO  11:38:39,008 - #12 =
INFO  11:38:39,008 - #18 new
INFO  11:38:39,008 - #45 int
INFO  11:38:39,008 - #25 [
INFO  11:38:39,008 - #42 5
INFO  11:38:39,008 - #34 ]
INFO  11:38:39,008 - #5 ;
INFO  11:38:39,008 - #45 c
INFO  11:38:39,008 - #12 =
INFO  11:38:39,008 - #18 new
INFO  11:38:39,008 - #45 C
INFO  11:38:39,008 - #5 ;
INFO  11:38:39,008 - #45 c
INFO  11:38:39,008 - #15 .
INFO  11:38:39,013 - #45 theA
INFO  11:38:39,013 - #12 =
INFO  11:38:39,013 - #45 a
INFO  11:38:39,013 - #5 ;
INFO  11:38:39,016 - #45 c
INFO  11:38:39,016 - #15 .
INFO  11:38:39,016 - #45 x
INFO  11:38:39,017 - #12 =
INFO  11:38:39,017 - #18 new
INFO  11:38:39,017 - #45 int
INFO  11:38:39,017 - #25 [
INFO  11:38:39,017 - #42 5
INFO  11:38:39,017 - #34 ]
INFO  11:38:39,017 - #5 ;
INFO  11:38:39,017 - #45 x
INFO  11:38:39,017 - #12 =
INFO  11:38:39,017 - #18 new
INFO  11:38:39,017 - #45 int
INFO  11:38:39,017 - #25 [
INFO  11:38:39,017 - #45 Broj
INFO  11:38:39,017 - #15 .
INFO  11:38:39,017 - #45 TRI
INFO  11:38:39,017 - #34 ]
INFO  11:38:39,017 - #5 ;
INFO  11:38:39,017 - #26 read
INFO  11:38:39,017 - #6 (
INFO  11:38:39,017 - #45 c
INFO  11:38:39,017 - #15 .
INFO  11:38:39,017 - #45 i
INFO  11:38:39,017 - #7 )
INFO  11:38:39,017 - #5 ;
INFO  11:38:39,017 - #41 for
INFO  11:38:39,017 - #6 (
INFO  11:38:39,021 - #45 i
INFO  11:38:39,022 - #12 =
INFO  11:38:39,022 - #42 0
INFO  11:38:39,022 - #5 ;
INFO  11:38:39,022 - #45 i
INFO  11:38:39,022 - #19 <
INFO  11:38:39,022 - #42 5
INFO  11:38:39,022 - #5 ;
INFO  11:38:39,022 - #45 i
INFO  11:38:39,022 - #38 ++
INFO  11:38:39,022 - #7 )
INFO  11:38:39,028 - #3 {
INFO  11:38:39,028 - #26 read
INFO  11:38:39,028 - #6 (
INFO  11:38:39,028 - #45 c
INFO  11:38:39,028 - #15 .
INFO  11:38:39,028 - #45 x
INFO  11:38:39,030 - #25 [
INFO  11:38:39,030 - #45 i
INFO  11:38:39,030 - #34 ]
INFO  11:38:39,030 - #7 )
INFO  11:38:39,030 - #5 ;
INFO  11:38:39,030 - #26 read
INFO  11:38:39,030 - #6 (
INFO  11:38:39,030 - #45 c
INFO  11:38:39,030 - #15 .
INFO  11:38:39,030 - #45 theA
INFO  11:38:39,030 - #15 .
INFO  11:38:39,030 - #45 x
INFO  11:38:39,030 - #25 [
INFO  11:38:39,030 - #45 i
INFO  11:38:39,030 - #34 ]
INFO  11:38:39,030 - #7 )
INFO  11:38:39,030 - #5 ;
INFO  11:38:39,030 - #46 if
INFO  11:38:39,031 - #6 (
INFO  11:38:39,031 - #42 1
INFO  11:38:39,031 - #32 >
INFO  11:38:39,031 - #42 2
INFO  11:38:39,032 - #7 )
INFO  11:38:39,032 - #26 read
INFO  11:38:39,032 - #6 (
INFO  11:38:39,032 - #45 a
INFO  11:38:39,032 - #7 )
INFO  11:38:39,032 - #5 ;
INFO  11:38:39,032 - #47 else
INFO  11:38:39,032 - #26 read
INFO  11:38:39,032 - #6 (
INFO  11:38:39,032 - #45 b
INFO  11:38:39,032 - #7 )
INFO  11:38:39,032 - #5 ;
INFO  11:38:39,032 - #4 }
INFO  11:38:39,033 - #9 print
INFO  11:38:39,033 - #6 (
INFO  11:38:39,033 - #45 c
INFO  11:38:39,033 - #15 .
INFO  11:38:39,033 - #45 getValue
INFO  11:38:39,033 - #6 (
INFO  11:38:39,033 - #45 c
INFO  11:38:39,033 - #15 .
INFO  11:38:39,033 - #45 theA
INFO  11:38:39,033 - #15 .
INFO  11:38:39,033 - #45 x
INFO  11:38:39,033 - #25 [
INFO  11:38:39,033 - #45 Broj
INFO  11:38:39,033 - #15 .
INFO  11:38:39,033 - #45 NULA
INFO  11:38:39,033 - #34 ]
INFO  11:38:39,033 - #7 )
INFO  11:38:39,033 - #7 )
INFO  11:38:39,033 - #5 ;
INFO  11:38:39,033 - #45 c
INFO  11:38:39,033 - #15 .
INFO  11:38:39,033 - #45 m
INFO  11:38:39,033 - #6 (
INFO  11:38:39,033 - #7 )
INFO  11:38:39,033 - #5 ;
INFO  11:38:39,033 - #4 }
INFO  11:38:39,033 - #4 }
INFO  11:38:39,083 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 A
                ) [Type]
                SingleVar(
                  Var(
                   a
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               C
              ) [Type]
              SingleVar(
                Var(
                 c
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:38:39,098 - ===================================
INFO  11:38:39,098 - INFO:  Pocetak programa Program na liniji 1
INFO  11:38:39,098 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:38:39,098 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:38:39,098 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:38:39,098 - INFO:  Definisan interfejs I na liniji 4
INFO  11:38:43,099 - INFO:  Deklarisan niz x na liniji 5
INFO  11:38:44,100 - INFO:  Deklarisan niz y na liniji 5
INFO  11:38:44,100 - INFO:  Definisana klasa A na liniji 5
INFO  11:38:44,100 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:38:44,100 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:38:45,895 - INFO:  Deklarisan niz x na liniji 9
INFO  11:38:45,895 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:38:45,896 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:38:45,896 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:38:47,086 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:38:47,088 - INFO:  Deklarisan metod m na liniji 15
INFO  11:38:47,089 - INFO:  Definisana klasa B na liniji 8
INFO  11:38:47,089 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:38:47,089 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:38:47,089 - INFO:  Definisana klasa C na liniji 18
INFO  11:38:47,089 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:38:47,089 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:38:47,089 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:38:47,089 - INFO:  Deklarisana promenljiva i na liniji 20
INFO  11:40:52,380 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:40:52,483 - #2 program
INFO  11:40:52,483 - #45 Program
INFO  11:40:52,483 - #45 int
INFO  11:40:52,484 - #45 x
INFO  11:40:52,484 - #8 ,
INFO  11:40:52,486 - #45 y
INFO  11:40:52,486 - #5 ;
INFO  11:40:52,487 - #14 interface
INFO  11:40:52,487 - #45 I
INFO  11:40:52,488 - #3 {
INFO  11:40:52,488 - #13 void
INFO  11:40:52,488 - #45 m
INFO  11:40:52,489 - #6 (
INFO  11:40:52,489 - #7 )
INFO  11:40:52,489 - #5 ;
INFO  11:40:52,489 - #4 }
INFO  11:40:52,490 - #16 class
INFO  11:40:52,490 - #45 A
INFO  11:40:52,490 - #3 {
INFO  11:40:52,492 - #45 int
INFO  11:40:52,492 - #45 x
INFO  11:40:52,493 - #25 [
INFO  11:40:52,493 - #34 ]
INFO  11:40:52,493 - #8 ,
INFO  11:40:52,493 - #45 y
INFO  11:40:52,494 - #25 [
INFO  11:40:52,494 - #34 ]
INFO  11:40:52,494 - #5 ;
INFO  11:40:52,495 - #4 }
INFO  11:40:52,496 - #29 enum
INFO  11:40:52,496 - #45 Broj
INFO  11:40:52,496 - #3 {
INFO  11:40:52,496 - #45 NULA
INFO  11:40:52,496 - #8 ,
INFO  11:40:52,496 - #45 TRI
INFO  11:40:52,496 - #12 =
INFO  11:40:52,496 - #42 3
INFO  11:40:52,497 - #8 ,
INFO  11:40:52,497 - #45 PET
INFO  11:40:52,497 - #12 =
INFO  11:40:52,497 - #42 5
INFO  11:40:52,497 - #4 }
INFO  11:40:52,497 - #16 class
INFO  11:40:52,498 - #45 B
INFO  11:40:52,498 - #39 extends
INFO  11:40:52,498 - #45 A
INFO  11:40:52,498 - #40 implements
INFO  11:40:52,498 - #45 I
INFO  11:40:52,498 - #3 {
INFO  11:40:52,498 - #45 int
INFO  11:40:52,499 - #45 i
INFO  11:40:52,499 - #5 ;
INFO  11:40:52,499 - #45 int
INFO  11:40:52,499 - #45 x
INFO  11:40:52,499 - #25 [
INFO  11:40:52,499 - #34 ]
INFO  11:40:52,499 - #5 ;
INFO  11:40:52,499 - #3 {
INFO  11:40:52,499 - #45 int
INFO  11:40:52,500 - #45 getValue
INFO  11:40:52,500 - #6 (
INFO  11:40:52,501 - #45 int
INFO  11:40:52,501 - #45 a
INFO  11:40:52,502 - #7 )
INFO  11:40:52,502 - #45 int
INFO  11:40:52,502 - #45 b
INFO  11:40:52,502 - #5 ;
INFO  11:40:52,502 - #45 bool
INFO  11:40:52,502 - #45 c
INFO  11:40:52,502 - #5 ;
INFO  11:40:52,502 - #3 {
INFO  11:40:52,502 - #10 return
INFO  11:40:52,505 - #42 0
INFO  11:40:52,505 - #5 ;
INFO  11:40:52,506 - #4 }
INFO  11:40:52,507 - #13 void
INFO  11:40:52,507 - #45 m
INFO  11:40:52,507 - #6 (
INFO  11:40:52,507 - #7 )
INFO  11:40:52,507 - #3 {
INFO  11:40:52,507 - #4 }
INFO  11:40:52,507 - #4 }
INFO  11:40:52,507 - #4 }
INFO  11:40:52,507 - #16 class
INFO  11:40:52,507 - #45 C
INFO  11:40:52,507 - #39 extends
INFO  11:40:52,507 - #45 B
INFO  11:40:52,507 - #3 {
INFO  11:40:52,508 - #45 A
INFO  11:40:52,508 - #45 theA
INFO  11:40:52,508 - #5 ;
INFO  11:40:52,508 - #45 int
INFO  11:40:52,508 - #45 a
INFO  11:40:52,508 - #5 ;
INFO  11:40:52,508 - #4 }
INFO  11:40:52,508 - #3 {
INFO  11:40:52,508 - #13 void
INFO  11:40:52,508 - #45 main
INFO  11:40:52,508 - #6 (
INFO  11:40:52,508 - #45 int
INFO  11:40:52,509 - #45 x
INFO  11:40:52,509 - #7 )
INFO  11:40:52,509 - #45 A
INFO  11:40:52,509 - #45 a
INFO  11:40:52,509 - #5 ;
INFO  11:40:52,509 - #45 C
INFO  11:40:52,509 - #45 c
INFO  11:40:52,509 - #5 ;
INFO  11:40:52,509 - #45 int
INFO  11:40:52,509 - #45 i
INFO  11:40:52,509 - #5 ;
INFO  11:40:52,509 - #3 {
INFO  11:40:52,509 - #45 a
INFO  11:40:52,509 - #12 =
INFO  11:40:52,510 - #18 new
INFO  11:40:52,511 - #45 A
INFO  11:40:52,511 - #5 ;
INFO  11:40:52,511 - #45 a
INFO  11:40:52,512 - #15 .
INFO  11:40:52,512 - #45 x
INFO  11:40:52,512 - #12 =
INFO  11:40:52,512 - #18 new
INFO  11:40:52,512 - #45 int
INFO  11:40:52,512 - #25 [
INFO  11:40:52,512 - #45 Broj
INFO  11:40:52,512 - #15 .
INFO  11:40:52,512 - #45 PET
INFO  11:40:52,512 - #34 ]
INFO  11:40:52,513 - #5 ;
INFO  11:40:52,514 - #45 a
INFO  11:40:52,514 - #15 .
INFO  11:40:52,514 - #45 y
INFO  11:40:52,514 - #12 =
INFO  11:40:52,514 - #18 new
INFO  11:40:52,514 - #45 int
INFO  11:40:52,514 - #25 [
INFO  11:40:52,514 - #42 5
INFO  11:40:52,514 - #34 ]
INFO  11:40:52,514 - #5 ;
INFO  11:40:52,514 - #45 c
INFO  11:40:52,514 - #12 =
INFO  11:40:52,514 - #18 new
INFO  11:40:52,514 - #45 C
INFO  11:40:52,514 - #5 ;
INFO  11:40:52,514 - #45 c
INFO  11:40:52,514 - #15 .
INFO  11:40:52,514 - #45 theA
INFO  11:40:52,514 - #12 =
INFO  11:40:52,514 - #45 a
INFO  11:40:52,514 - #5 ;
INFO  11:40:52,515 - #45 c
INFO  11:40:52,515 - #15 .
INFO  11:40:52,515 - #45 x
INFO  11:40:52,515 - #12 =
INFO  11:40:52,515 - #18 new
INFO  11:40:52,515 - #45 int
INFO  11:40:52,515 - #25 [
INFO  11:40:52,515 - #42 5
INFO  11:40:52,515 - #34 ]
INFO  11:40:52,515 - #5 ;
INFO  11:40:52,515 - #45 x
INFO  11:40:52,515 - #12 =
INFO  11:40:52,515 - #18 new
INFO  11:40:52,515 - #45 int
INFO  11:40:52,515 - #25 [
INFO  11:40:52,515 - #45 Broj
INFO  11:40:52,515 - #15 .
INFO  11:40:52,515 - #45 TRI
INFO  11:40:52,515 - #34 ]
INFO  11:40:52,515 - #5 ;
INFO  11:40:52,515 - #26 read
INFO  11:40:52,516 - #6 (
INFO  11:40:52,516 - #45 c
INFO  11:40:52,516 - #15 .
INFO  11:40:52,516 - #45 i
INFO  11:40:52,516 - #7 )
INFO  11:40:52,516 - #5 ;
INFO  11:40:52,516 - #41 for
INFO  11:40:52,516 - #6 (
INFO  11:40:52,516 - #45 i
INFO  11:40:52,516 - #12 =
INFO  11:40:52,517 - #42 0
INFO  11:40:52,517 - #5 ;
INFO  11:40:52,517 - #45 i
INFO  11:40:52,517 - #19 <
INFO  11:40:52,517 - #42 5
INFO  11:40:52,518 - #5 ;
INFO  11:40:52,519 - #45 i
INFO  11:40:52,520 - #38 ++
INFO  11:40:52,520 - #7 )
INFO  11:40:52,520 - #3 {
INFO  11:40:52,520 - #26 read
INFO  11:40:52,520 - #6 (
INFO  11:40:52,520 - #45 c
INFO  11:40:52,520 - #15 .
INFO  11:40:52,520 - #45 x
INFO  11:40:52,521 - #25 [
INFO  11:40:52,521 - #45 i
INFO  11:40:52,521 - #34 ]
INFO  11:40:52,521 - #7 )
INFO  11:40:52,521 - #5 ;
INFO  11:40:52,521 - #26 read
INFO  11:40:52,521 - #6 (
INFO  11:40:52,521 - #45 c
INFO  11:40:52,521 - #15 .
INFO  11:40:52,521 - #45 theA
INFO  11:40:52,521 - #15 .
INFO  11:40:52,521 - #45 x
INFO  11:40:52,521 - #25 [
INFO  11:40:52,521 - #45 i
INFO  11:40:52,521 - #34 ]
INFO  11:40:52,521 - #7 )
INFO  11:40:52,521 - #5 ;
INFO  11:40:52,521 - #46 if
INFO  11:40:52,521 - #6 (
INFO  11:40:52,521 - #42 1
INFO  11:40:52,521 - #32 >
INFO  11:40:52,521 - #42 2
INFO  11:40:52,522 - #7 )
INFO  11:40:52,522 - #26 read
INFO  11:40:52,522 - #6 (
INFO  11:40:52,522 - #45 a
INFO  11:40:52,522 - #7 )
INFO  11:40:52,522 - #5 ;
INFO  11:40:52,522 - #47 else
INFO  11:40:52,522 - #26 read
INFO  11:40:52,522 - #6 (
INFO  11:40:52,523 - #45 b
INFO  11:40:52,528 - #7 )
INFO  11:40:52,528 - #5 ;
INFO  11:40:52,528 - #4 }
INFO  11:40:52,528 - #9 print
INFO  11:40:52,529 - #6 (
INFO  11:40:52,529 - #45 c
INFO  11:40:52,529 - #15 .
INFO  11:40:52,529 - #45 getValue
INFO  11:40:52,529 - #6 (
INFO  11:40:52,529 - #45 c
INFO  11:40:52,529 - #15 .
INFO  11:40:52,529 - #45 theA
INFO  11:40:52,529 - #15 .
INFO  11:40:52,529 - #45 x
INFO  11:40:52,529 - #25 [
INFO  11:40:52,529 - #45 Broj
INFO  11:40:52,529 - #15 .
INFO  11:40:52,529 - #45 NULA
INFO  11:40:52,529 - #34 ]
INFO  11:40:52,529 - #7 )
INFO  11:40:52,530 - #7 )
INFO  11:40:52,530 - #5 ;
INFO  11:40:52,530 - #45 c
INFO  11:40:52,530 - #15 .
INFO  11:40:52,530 - #45 m
INFO  11:40:52,531 - #6 (
INFO  11:40:52,531 - #7 )
INFO  11:40:52,531 - #5 ;
INFO  11:40:52,531 - #4 }
INFO  11:40:52,531 - #4 }
INFO  11:40:52,544 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:40:52,547 - ===================================
INFO  11:40:52,547 - INFO:  Pocetak programa Program na liniji 1
INFO  11:40:52,547 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:40:52,547 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:40:52,547 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:40:52,547 - INFO:  Definisan interfejs I na liniji 4
INFO  11:40:52,547 - INFO:  Deklarisan niz x na liniji 5
INFO  11:40:52,547 - INFO:  Deklarisan niz y na liniji 5
INFO  11:40:52,547 - INFO:  Definisana klasa A na liniji 5
INFO  11:40:52,548 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:40:52,548 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:40:52,548 - INFO:  Deklarisan niz x na liniji 9
INFO  11:40:52,548 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:40:52,548 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:40:52,548 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:40:52,548 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:40:52,548 - INFO:  Deklarisan metod m na liniji 15
INFO  11:40:52,548 - INFO:  Definisana klasa B na liniji 8
INFO  11:40:52,549 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:40:52,549 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:40:52,549 - INFO:  Definisana klasa C na liniji 18
INFO  11:40:52,549 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:40:52,549 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:40:52,549 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:40:52,549 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip mora biti int na liniji 21		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip mora biti int na liniji 22		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 22		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip mora biti int na liniji 22		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip mora biti int na liniji 23		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip mora biti int na liniji 24		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip mora biti int na liniji 25		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip mora biti int na liniji 26		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:40:52,549 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 27		<--------------- ERROR 
ERROR 11:40:52,550 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:40:52,550 - ERROR: Odgovarajuci tip mora biti int na liniji 29		<--------------- ERROR 
ERROR 11:40:52,550 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:40:52,550 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:40:52,550 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:40:52,550 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:40:52,550 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
INFO  11:40:52,550 - INFO:  Deklarisan metod main na liniji 20
INFO  11:40:52,550 - ===================================
ERROR 11:40:52,550 - Postoji greska u generisanom kodu!
INFO  11:41:36,317 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:41:36,514 - #2 program
INFO  11:41:36,515 - #45 Program
INFO  11:41:36,515 - #45 int
INFO  11:41:36,516 - #45 x
INFO  11:41:36,518 - #8 ,
INFO  11:41:36,518 - #45 y
INFO  11:41:36,518 - #5 ;
INFO  11:41:36,518 - #14 interface
INFO  11:41:36,518 - #45 I
INFO  11:41:36,518 - #3 {
INFO  11:41:36,521 - #13 void
INFO  11:41:36,521 - #45 m
INFO  11:41:36,523 - #6 (
INFO  11:41:36,523 - #7 )
INFO  11:41:36,523 - #5 ;
INFO  11:41:36,523 - #4 }
INFO  11:41:36,524 - #16 class
INFO  11:41:36,524 - #45 A
INFO  11:41:36,524 - #3 {
INFO  11:41:36,526 - #45 int
INFO  11:41:36,526 - #45 x
INFO  11:41:36,526 - #25 [
INFO  11:41:36,529 - #34 ]
INFO  11:41:36,529 - #8 ,
INFO  11:41:36,530 - #45 y
INFO  11:41:36,530 - #25 [
INFO  11:41:36,530 - #34 ]
INFO  11:41:36,530 - #5 ;
INFO  11:41:36,531 - #4 }
INFO  11:41:36,532 - #29 enum
INFO  11:41:36,532 - #45 Broj
INFO  11:41:36,532 - #3 {
INFO  11:41:36,532 - #45 NULA
INFO  11:41:36,532 - #8 ,
INFO  11:41:36,534 - #45 TRI
INFO  11:41:36,534 - #12 =
INFO  11:41:36,534 - #42 3
INFO  11:41:36,534 - #8 ,
INFO  11:41:36,534 - #45 PET
INFO  11:41:36,535 - #12 =
INFO  11:41:36,535 - #42 5
INFO  11:41:36,535 - #4 }
INFO  11:41:36,535 - #16 class
INFO  11:41:36,536 - #45 B
INFO  11:41:36,536 - #39 extends
INFO  11:41:36,536 - #45 A
INFO  11:41:36,536 - #40 implements
INFO  11:41:36,536 - #45 I
INFO  11:41:36,537 - #3 {
INFO  11:41:36,537 - #45 int
INFO  11:41:36,537 - #45 i
INFO  11:41:36,537 - #5 ;
INFO  11:41:36,538 - #45 int
INFO  11:41:36,538 - #45 x
INFO  11:41:36,538 - #25 [
INFO  11:41:36,538 - #34 ]
INFO  11:41:36,538 - #5 ;
INFO  11:41:36,538 - #3 {
INFO  11:41:36,538 - #45 int
INFO  11:41:36,538 - #45 getValue
INFO  11:41:36,538 - #6 (
INFO  11:41:36,538 - #45 int
INFO  11:41:36,538 - #45 a
INFO  11:41:36,542 - #7 )
INFO  11:41:36,543 - #45 int
INFO  11:41:36,543 - #45 b
INFO  11:41:36,543 - #5 ;
INFO  11:41:36,543 - #45 bool
INFO  11:41:36,543 - #45 c
INFO  11:41:36,543 - #5 ;
INFO  11:41:36,543 - #3 {
INFO  11:41:36,543 - #10 return
INFO  11:41:36,544 - #42 0
INFO  11:41:36,546 - #5 ;
INFO  11:41:36,546 - #4 }
INFO  11:41:36,546 - #13 void
INFO  11:41:36,549 - #45 m
INFO  11:41:36,549 - #6 (
INFO  11:41:36,549 - #7 )
INFO  11:41:36,549 - #3 {
INFO  11:41:36,549 - #4 }
INFO  11:41:36,549 - #4 }
INFO  11:41:36,549 - #4 }
INFO  11:41:36,550 - #16 class
INFO  11:41:36,550 - #45 C
INFO  11:41:36,550 - #39 extends
INFO  11:41:36,550 - #45 B
INFO  11:41:36,550 - #3 {
INFO  11:41:36,550 - #45 A
INFO  11:41:36,550 - #45 theA
INFO  11:41:36,550 - #5 ;
INFO  11:41:36,550 - #45 int
INFO  11:41:36,551 - #45 a
INFO  11:41:36,551 - #5 ;
INFO  11:41:36,551 - #4 }
INFO  11:41:36,552 - #3 {
INFO  11:41:36,552 - #13 void
INFO  11:41:36,552 - #45 main
INFO  11:41:36,552 - #6 (
INFO  11:41:36,552 - #45 int
INFO  11:41:36,557 - #45 x
INFO  11:41:36,557 - #7 )
INFO  11:41:36,557 - #45 A
INFO  11:41:36,557 - #45 a
INFO  11:41:36,557 - #5 ;
INFO  11:41:36,557 - #45 C
INFO  11:41:36,557 - #45 c
INFO  11:41:36,557 - #5 ;
INFO  11:41:36,557 - #45 int
INFO  11:41:36,557 - #45 i
INFO  11:41:36,557 - #5 ;
INFO  11:41:36,557 - #3 {
INFO  11:41:36,557 - #45 a
INFO  11:41:36,557 - #12 =
INFO  11:41:36,562 - #18 new
INFO  11:41:36,564 - #45 A
INFO  11:41:36,564 - #5 ;
INFO  11:41:36,565 - #45 a
INFO  11:41:36,565 - #15 .
INFO  11:41:36,565 - #45 x
INFO  11:41:36,565 - #12 =
INFO  11:41:36,565 - #18 new
INFO  11:41:36,566 - #45 int
INFO  11:41:36,566 - #25 [
INFO  11:41:36,566 - #45 Broj
INFO  11:41:36,566 - #15 .
INFO  11:41:36,566 - #45 PET
INFO  11:41:36,566 - #34 ]
INFO  11:41:36,567 - #5 ;
INFO  11:41:36,567 - #45 a
INFO  11:41:36,567 - #15 .
INFO  11:41:36,567 - #45 y
INFO  11:41:36,567 - #12 =
INFO  11:41:36,567 - #18 new
INFO  11:41:36,567 - #45 int
INFO  11:41:36,567 - #25 [
INFO  11:41:36,567 - #42 5
INFO  11:41:36,567 - #34 ]
INFO  11:41:36,567 - #5 ;
INFO  11:41:36,567 - #45 c
INFO  11:41:36,567 - #12 =
INFO  11:41:36,567 - #18 new
INFO  11:41:36,567 - #45 C
INFO  11:41:36,567 - #5 ;
INFO  11:41:36,572 - #45 c
INFO  11:41:36,572 - #15 .
INFO  11:41:36,572 - #45 theA
INFO  11:41:36,572 - #12 =
INFO  11:41:36,572 - #45 a
INFO  11:41:36,572 - #5 ;
INFO  11:41:36,572 - #45 c
INFO  11:41:36,577 - #15 .
INFO  11:41:36,577 - #45 x
INFO  11:41:36,577 - #12 =
INFO  11:41:36,577 - #18 new
INFO  11:41:36,577 - #45 int
INFO  11:41:36,577 - #25 [
INFO  11:41:36,577 - #42 5
INFO  11:41:36,577 - #34 ]
INFO  11:41:36,577 - #5 ;
INFO  11:41:36,577 - #45 x
INFO  11:41:36,577 - #12 =
INFO  11:41:36,577 - #18 new
INFO  11:41:36,577 - #45 int
INFO  11:41:36,577 - #25 [
INFO  11:41:36,577 - #45 Broj
INFO  11:41:36,577 - #15 .
INFO  11:41:36,577 - #45 TRI
INFO  11:41:36,577 - #34 ]
INFO  11:41:36,577 - #5 ;
INFO  11:41:36,580 - #26 read
INFO  11:41:36,580 - #6 (
INFO  11:41:36,580 - #45 c
INFO  11:41:36,580 - #15 .
INFO  11:41:36,580 - #45 i
INFO  11:41:36,580 - #7 )
INFO  11:41:36,580 - #5 ;
INFO  11:41:36,580 - #41 for
INFO  11:41:36,581 - #6 (
INFO  11:41:36,581 - #45 i
INFO  11:41:36,581 - #12 =
INFO  11:41:36,581 - #42 0
INFO  11:41:36,581 - #5 ;
INFO  11:41:36,581 - #45 i
INFO  11:41:36,581 - #19 <
INFO  11:41:36,581 - #42 5
INFO  11:41:36,583 - #5 ;
INFO  11:41:36,583 - #45 i
INFO  11:41:36,583 - #38 ++
INFO  11:41:36,583 - #7 )
INFO  11:41:36,583 - #3 {
INFO  11:41:36,583 - #26 read
INFO  11:41:36,583 - #6 (
INFO  11:41:36,583 - #45 c
INFO  11:41:36,583 - #15 .
INFO  11:41:36,583 - #45 x
INFO  11:41:36,583 - #25 [
INFO  11:41:36,583 - #45 i
INFO  11:41:36,583 - #34 ]
INFO  11:41:36,583 - #7 )
INFO  11:41:36,583 - #5 ;
INFO  11:41:36,583 - #26 read
INFO  11:41:36,583 - #6 (
INFO  11:41:36,583 - #45 c
INFO  11:41:36,583 - #15 .
INFO  11:41:36,583 - #45 theA
INFO  11:41:36,588 - #15 .
INFO  11:41:36,588 - #45 x
INFO  11:41:36,588 - #25 [
INFO  11:41:36,588 - #45 i
INFO  11:41:36,588 - #34 ]
INFO  11:41:36,588 - #7 )
INFO  11:41:36,588 - #5 ;
INFO  11:41:36,588 - #46 if
INFO  11:41:36,588 - #6 (
INFO  11:41:36,588 - #42 1
INFO  11:41:36,588 - #32 >
INFO  11:41:36,588 - #42 2
INFO  11:41:36,589 - #7 )
INFO  11:41:36,590 - #26 read
INFO  11:41:36,590 - #6 (
INFO  11:41:36,590 - #45 a
INFO  11:41:36,590 - #7 )
INFO  11:41:36,590 - #5 ;
INFO  11:41:36,590 - #47 else
INFO  11:41:36,590 - #26 read
INFO  11:41:36,590 - #6 (
INFO  11:41:36,590 - #45 b
INFO  11:41:36,590 - #7 )
INFO  11:41:36,590 - #5 ;
INFO  11:41:36,590 - #4 }
INFO  11:41:36,591 - #9 print
INFO  11:41:36,591 - #6 (
INFO  11:41:36,591 - #45 c
INFO  11:41:36,591 - #15 .
INFO  11:41:36,591 - #45 getValue
INFO  11:41:36,591 - #6 (
INFO  11:41:36,592 - #45 c
INFO  11:41:36,592 - #15 .
INFO  11:41:36,593 - #45 theA
INFO  11:41:36,593 - #15 .
INFO  11:41:36,593 - #45 x
INFO  11:41:36,593 - #25 [
INFO  11:41:36,593 - #45 Broj
INFO  11:41:36,593 - #15 .
INFO  11:41:36,593 - #45 NULA
INFO  11:41:36,593 - #34 ]
INFO  11:41:36,593 - #7 )
INFO  11:41:36,594 - #7 )
INFO  11:41:36,595 - #5 ;
INFO  11:41:36,595 - #45 c
INFO  11:41:36,595 - #15 .
INFO  11:41:36,595 - #45 m
INFO  11:41:36,595 - #6 (
INFO  11:41:36,595 - #7 )
INFO  11:41:36,596 - #5 ;
INFO  11:41:36,596 - #4 }
INFO  11:41:36,596 - #4 }
INFO  11:41:36,643 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               a
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            Design(
                                             Broj
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 PET
                                                ) [DesignField]
                                              ) [OptDesignator]
                                            ) [Design]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:41:36,657 - ===================================
INFO  11:41:36,662 - INFO:  Pocetak programa Program na liniji 1
INFO  11:41:36,662 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:41:36,662 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:41:36,662 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:41:36,662 - INFO:  Definisan interfejs I na liniji 4
INFO  11:41:36,662 - INFO:  Deklarisan niz x na liniji 5
INFO  11:41:36,662 - INFO:  Deklarisan niz y na liniji 5
INFO  11:41:36,662 - INFO:  Definisana klasa A na liniji 5
INFO  11:41:36,662 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:41:36,662 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:41:36,662 - INFO:  Deklarisan niz x na liniji 9
INFO  11:41:36,662 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:41:36,662 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:41:36,662 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:41:45,364 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:41:45,366 - INFO:  Deklarisan metod m na liniji 15
INFO  11:41:45,366 - INFO:  Definisana klasa B na liniji 8
INFO  11:41:45,366 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:41:45,366 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:41:45,366 - INFO:  Definisana klasa C na liniji 18
INFO  11:41:45,366 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:41:45,366 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:41:45,366 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:41:45,366 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:41:45,367 - ERROR: Odgovarajuci tip mora biti int na liniji 21		<--------------- ERROR 
INFO  11:42:35,076 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:42:35,157 - #2 program
INFO  11:42:35,157 - #45 Program
INFO  11:42:35,157 - #45 int
INFO  11:42:35,158 - #45 x
INFO  11:42:35,159 - #8 ,
INFO  11:42:35,160 - #45 y
INFO  11:42:35,161 - #5 ;
INFO  11:42:35,161 - #14 interface
INFO  11:42:35,161 - #45 I
INFO  11:42:35,161 - #3 {
INFO  11:42:35,161 - #13 void
INFO  11:42:35,161 - #45 m
INFO  11:42:35,161 - #6 (
INFO  11:42:35,161 - #7 )
INFO  11:42:35,163 - #5 ;
INFO  11:42:35,163 - #4 }
INFO  11:42:35,163 - #16 class
INFO  11:42:35,164 - #45 A
INFO  11:42:35,165 - #3 {
INFO  11:42:35,167 - #45 int
INFO  11:42:35,167 - #45 x
INFO  11:42:35,167 - #25 [
INFO  11:42:35,168 - #34 ]
INFO  11:42:35,168 - #8 ,
INFO  11:42:35,168 - #45 y
INFO  11:42:35,168 - #25 [
INFO  11:42:35,168 - #34 ]
INFO  11:42:35,169 - #5 ;
INFO  11:42:35,169 - #4 }
INFO  11:42:35,170 - #29 enum
INFO  11:42:35,170 - #45 Broj
INFO  11:42:35,171 - #3 {
INFO  11:42:35,171 - #45 NULA
INFO  11:42:35,172 - #8 ,
INFO  11:42:35,172 - #45 TRI
INFO  11:42:35,172 - #12 =
INFO  11:42:35,172 - #42 3
INFO  11:42:35,172 - #8 ,
INFO  11:42:35,172 - #45 PET
INFO  11:42:35,172 - #12 =
INFO  11:42:35,172 - #42 5
INFO  11:42:35,172 - #4 }
INFO  11:42:35,172 - #16 class
INFO  11:42:35,173 - #45 B
INFO  11:42:35,173 - #39 extends
INFO  11:42:35,173 - #45 A
INFO  11:42:35,173 - #40 implements
INFO  11:42:35,173 - #45 I
INFO  11:42:35,173 - #3 {
INFO  11:42:35,173 - #45 int
INFO  11:42:35,173 - #45 i
INFO  11:42:35,173 - #5 ;
INFO  11:42:35,173 - #45 int
INFO  11:42:35,173 - #45 x
INFO  11:42:35,173 - #25 [
INFO  11:42:35,174 - #34 ]
INFO  11:42:35,174 - #5 ;
INFO  11:42:35,174 - #3 {
INFO  11:42:35,174 - #45 int
INFO  11:42:35,175 - #45 getValue
INFO  11:42:35,175 - #6 (
INFO  11:42:35,177 - #45 int
INFO  11:42:35,177 - #45 a
INFO  11:42:35,177 - #7 )
INFO  11:42:35,177 - #45 int
INFO  11:42:35,177 - #45 b
INFO  11:42:35,177 - #5 ;
INFO  11:42:35,177 - #45 bool
INFO  11:42:35,177 - #45 c
INFO  11:42:35,177 - #5 ;
INFO  11:42:35,177 - #3 {
INFO  11:42:35,178 - #10 return
INFO  11:42:35,178 - #42 0
INFO  11:42:35,179 - #5 ;
INFO  11:42:35,181 - #4 }
INFO  11:42:35,181 - #13 void
INFO  11:42:35,181 - #45 m
INFO  11:42:35,181 - #6 (
INFO  11:42:35,181 - #7 )
INFO  11:42:35,181 - #3 {
INFO  11:42:35,181 - #4 }
INFO  11:42:35,181 - #4 }
INFO  11:42:35,181 - #4 }
INFO  11:42:35,181 - #16 class
INFO  11:42:35,181 - #45 C
INFO  11:42:35,181 - #39 extends
INFO  11:42:35,181 - #45 B
INFO  11:42:35,182 - #3 {
INFO  11:42:35,182 - #45 A
INFO  11:42:35,182 - #45 theA
INFO  11:42:35,182 - #5 ;
INFO  11:42:35,182 - #45 int
INFO  11:42:35,182 - #45 a
INFO  11:42:35,182 - #5 ;
INFO  11:42:35,182 - #4 }
INFO  11:42:35,182 - #3 {
INFO  11:42:35,182 - #13 void
INFO  11:42:35,182 - #45 main
INFO  11:42:35,182 - #6 (
INFO  11:42:35,182 - #45 int
INFO  11:42:35,182 - #45 x
INFO  11:42:35,182 - #7 )
INFO  11:42:35,183 - #45 A
INFO  11:42:35,183 - #45 a
INFO  11:42:35,183 - #5 ;
INFO  11:42:35,183 - #45 C
INFO  11:42:35,183 - #45 c
INFO  11:42:35,183 - #5 ;
INFO  11:42:35,183 - #45 int
INFO  11:42:35,183 - #45 i
INFO  11:42:35,183 - #5 ;
INFO  11:42:35,183 - #3 {
INFO  11:42:35,183 - #45 a
INFO  11:42:35,183 - #15 .
INFO  11:42:35,184 - #45 y
INFO  11:42:35,184 - #12 =
INFO  11:42:35,185 - #18 new
INFO  11:42:35,186 - #45 int
INFO  11:42:35,186 - #25 [
INFO  11:42:35,186 - #42 5
INFO  11:42:35,186 - #34 ]
INFO  11:42:35,186 - #5 ;
INFO  11:42:35,187 - #45 c
INFO  11:42:35,187 - #12 =
INFO  11:42:35,187 - #18 new
INFO  11:42:35,187 - #45 C
INFO  11:42:35,187 - #5 ;
INFO  11:42:35,187 - #45 c
INFO  11:42:35,187 - #15 .
INFO  11:42:35,187 - #45 theA
INFO  11:42:35,187 - #12 =
INFO  11:42:35,187 - #45 a
INFO  11:42:35,187 - #5 ;
INFO  11:42:35,188 - #45 c
INFO  11:42:35,188 - #15 .
INFO  11:42:35,189 - #45 x
INFO  11:42:35,189 - #12 =
INFO  11:42:35,189 - #18 new
INFO  11:42:35,189 - #45 int
INFO  11:42:35,189 - #25 [
INFO  11:42:35,189 - #42 5
INFO  11:42:35,189 - #34 ]
INFO  11:42:35,189 - #5 ;
INFO  11:42:35,189 - #45 x
INFO  11:42:35,189 - #12 =
INFO  11:42:35,189 - #18 new
INFO  11:42:35,189 - #45 int
INFO  11:42:35,189 - #25 [
INFO  11:42:35,189 - #45 Broj
INFO  11:42:35,190 - #15 .
INFO  11:42:35,190 - #45 TRI
INFO  11:42:35,190 - #34 ]
INFO  11:42:35,190 - #5 ;
INFO  11:42:35,190 - #26 read
INFO  11:42:35,190 - #6 (
INFO  11:42:35,190 - #45 c
INFO  11:42:35,190 - #15 .
INFO  11:42:35,190 - #45 i
INFO  11:42:35,190 - #7 )
INFO  11:42:35,190 - #5 ;
INFO  11:42:35,190 - #41 for
INFO  11:42:35,190 - #6 (
INFO  11:42:35,190 - #45 i
INFO  11:42:35,191 - #12 =
INFO  11:42:35,195 - #42 0
INFO  11:42:35,195 - #5 ;
INFO  11:42:35,196 - #45 i
INFO  11:42:35,196 - #19 <
INFO  11:42:35,196 - #42 5
INFO  11:42:35,197 - #5 ;
INFO  11:42:35,198 - #45 i
INFO  11:42:35,199 - #38 ++
INFO  11:42:35,199 - #7 )
INFO  11:42:35,199 - #3 {
INFO  11:42:35,200 - #26 read
INFO  11:42:35,200 - #6 (
INFO  11:42:35,200 - #45 c
INFO  11:42:35,200 - #15 .
INFO  11:42:35,200 - #45 x
INFO  11:42:35,200 - #25 [
INFO  11:42:35,200 - #45 i
INFO  11:42:35,200 - #34 ]
INFO  11:42:35,200 - #7 )
INFO  11:42:35,200 - #5 ;
INFO  11:42:35,200 - #26 read
INFO  11:42:35,200 - #6 (
INFO  11:42:35,200 - #45 c
INFO  11:42:35,200 - #15 .
INFO  11:42:35,201 - #45 theA
INFO  11:42:35,201 - #15 .
INFO  11:42:35,201 - #45 x
INFO  11:42:35,201 - #25 [
INFO  11:42:35,201 - #45 i
INFO  11:42:35,201 - #34 ]
INFO  11:42:35,201 - #7 )
INFO  11:42:35,201 - #5 ;
INFO  11:42:35,201 - #46 if
INFO  11:42:35,201 - #6 (
INFO  11:42:35,201 - #42 1
INFO  11:42:35,201 - #32 >
INFO  11:42:35,201 - #42 2
INFO  11:42:35,202 - #7 )
INFO  11:42:35,203 - #26 read
INFO  11:42:35,203 - #6 (
INFO  11:42:35,203 - #45 a
INFO  11:42:35,203 - #7 )
INFO  11:42:35,203 - #5 ;
INFO  11:42:35,203 - #47 else
INFO  11:42:35,203 - #26 read
INFO  11:42:35,203 - #6 (
INFO  11:42:35,203 - #45 b
INFO  11:42:35,203 - #7 )
INFO  11:42:35,203 - #5 ;
INFO  11:42:35,203 - #4 }
INFO  11:42:35,204 - #9 print
INFO  11:42:35,204 - #6 (
INFO  11:42:35,204 - #45 c
INFO  11:42:35,204 - #15 .
INFO  11:42:35,204 - #45 getValue
INFO  11:42:35,204 - #6 (
INFO  11:42:35,204 - #45 c
INFO  11:42:35,204 - #15 .
INFO  11:42:35,204 - #45 theA
INFO  11:42:35,204 - #15 .
INFO  11:42:35,204 - #45 x
INFO  11:42:35,204 - #25 [
INFO  11:42:35,204 - #45 Broj
INFO  11:42:35,204 - #15 .
INFO  11:42:35,204 - #45 NULA
INFO  11:42:35,204 - #34 ]
INFO  11:42:35,204 - #7 )
INFO  11:42:35,205 - #7 )
INFO  11:42:35,205 - #5 ;
INFO  11:42:35,205 - #45 c
INFO  11:42:35,207 - #15 .
INFO  11:42:35,207 - #45 m
INFO  11:42:35,207 - #6 (
INFO  11:42:35,207 - #7 )
INFO  11:42:35,207 - #5 ;
INFO  11:42:35,208 - #4 }
INFO  11:42:35,208 - #4 }
INFO  11:42:35,219 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        NoOptionalStmt(
                        ) [NoOptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:42:35,222 - ===================================
INFO  11:42:35,222 - INFO:  Pocetak programa Program na liniji 1
INFO  11:42:35,223 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:42:35,223 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:42:35,223 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:42:35,223 - INFO:  Definisan interfejs I na liniji 4
INFO  11:42:35,223 - INFO:  Deklarisan niz x na liniji 5
INFO  11:42:35,223 - INFO:  Deklarisan niz y na liniji 5
INFO  11:42:35,224 - INFO:  Definisana klasa A na liniji 5
INFO  11:42:35,224 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:42:35,224 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:42:35,224 - INFO:  Deklarisan niz x na liniji 9
INFO  11:42:35,224 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:42:35,224 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:42:35,224 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:42:35,224 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:42:35,224 - INFO:  Deklarisan metod m na liniji 15
INFO  11:42:35,224 - INFO:  Definisana klasa B na liniji 8
INFO  11:42:35,224 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:42:35,224 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:42:35,224 - INFO:  Definisana klasa C na liniji 18
INFO  11:42:35,224 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:42:35,224 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:42:35,224 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:42:35,224 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 23		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 24		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 25		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 26		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 27		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 29		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:42:35,224 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
INFO  11:42:35,224 - INFO:  Deklarisan metod main na liniji 20
INFO  11:42:35,229 - ===================================
ERROR 11:42:35,229 - Postoji greska u generisanom kodu!
INFO  11:42:55,379 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:42:55,529 - #2 program
INFO  11:42:55,530 - #45 Program
INFO  11:42:55,530 - #45 int
INFO  11:42:55,532 - #45 x
INFO  11:42:55,532 - #8 ,
INFO  11:42:55,533 - #45 y
INFO  11:42:55,533 - #5 ;
INFO  11:42:55,535 - #14 interface
INFO  11:42:55,536 - #45 I
INFO  11:42:55,536 - #3 {
INFO  11:42:55,537 - #13 void
INFO  11:42:55,537 - #45 m
INFO  11:42:55,537 - #6 (
INFO  11:42:55,537 - #7 )
INFO  11:42:55,538 - #5 ;
INFO  11:42:55,538 - #4 }
INFO  11:42:55,539 - #16 class
INFO  11:42:55,539 - #45 A
INFO  11:42:55,539 - #3 {
INFO  11:42:55,542 - #45 int
INFO  11:42:55,542 - #45 x
INFO  11:42:55,542 - #25 [
INFO  11:42:55,544 - #34 ]
INFO  11:42:55,544 - #8 ,
INFO  11:42:55,545 - #45 y
INFO  11:42:55,545 - #25 [
INFO  11:42:55,545 - #34 ]
INFO  11:42:55,545 - #5 ;
INFO  11:42:55,545 - #4 }
INFO  11:42:55,546 - #29 enum
INFO  11:42:55,546 - #45 Broj
INFO  11:42:55,546 - #3 {
INFO  11:42:55,546 - #45 NULA
INFO  11:42:55,546 - #8 ,
INFO  11:42:55,546 - #45 TRI
INFO  11:42:55,546 - #12 =
INFO  11:42:55,549 - #42 3
INFO  11:42:55,549 - #8 ,
INFO  11:42:55,549 - #45 PET
INFO  11:42:55,549 - #12 =
INFO  11:42:55,549 - #42 5
INFO  11:42:55,550 - #4 }
INFO  11:42:55,550 - #16 class
INFO  11:42:55,550 - #45 B
INFO  11:42:55,550 - #39 extends
INFO  11:42:55,550 - #45 A
INFO  11:42:55,550 - #40 implements
INFO  11:42:55,550 - #45 I
INFO  11:42:55,550 - #3 {
INFO  11:42:55,552 - #45 int
INFO  11:42:55,552 - #45 i
INFO  11:42:55,552 - #5 ;
INFO  11:42:55,552 - #45 int
INFO  11:42:55,552 - #45 x
INFO  11:42:55,553 - #25 [
INFO  11:42:55,553 - #34 ]
INFO  11:42:55,553 - #5 ;
INFO  11:42:55,553 - #3 {
INFO  11:42:55,553 - #45 int
INFO  11:42:55,553 - #45 getValue
INFO  11:42:55,553 - #6 (
INFO  11:42:55,553 - #45 int
INFO  11:42:55,553 - #45 a
INFO  11:42:55,556 - #7 )
INFO  11:42:55,557 - #45 int
INFO  11:42:55,557 - #45 b
INFO  11:42:55,557 - #5 ;
INFO  11:42:55,558 - #45 bool
INFO  11:42:55,558 - #45 c
INFO  11:42:55,558 - #5 ;
INFO  11:42:55,558 - #3 {
INFO  11:42:55,558 - #10 return
INFO  11:42:55,559 - #42 0
INFO  11:42:55,559 - #5 ;
INFO  11:42:55,562 - #4 }
INFO  11:42:55,562 - #13 void
INFO  11:42:55,563 - #45 m
INFO  11:42:55,563 - #6 (
INFO  11:42:55,563 - #7 )
INFO  11:42:55,563 - #3 {
INFO  11:42:55,563 - #4 }
INFO  11:42:55,563 - #4 }
INFO  11:42:55,563 - #4 }
INFO  11:42:55,564 - #16 class
INFO  11:42:55,564 - #45 C
INFO  11:42:55,564 - #39 extends
INFO  11:42:55,564 - #45 B
INFO  11:42:55,564 - #3 {
INFO  11:42:55,564 - #45 A
INFO  11:42:55,564 - #45 theA
INFO  11:42:55,565 - #5 ;
INFO  11:42:55,565 - #45 int
INFO  11:42:55,565 - #45 a
INFO  11:42:55,565 - #5 ;
INFO  11:42:55,565 - #4 }
INFO  11:42:55,565 - #3 {
INFO  11:42:55,565 - #13 void
INFO  11:42:55,565 - #45 main
INFO  11:42:55,565 - #6 (
INFO  11:42:55,566 - #45 int
INFO  11:42:55,569 - #45 x
INFO  11:42:55,569 - #7 )
INFO  11:42:55,569 - #45 A
INFO  11:42:55,569 - #45 a
INFO  11:42:55,569 - #5 ;
INFO  11:42:55,569 - #45 C
INFO  11:42:55,569 - #45 c
INFO  11:42:55,569 - #5 ;
INFO  11:42:55,569 - #45 int
INFO  11:42:55,569 - #45 i
INFO  11:42:55,569 - #5 ;
INFO  11:42:55,569 - #3 {
INFO  11:42:55,569 - #45 a
INFO  11:42:55,569 - #15 .
INFO  11:42:55,574 - #45 y
INFO  11:42:55,574 - #12 =
INFO  11:42:55,574 - #18 new
INFO  11:42:55,577 - #45 int
INFO  11:42:55,577 - #25 [
INFO  11:42:55,577 - #42 5
INFO  11:42:55,577 - #34 ]
INFO  11:42:55,577 - #5 ;
INFO  11:42:55,577 - #45 c
INFO  11:42:55,577 - #12 =
INFO  11:42:55,578 - #18 new
INFO  11:42:55,578 - #45 C
INFO  11:42:55,578 - #5 ;
INFO  11:42:55,578 - #45 c
INFO  11:42:55,578 - #15 .
INFO  11:42:55,578 - #45 theA
INFO  11:42:55,578 - #12 =
INFO  11:42:55,578 - #45 a
INFO  11:42:55,578 - #5 ;
INFO  11:42:55,578 - #45 c
INFO  11:42:55,578 - #15 .
INFO  11:42:55,578 - #45 x
INFO  11:42:55,578 - #12 =
INFO  11:42:55,578 - #18 new
INFO  11:42:55,578 - #45 int
INFO  11:42:55,578 - #25 [
INFO  11:42:55,578 - #42 5
INFO  11:42:55,578 - #34 ]
INFO  11:42:55,582 - #5 ;
INFO  11:42:55,582 - #45 x
INFO  11:42:55,582 - #12 =
INFO  11:42:55,583 - #18 new
INFO  11:42:55,583 - #45 int
INFO  11:42:55,583 - #25 [
INFO  11:42:55,583 - #45 Broj
INFO  11:42:55,583 - #15 .
INFO  11:42:55,583 - #45 TRI
INFO  11:42:55,583 - #34 ]
INFO  11:42:55,583 - #5 ;
INFO  11:42:55,593 - #26 read
INFO  11:42:55,593 - #6 (
INFO  11:42:55,593 - #45 c
INFO  11:42:55,593 - #15 .
INFO  11:42:55,593 - #45 i
INFO  11:42:55,595 - #7 )
INFO  11:42:55,595 - #5 ;
INFO  11:42:55,595 - #41 for
INFO  11:42:55,595 - #6 (
INFO  11:42:55,595 - #45 i
INFO  11:42:55,595 - #12 =
INFO  11:42:55,595 - #42 0
INFO  11:42:55,595 - #5 ;
INFO  11:42:55,595 - #45 i
INFO  11:42:55,595 - #19 <
INFO  11:42:55,596 - #42 5
INFO  11:42:55,597 - #5 ;
INFO  11:42:55,597 - #45 i
INFO  11:42:55,597 - #38 ++
INFO  11:42:55,597 - #7 )
INFO  11:42:55,602 - #3 {
INFO  11:42:55,602 - #26 read
INFO  11:42:55,602 - #6 (
INFO  11:42:55,602 - #45 c
INFO  11:42:55,602 - #15 .
INFO  11:42:55,602 - #45 x
INFO  11:42:55,602 - #25 [
INFO  11:42:55,603 - #45 i
INFO  11:42:55,603 - #34 ]
INFO  11:42:55,603 - #7 )
INFO  11:42:55,603 - #5 ;
INFO  11:42:55,603 - #26 read
INFO  11:42:55,603 - #6 (
INFO  11:42:55,603 - #45 c
INFO  11:42:55,603 - #15 .
INFO  11:42:55,603 - #45 theA
INFO  11:42:55,603 - #15 .
INFO  11:42:55,604 - #45 x
INFO  11:42:55,604 - #25 [
INFO  11:42:55,604 - #45 i
INFO  11:42:55,604 - #34 ]
INFO  11:42:55,604 - #7 )
INFO  11:42:55,604 - #5 ;
INFO  11:42:55,604 - #46 if
INFO  11:42:55,604 - #6 (
INFO  11:42:55,604 - #42 1
INFO  11:42:55,604 - #32 >
INFO  11:42:55,604 - #42 2
INFO  11:42:55,604 - #7 )
INFO  11:42:55,606 - #26 read
INFO  11:42:55,606 - #6 (
INFO  11:42:55,606 - #45 a
INFO  11:42:55,606 - #7 )
INFO  11:42:55,606 - #5 ;
INFO  11:42:55,606 - #47 else
INFO  11:42:55,606 - #26 read
INFO  11:42:55,606 - #6 (
INFO  11:42:55,606 - #45 b
INFO  11:42:55,606 - #7 )
INFO  11:42:55,606 - #5 ;
INFO  11:42:55,606 - #4 }
INFO  11:42:55,607 - #9 print
INFO  11:42:55,607 - #6 (
INFO  11:42:55,607 - #45 c
INFO  11:42:55,607 - #15 .
INFO  11:42:55,607 - #45 getValue
INFO  11:42:55,607 - #6 (
INFO  11:42:55,607 - #45 c
INFO  11:42:55,607 - #15 .
INFO  11:42:55,607 - #45 theA
INFO  11:42:55,608 - #15 .
INFO  11:42:55,608 - #45 x
INFO  11:42:55,608 - #25 [
INFO  11:42:55,608 - #45 Broj
INFO  11:42:55,608 - #15 .
INFO  11:42:55,608 - #45 NULA
INFO  11:42:55,608 - #34 ]
INFO  11:42:55,608 - #7 )
INFO  11:42:55,608 - #7 )
INFO  11:42:55,609 - #5 ;
INFO  11:42:55,609 - #45 c
INFO  11:42:55,610 - #15 .
INFO  11:42:55,610 - #45 m
INFO  11:42:55,610 - #6 (
INFO  11:42:55,610 - #7 )
INFO  11:42:55,611 - #5 ;
INFO  11:42:55,612 - #4 }
INFO  11:42:55,612 - #4 }
INFO  11:42:55,637 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        NoOptionalStmt(
                        ) [NoOptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:42:55,641 - ===================================
INFO  11:42:55,641 - INFO:  Pocetak programa Program na liniji 1
INFO  11:42:55,642 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:42:55,642 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:42:55,642 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:42:55,642 - INFO:  Definisan interfejs I na liniji 4
INFO  11:42:55,642 - INFO:  Deklarisan niz x na liniji 5
INFO  11:42:55,647 - INFO:  Deklarisan niz y na liniji 5
INFO  11:42:55,647 - INFO:  Definisana klasa A na liniji 5
INFO  11:42:55,647 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:42:55,652 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:42:55,652 - INFO:  Deklarisan niz x na liniji 9
INFO  11:42:55,652 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:42:55,652 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:42:55,652 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:43:01,374 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:43:01,376 - INFO:  Deklarisan metod m na liniji 15
INFO  11:43:01,376 - INFO:  Definisana klasa B na liniji 8
INFO  11:43:01,376 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:43:01,376 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:43:01,376 - INFO:  Definisana klasa C na liniji 18
INFO  11:43:01,376 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:43:01,376 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:43:01,376 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:43:01,376 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:43:46,839 - ERROR: Odgovarajuci tip mora biti int na liniji 23		<--------------- ERROR 
INFO  11:44:48,548 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:44:48,703 - #2 program
INFO  11:44:48,703 - #45 Program
INFO  11:44:48,703 - #45 int
INFO  11:44:48,703 - #45 x
INFO  11:44:48,708 - #8 ,
INFO  11:44:48,708 - #45 y
INFO  11:44:48,708 - #5 ;
INFO  11:44:48,708 - #14 interface
INFO  11:44:48,708 - #45 I
INFO  11:44:48,708 - #3 {
INFO  11:44:48,712 - #13 void
INFO  11:44:48,712 - #45 m
INFO  11:44:48,713 - #6 (
INFO  11:44:48,713 - #7 )
INFO  11:44:48,715 - #5 ;
INFO  11:44:48,715 - #4 }
INFO  11:44:48,715 - #16 class
INFO  11:44:48,715 - #45 A
INFO  11:44:48,715 - #3 {
INFO  11:44:48,715 - #45 int
INFO  11:44:48,720 - #45 x
INFO  11:44:48,720 - #25 [
INFO  11:44:48,720 - #34 ]
INFO  11:44:48,720 - #8 ,
INFO  11:44:48,721 - #45 y
INFO  11:44:48,722 - #25 [
INFO  11:44:48,722 - #34 ]
INFO  11:44:48,722 - #5 ;
INFO  11:44:48,722 - #4 }
INFO  11:44:48,723 - #29 enum
INFO  11:44:48,724 - #45 Broj
INFO  11:44:48,724 - #3 {
INFO  11:44:48,725 - #45 NULA
INFO  11:44:48,725 - #8 ,
INFO  11:44:48,726 - #45 TRI
INFO  11:44:48,726 - #12 =
INFO  11:44:48,726 - #42 3
INFO  11:44:48,726 - #8 ,
INFO  11:44:48,727 - #45 PET
INFO  11:44:48,727 - #12 =
INFO  11:44:48,727 - #42 5
INFO  11:44:48,727 - #4 }
INFO  11:44:48,727 - #16 class
INFO  11:44:48,727 - #45 B
INFO  11:44:48,727 - #39 extends
INFO  11:44:48,727 - #45 A
INFO  11:44:48,727 - #40 implements
INFO  11:44:48,727 - #45 I
INFO  11:44:48,727 - #3 {
INFO  11:44:48,729 - #45 int
INFO  11:44:48,729 - #45 i
INFO  11:44:48,729 - #5 ;
INFO  11:44:48,729 - #45 int
INFO  11:44:48,729 - #45 x
INFO  11:44:48,729 - #25 [
INFO  11:44:48,730 - #34 ]
INFO  11:44:48,730 - #5 ;
INFO  11:44:48,730 - #3 {
INFO  11:44:48,730 - #45 int
INFO  11:44:48,730 - #45 getValue
INFO  11:44:48,730 - #6 (
INFO  11:44:48,730 - #45 int
INFO  11:44:48,730 - #45 a
INFO  11:44:48,733 - #7 )
INFO  11:44:48,734 - #45 int
INFO  11:44:48,734 - #45 b
INFO  11:44:48,734 - #5 ;
INFO  11:44:48,735 - #45 bool
INFO  11:44:48,735 - #45 c
INFO  11:44:48,735 - #5 ;
INFO  11:44:48,735 - #3 {
INFO  11:44:48,735 - #10 return
INFO  11:44:48,736 - #42 0
INFO  11:44:48,736 - #5 ;
INFO  11:44:48,739 - #4 }
INFO  11:44:48,740 - #13 void
INFO  11:44:48,740 - #45 m
INFO  11:44:48,740 - #6 (
INFO  11:44:48,740 - #7 )
INFO  11:44:48,740 - #3 {
INFO  11:44:48,740 - #4 }
INFO  11:44:48,741 - #4 }
INFO  11:44:48,741 - #4 }
INFO  11:44:48,741 - #16 class
INFO  11:44:48,741 - #45 C
INFO  11:44:48,741 - #39 extends
INFO  11:44:48,741 - #45 B
INFO  11:44:48,741 - #3 {
INFO  11:44:48,741 - #45 A
INFO  11:44:48,741 - #45 theA
INFO  11:44:48,742 - #5 ;
INFO  11:44:48,742 - #45 int
INFO  11:44:48,742 - #45 a
INFO  11:44:48,742 - #5 ;
INFO  11:44:48,742 - #4 }
INFO  11:44:48,742 - #3 {
INFO  11:44:48,742 - #13 void
INFO  11:44:48,742 - #45 main
INFO  11:44:48,743 - #6 (
INFO  11:44:48,743 - #45 int
INFO  11:44:48,749 - #45 x
INFO  11:44:48,750 - #7 )
INFO  11:44:48,750 - #45 A
INFO  11:44:48,750 - #45 a
INFO  11:44:48,750 - #5 ;
INFO  11:44:48,750 - #45 C
INFO  11:44:48,751 - #45 c
INFO  11:44:48,751 - #5 ;
INFO  11:44:48,751 - #45 int
INFO  11:44:48,751 - #45 i
INFO  11:44:48,751 - #5 ;
INFO  11:44:48,751 - #3 {
INFO  11:44:48,751 - #45 a
INFO  11:44:48,751 - #15 .
INFO  11:44:48,753 - #45 y
INFO  11:44:48,753 - #12 =
INFO  11:44:48,754 - #18 new
INFO  11:44:48,754 - #45 int
INFO  11:44:48,754 - #25 [
INFO  11:44:48,754 - #42 5
INFO  11:44:48,762 - #34 ]
INFO  11:44:48,762 - #5 ;
INFO  11:44:48,762 - #45 c
INFO  11:44:48,762 - #12 =
INFO  11:44:48,762 - #18 new
INFO  11:44:48,762 - #45 C
INFO  11:44:48,767 - #5 ;
INFO  11:44:48,767 - #45 c
INFO  11:44:48,767 - #15 .
INFO  11:44:48,767 - #45 theA
INFO  11:44:48,767 - #12 =
INFO  11:44:48,767 - #45 a
INFO  11:44:48,767 - #5 ;
INFO  11:44:48,767 - #45 c
INFO  11:44:48,767 - #15 .
INFO  11:44:48,767 - #45 x
INFO  11:44:48,767 - #12 =
INFO  11:44:48,767 - #18 new
INFO  11:44:48,767 - #45 int
INFO  11:44:48,767 - #25 [
INFO  11:44:48,767 - #42 5
INFO  11:44:48,767 - #34 ]
INFO  11:44:48,767 - #5 ;
INFO  11:44:48,767 - #45 x
INFO  11:44:48,772 - #12 =
INFO  11:44:48,772 - #18 new
INFO  11:44:48,772 - #45 int
INFO  11:44:48,772 - #25 [
INFO  11:44:48,772 - #45 Broj
INFO  11:44:48,772 - #15 .
INFO  11:44:48,773 - #45 TRI
INFO  11:44:48,773 - #34 ]
INFO  11:44:48,773 - #5 ;
INFO  11:44:48,773 - #26 read
INFO  11:44:48,773 - #6 (
INFO  11:44:48,773 - #45 c
INFO  11:44:48,773 - #15 .
INFO  11:44:48,773 - #45 i
INFO  11:44:48,773 - #7 )
INFO  11:44:48,773 - #5 ;
INFO  11:44:48,773 - #41 for
INFO  11:44:48,773 - #6 (
INFO  11:44:48,773 - #45 i
INFO  11:44:48,773 - #12 =
INFO  11:44:48,773 - #42 0
INFO  11:44:48,773 - #5 ;
INFO  11:44:48,773 - #45 i
INFO  11:44:48,773 - #19 <
INFO  11:44:48,773 - #42 5
INFO  11:44:48,773 - #5 ;
INFO  11:44:48,778 - #45 i
INFO  11:44:48,778 - #38 ++
INFO  11:44:48,778 - #7 )
INFO  11:44:48,778 - #3 {
INFO  11:44:48,778 - #26 read
INFO  11:44:48,778 - #6 (
INFO  11:44:48,778 - #45 c
INFO  11:44:48,778 - #15 .
INFO  11:44:48,778 - #45 x
INFO  11:44:48,778 - #25 [
INFO  11:44:48,778 - #45 i
INFO  11:44:48,778 - #34 ]
INFO  11:44:48,778 - #7 )
INFO  11:44:48,778 - #5 ;
INFO  11:44:48,778 - #26 read
INFO  11:44:48,778 - #6 (
INFO  11:44:48,778 - #45 c
INFO  11:44:48,778 - #15 .
INFO  11:44:48,778 - #45 theA
INFO  11:44:48,778 - #15 .
INFO  11:44:48,778 - #45 x
INFO  11:44:48,778 - #25 [
INFO  11:44:48,778 - #45 i
INFO  11:44:48,778 - #34 ]
INFO  11:44:48,778 - #7 )
INFO  11:44:48,778 - #5 ;
INFO  11:44:48,778 - #46 if
INFO  11:44:48,778 - #6 (
INFO  11:44:48,778 - #42 1
INFO  11:44:48,784 - #32 >
INFO  11:44:48,785 - #42 2
INFO  11:44:48,787 - #7 )
INFO  11:44:48,787 - #26 read
INFO  11:44:48,787 - #6 (
INFO  11:44:48,788 - #45 a
INFO  11:44:48,789 - #7 )
INFO  11:44:48,789 - #5 ;
INFO  11:44:48,789 - #47 else
INFO  11:44:48,789 - #26 read
INFO  11:44:48,789 - #6 (
INFO  11:44:48,789 - #45 b
INFO  11:44:48,789 - #7 )
INFO  11:44:48,789 - #5 ;
INFO  11:44:48,789 - #4 }
INFO  11:44:48,789 - #9 print
INFO  11:44:48,789 - #6 (
INFO  11:44:48,789 - #45 c
INFO  11:44:48,790 - #15 .
INFO  11:44:48,790 - #45 getValue
INFO  11:44:48,790 - #6 (
INFO  11:44:48,790 - #45 c
INFO  11:44:48,790 - #15 .
INFO  11:44:48,790 - #45 theA
INFO  11:44:48,790 - #15 .
INFO  11:44:48,790 - #45 x
INFO  11:44:48,790 - #25 [
INFO  11:44:48,790 - #45 Broj
INFO  11:44:48,790 - #15 .
INFO  11:44:48,790 - #45 NULA
INFO  11:44:48,790 - #34 ]
INFO  11:44:48,790 - #7 )
INFO  11:44:48,790 - #7 )
INFO  11:44:48,791 - #5 ;
INFO  11:44:48,791 - #45 c
INFO  11:44:48,791 - #15 .
INFO  11:44:48,791 - #45 m
INFO  11:44:48,791 - #6 (
INFO  11:44:48,791 - #7 )
INFO  11:44:48,792 - #5 ;
INFO  11:44:48,792 - #4 }
INFO  11:44:48,792 - #4 }
INFO  11:44:48,820 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        NoOptionalStmt(
                        ) [NoOptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              OptDesignator(
                                NoDesignator(
                                ) [NoDesignator]
                                DesignField(
                                 y
                                ) [DesignField]
                              ) [OptDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:44:48,825 - ===================================
INFO  11:44:48,825 - INFO:  Pocetak programa Program na liniji 1
INFO  11:44:48,825 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:44:48,825 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:44:48,825 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:44:48,825 - INFO:  Definisan interfejs I na liniji 4
INFO  11:44:48,825 - INFO:  Deklarisan niz x na liniji 5
INFO  11:44:48,825 - INFO:  Deklarisan niz y na liniji 5
INFO  11:44:48,830 - INFO:  Definisana klasa A na liniji 5
INFO  11:44:48,830 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:44:48,830 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:44:48,830 - INFO:  Deklarisan niz x na liniji 9
INFO  11:44:48,830 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:44:48,830 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:44:48,830 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:44:54,528 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:44:54,529 - INFO:  Deklarisan metod m na liniji 15
INFO  11:44:54,529 - INFO:  Definisana klasa B na liniji 8
INFO  11:44:54,529 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:44:54,529 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:44:54,529 - INFO:  Definisana klasa C na liniji 18
INFO  11:44:54,529 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:44:54,529 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:44:54,529 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:44:54,529 - INFO:  Deklarisana promenljiva i na liniji 20
INFO  11:49:41,598 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:49:41,685 - #2 program
INFO  11:49:41,685 - #45 Program
INFO  11:49:41,685 - #45 int
INFO  11:49:41,687 - #45 x
INFO  11:49:41,688 - #8 ,
INFO  11:49:41,689 - #45 y
INFO  11:49:41,689 - #5 ;
INFO  11:49:41,690 - #14 interface
INFO  11:49:41,690 - #45 I
INFO  11:49:41,690 - #3 {
INFO  11:49:41,690 - #13 void
INFO  11:49:41,690 - #45 m
INFO  11:49:41,692 - #6 (
INFO  11:49:41,692 - #7 )
INFO  11:49:41,693 - #5 ;
INFO  11:49:41,693 - #4 }
INFO  11:49:41,693 - #16 class
INFO  11:49:41,693 - #45 A
INFO  11:49:41,693 - #3 {
INFO  11:49:41,694 - #45 int
INFO  11:49:41,696 - #45 x
INFO  11:49:41,696 - #25 [
INFO  11:49:41,696 - #34 ]
INFO  11:49:41,696 - #8 ,
INFO  11:49:41,697 - #45 y
INFO  11:49:41,697 - #25 [
INFO  11:49:41,697 - #34 ]
INFO  11:49:41,697 - #5 ;
INFO  11:49:41,697 - #4 }
INFO  11:49:41,698 - #29 enum
INFO  11:49:41,699 - #45 Broj
INFO  11:49:41,699 - #3 {
INFO  11:49:41,699 - #45 NULA
INFO  11:49:41,699 - #8 ,
INFO  11:49:41,699 - #45 TRI
INFO  11:49:41,699 - #12 =
INFO  11:49:41,699 - #42 3
INFO  11:49:41,699 - #8 ,
INFO  11:49:41,699 - #45 PET
INFO  11:49:41,700 - #12 =
INFO  11:49:41,700 - #42 5
INFO  11:49:41,700 - #4 }
INFO  11:49:41,700 - #16 class
INFO  11:49:41,700 - #45 B
INFO  11:49:41,700 - #39 extends
INFO  11:49:41,700 - #45 A
INFO  11:49:41,700 - #40 implements
INFO  11:49:41,700 - #45 I
INFO  11:49:41,701 - #3 {
INFO  11:49:41,702 - #45 int
INFO  11:49:41,702 - #45 i
INFO  11:49:41,702 - #5 ;
INFO  11:49:41,702 - #45 int
INFO  11:49:41,702 - #45 x
INFO  11:49:41,702 - #25 [
INFO  11:49:41,702 - #34 ]
INFO  11:49:41,702 - #5 ;
INFO  11:49:41,703 - #3 {
INFO  11:49:41,703 - #45 int
INFO  11:49:41,703 - #45 getValue
INFO  11:49:41,704 - #6 (
INFO  11:49:41,704 - #45 int
INFO  11:49:41,704 - #45 a
INFO  11:49:41,705 - #7 )
INFO  11:49:41,705 - #45 int
INFO  11:49:41,705 - #45 b
INFO  11:49:41,705 - #5 ;
INFO  11:49:41,705 - #45 bool
INFO  11:49:41,705 - #45 c
INFO  11:49:41,705 - #5 ;
INFO  11:49:41,705 - #3 {
INFO  11:49:41,705 - #10 return
INFO  11:49:41,706 - #42 0
INFO  11:49:41,707 - #5 ;
INFO  11:49:41,708 - #4 }
INFO  11:49:41,708 - #13 void
INFO  11:49:41,708 - #45 m
INFO  11:49:41,709 - #6 (
INFO  11:49:41,709 - #7 )
INFO  11:49:41,709 - #3 {
INFO  11:49:41,709 - #4 }
INFO  11:49:41,709 - #4 }
INFO  11:49:41,709 - #4 }
INFO  11:49:41,709 - #16 class
INFO  11:49:41,709 - #45 C
INFO  11:49:41,709 - #39 extends
INFO  11:49:41,709 - #45 B
INFO  11:49:41,709 - #3 {
INFO  11:49:41,709 - #45 A
INFO  11:49:41,709 - #45 theA
INFO  11:49:41,709 - #5 ;
INFO  11:49:41,709 - #45 int
INFO  11:49:41,710 - #45 a
INFO  11:49:41,710 - #5 ;
INFO  11:49:41,710 - #4 }
INFO  11:49:41,710 - #3 {
INFO  11:49:41,710 - #13 void
INFO  11:49:41,710 - #45 main
INFO  11:49:41,710 - #6 (
INFO  11:49:41,710 - #45 int
INFO  11:49:41,716 - #45 x
INFO  11:49:41,716 - #7 )
INFO  11:49:41,716 - #45 A
INFO  11:49:41,716 - #45 a
INFO  11:49:41,716 - #5 ;
INFO  11:49:41,716 - #45 C
INFO  11:49:41,716 - #45 c
INFO  11:49:41,716 - #5 ;
INFO  11:49:41,716 - #45 int
INFO  11:49:41,716 - #45 i
INFO  11:49:41,717 - #5 ;
INFO  11:49:41,717 - #3 {
INFO  11:49:41,717 - #45 a
INFO  11:49:41,717 - #12 =
INFO  11:49:41,718 - #18 new
INFO  11:49:41,719 - #45 int
INFO  11:49:41,719 - #25 [
INFO  11:49:41,719 - #42 5
INFO  11:49:41,719 - #34 ]
INFO  11:49:41,719 - #5 ;
INFO  11:49:41,720 - #45 c
INFO  11:49:41,720 - #12 =
INFO  11:49:41,720 - #18 new
INFO  11:49:41,720 - #45 C
INFO  11:49:41,720 - #5 ;
INFO  11:49:41,720 - #45 c
INFO  11:49:41,720 - #15 .
INFO  11:49:41,720 - #45 theA
INFO  11:49:41,720 - #12 =
INFO  11:49:41,721 - #45 a
INFO  11:49:41,721 - #5 ;
INFO  11:49:41,722 - #45 c
INFO  11:49:41,722 - #15 .
INFO  11:49:41,722 - #45 x
INFO  11:49:41,722 - #12 =
INFO  11:49:41,722 - #18 new
INFO  11:49:41,722 - #45 int
INFO  11:49:41,722 - #25 [
INFO  11:49:41,722 - #42 5
INFO  11:49:41,722 - #34 ]
INFO  11:49:41,722 - #5 ;
INFO  11:49:41,722 - #45 x
INFO  11:49:41,723 - #12 =
INFO  11:49:41,723 - #18 new
INFO  11:49:41,723 - #45 int
INFO  11:49:41,723 - #25 [
INFO  11:49:41,723 - #45 Broj
INFO  11:49:41,723 - #15 .
INFO  11:49:41,723 - #45 TRI
INFO  11:49:41,723 - #34 ]
INFO  11:49:41,723 - #5 ;
INFO  11:49:41,723 - #26 read
INFO  11:49:41,723 - #6 (
INFO  11:49:41,723 - #45 c
INFO  11:49:41,723 - #15 .
INFO  11:49:41,723 - #45 i
INFO  11:49:41,723 - #7 )
INFO  11:49:41,723 - #5 ;
INFO  11:49:41,723 - #41 for
INFO  11:49:41,723 - #6 (
INFO  11:49:41,723 - #45 i
INFO  11:49:41,723 - #12 =
INFO  11:49:41,723 - #42 0
INFO  11:49:41,724 - #5 ;
INFO  11:49:41,724 - #45 i
INFO  11:49:41,724 - #19 <
INFO  11:49:41,724 - #42 5
INFO  11:49:41,725 - #5 ;
INFO  11:49:41,725 - #45 i
INFO  11:49:41,725 - #38 ++
INFO  11:49:41,725 - #7 )
INFO  11:49:41,726 - #3 {
INFO  11:49:41,726 - #26 read
INFO  11:49:41,726 - #6 (
INFO  11:49:41,726 - #45 c
INFO  11:49:41,726 - #15 .
INFO  11:49:41,726 - #45 x
INFO  11:49:41,726 - #25 [
INFO  11:49:41,726 - #45 i
INFO  11:49:41,726 - #34 ]
INFO  11:49:41,726 - #7 )
INFO  11:49:41,727 - #5 ;
INFO  11:49:41,727 - #26 read
INFO  11:49:41,727 - #6 (
INFO  11:49:41,728 - #45 c
INFO  11:49:41,728 - #15 .
INFO  11:49:41,728 - #45 theA
INFO  11:49:41,728 - #15 .
INFO  11:49:41,728 - #45 x
INFO  11:49:41,728 - #25 [
INFO  11:49:41,728 - #45 i
INFO  11:49:41,728 - #34 ]
INFO  11:49:41,728 - #7 )
INFO  11:49:41,728 - #5 ;
INFO  11:49:41,728 - #46 if
INFO  11:49:41,728 - #6 (
INFO  11:49:41,729 - #42 1
INFO  11:49:41,729 - #32 >
INFO  11:49:41,729 - #42 2
INFO  11:49:41,729 - #7 )
INFO  11:49:41,729 - #26 read
INFO  11:49:41,729 - #6 (
INFO  11:49:41,730 - #45 a
INFO  11:49:41,730 - #7 )
INFO  11:49:41,730 - #5 ;
INFO  11:49:41,730 - #47 else
INFO  11:49:41,730 - #26 read
INFO  11:49:41,730 - #6 (
INFO  11:49:41,730 - #45 b
INFO  11:49:41,730 - #7 )
INFO  11:49:41,730 - #5 ;
INFO  11:49:41,730 - #4 }
INFO  11:49:41,730 - #9 print
INFO  11:49:41,730 - #6 (
INFO  11:49:41,730 - #45 c
INFO  11:49:41,730 - #15 .
INFO  11:49:41,730 - #45 getValue
INFO  11:49:41,730 - #6 (
INFO  11:49:41,731 - #45 c
INFO  11:49:41,731 - #15 .
INFO  11:49:41,731 - #45 theA
INFO  11:49:41,731 - #15 .
INFO  11:49:41,731 - #45 x
INFO  11:49:41,731 - #25 [
INFO  11:49:41,731 - #45 Broj
INFO  11:49:41,731 - #15 .
INFO  11:49:41,731 - #45 NULA
INFO  11:49:41,731 - #34 ]
INFO  11:49:41,731 - #7 )
INFO  11:49:41,731 - #7 )
INFO  11:49:41,732 - #5 ;
INFO  11:49:41,732 - #45 c
INFO  11:49:41,732 - #15 .
INFO  11:49:41,732 - #45 m
INFO  11:49:41,732 - #6 (
INFO  11:49:41,732 - #7 )
INFO  11:49:41,733 - #5 ;
INFO  11:49:41,733 - #4 }
INFO  11:49:41,733 - #4 }
INFO  11:49:41,745 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        NoOptionalStmt(
                        ) [NoOptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            Design(
                             a
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:49:41,746 - ===================================
INFO  11:49:41,747 - INFO:  Pocetak programa Program na liniji 1
INFO  11:49:41,747 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:49:41,747 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:49:41,747 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:49:41,747 - INFO:  Definisan interfejs I na liniji 4
INFO  11:49:41,747 - INFO:  Deklarisan niz x na liniji 5
INFO  11:49:41,747 - INFO:  Deklarisan niz y na liniji 5
INFO  11:49:41,748 - INFO:  Definisana klasa A na liniji 5
INFO  11:49:41,749 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:49:41,749 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:49:41,749 - INFO:  Deklarisan niz x na liniji 9
INFO  11:49:41,749 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:49:41,749 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:49:41,749 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:49:41,750 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:49:41,750 - INFO:  Deklarisan metod m na liniji 15
INFO  11:49:41,750 - INFO:  Definisana klasa B na liniji 8
INFO  11:49:41,750 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:49:41,750 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:49:41,750 - INFO:  Definisana klasa C na liniji 18
INFO  11:49:41,750 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:49:41,750 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:49:41,750 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:49:41,750 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 23		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 24		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 25		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 26		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 27		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 27		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 29		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 30		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
ERROR 11:49:41,750 - ERROR: Odgovarajuci tip mora biti int na liniji 33		<--------------- ERROR 
INFO  11:49:41,750 - INFO:  Deklarisan metod main na liniji 20
INFO  11:49:41,750 - ===================================
ERROR 11:49:41,750 - Postoji greska u generisanom kodu!
INFO  11:50:39,834 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  11:50:40,034 - #2 program
INFO  11:50:40,034 - #45 Program
INFO  11:50:40,035 - #45 int
INFO  11:50:40,036 - #45 x
INFO  11:50:40,037 - #8 ,
INFO  11:50:40,037 - #45 y
INFO  11:50:40,037 - #5 ;
INFO  11:50:40,037 - #14 interface
INFO  11:50:40,037 - #45 I
INFO  11:50:40,037 - #3 {
INFO  11:50:40,041 - #13 void
INFO  11:50:40,041 - #45 m
INFO  11:50:40,042 - #6 (
INFO  11:50:40,042 - #7 )
INFO  11:50:40,043 - #5 ;
INFO  11:50:40,043 - #4 }
INFO  11:50:40,044 - #16 class
INFO  11:50:40,045 - #45 A
INFO  11:50:40,045 - #3 {
INFO  11:50:40,047 - #45 int
INFO  11:50:40,048 - #45 x
INFO  11:50:40,048 - #25 [
INFO  11:50:40,049 - #34 ]
INFO  11:50:40,049 - #8 ,
INFO  11:50:40,050 - #45 y
INFO  11:50:40,050 - #25 [
INFO  11:50:40,050 - #34 ]
INFO  11:50:40,051 - #5 ;
INFO  11:50:40,051 - #4 }
INFO  11:50:40,052 - #29 enum
INFO  11:50:40,052 - #45 Broj
INFO  11:50:40,052 - #3 {
INFO  11:50:40,054 - #45 NULA
INFO  11:50:40,054 - #8 ,
INFO  11:50:40,054 - #45 TRI
INFO  11:50:40,054 - #12 =
INFO  11:50:40,054 - #42 3
INFO  11:50:40,054 - #8 ,
INFO  11:50:40,054 - #45 PET
INFO  11:50:40,054 - #12 =
INFO  11:50:40,054 - #42 5
INFO  11:50:40,054 - #4 }
INFO  11:50:40,055 - #16 class
INFO  11:50:40,055 - #45 B
INFO  11:50:40,055 - #39 extends
INFO  11:50:40,055 - #45 A
INFO  11:50:40,056 - #40 implements
INFO  11:50:40,056 - #45 I
INFO  11:50:40,056 - #3 {
INFO  11:50:40,057 - #45 int
INFO  11:50:40,057 - #45 i
INFO  11:50:40,057 - #5 ;
INFO  11:50:40,057 - #45 int
INFO  11:50:40,057 - #45 x
INFO  11:50:40,058 - #25 [
INFO  11:50:40,058 - #34 ]
INFO  11:50:40,058 - #5 ;
INFO  11:50:40,058 - #3 {
INFO  11:50:40,058 - #45 int
INFO  11:50:40,058 - #45 getValue
INFO  11:50:40,058 - #6 (
INFO  11:50:40,058 - #45 int
INFO  11:50:40,058 - #45 a
INFO  11:50:40,064 - #7 )
INFO  11:50:40,064 - #45 int
INFO  11:50:40,065 - #45 b
INFO  11:50:40,065 - #5 ;
INFO  11:50:40,065 - #45 bool
INFO  11:50:40,065 - #45 c
INFO  11:50:40,065 - #5 ;
INFO  11:50:40,065 - #3 {
INFO  11:50:40,065 - #10 return
INFO  11:50:40,066 - #42 0
INFO  11:50:40,069 - #5 ;
INFO  11:50:40,070 - #4 }
INFO  11:50:40,072 - #13 void
INFO  11:50:40,072 - #45 m
INFO  11:50:40,072 - #6 (
INFO  11:50:40,072 - #7 )
INFO  11:50:40,072 - #3 {
INFO  11:50:40,073 - #4 }
INFO  11:50:40,073 - #4 }
INFO  11:50:40,073 - #4 }
INFO  11:50:40,073 - #16 class
INFO  11:50:40,073 - #45 C
INFO  11:50:40,073 - #39 extends
INFO  11:50:40,073 - #45 B
INFO  11:50:40,073 - #3 {
INFO  11:50:40,073 - #45 A
INFO  11:50:40,074 - #45 theA
INFO  11:50:40,074 - #5 ;
INFO  11:50:40,074 - #45 int
INFO  11:50:40,074 - #45 a
INFO  11:50:40,074 - #5 ;
INFO  11:50:40,074 - #4 }
INFO  11:50:40,074 - #3 {
INFO  11:50:40,074 - #13 void
INFO  11:50:40,074 - #45 main
INFO  11:50:40,075 - #6 (
INFO  11:50:40,075 - #45 int
INFO  11:50:40,077 - #45 x
INFO  11:50:40,077 - #7 )
INFO  11:50:40,077 - #45 A
INFO  11:50:40,077 - #45 a
INFO  11:50:40,077 - #5 ;
INFO  11:50:40,083 - #45 C
INFO  11:50:40,083 - #45 c
INFO  11:50:40,083 - #5 ;
INFO  11:50:40,083 - #45 int
INFO  11:50:40,083 - #45 i
INFO  11:50:40,083 - #5 ;
INFO  11:50:40,083 - #3 {
INFO  11:50:40,083 - #45 c
INFO  11:50:40,083 - #12 =
INFO  11:50:40,083 - #18 new
INFO  11:50:40,087 - #45 C
INFO  11:50:40,087 - #5 ;
INFO  11:50:40,088 - #45 c
INFO  11:50:40,088 - #15 .
INFO  11:50:40,088 - #45 theA
INFO  11:50:40,088 - #12 =
INFO  11:50:40,089 - #45 a
INFO  11:50:40,089 - #5 ;
INFO  11:50:40,089 - #45 c
INFO  11:50:40,089 - #15 .
INFO  11:50:40,094 - #45 x
INFO  11:50:40,094 - #12 =
INFO  11:50:40,094 - #18 new
INFO  11:50:40,094 - #45 int
INFO  11:50:40,094 - #25 [
INFO  11:50:40,099 - #42 5
INFO  11:50:40,099 - #34 ]
INFO  11:50:40,099 - #5 ;
INFO  11:50:40,099 - #45 x
INFO  11:50:40,099 - #12 =
INFO  11:50:40,101 - #18 new
INFO  11:50:40,101 - #45 int
INFO  11:50:40,101 - #25 [
INFO  11:50:40,101 - #45 Broj
INFO  11:50:40,101 - #15 .
INFO  11:50:40,101 - #45 TRI
INFO  11:50:40,101 - #34 ]
INFO  11:50:40,101 - #5 ;
INFO  11:50:40,101 - #26 read
INFO  11:50:40,101 - #6 (
INFO  11:50:40,101 - #45 c
INFO  11:50:40,101 - #15 .
INFO  11:50:40,101 - #45 i
INFO  11:50:40,102 - #7 )
INFO  11:50:40,102 - #5 ;
INFO  11:50:40,102 - #41 for
INFO  11:50:40,102 - #6 (
INFO  11:50:40,102 - #45 i
INFO  11:50:40,102 - #12 =
INFO  11:50:40,102 - #42 0
INFO  11:50:40,102 - #5 ;
INFO  11:50:40,102 - #45 i
INFO  11:50:40,102 - #19 <
INFO  11:50:40,102 - #42 5
INFO  11:50:40,102 - #5 ;
INFO  11:50:40,102 - #45 i
INFO  11:50:40,102 - #38 ++
INFO  11:50:40,102 - #7 )
INFO  11:50:40,107 - #3 {
INFO  11:50:40,107 - #26 read
INFO  11:50:40,107 - #6 (
INFO  11:50:40,107 - #45 c
INFO  11:50:40,107 - #15 .
INFO  11:50:40,107 - #45 x
INFO  11:50:40,107 - #25 [
INFO  11:50:40,107 - #45 i
INFO  11:50:40,107 - #34 ]
INFO  11:50:40,107 - #7 )
INFO  11:50:40,107 - #5 ;
INFO  11:50:40,107 - #26 read
INFO  11:50:40,107 - #6 (
INFO  11:50:40,107 - #45 c
INFO  11:50:40,107 - #15 .
INFO  11:50:40,107 - #45 theA
INFO  11:50:40,107 - #15 .
INFO  11:50:40,107 - #45 x
INFO  11:50:40,107 - #25 [
INFO  11:50:40,107 - #45 i
INFO  11:50:40,107 - #34 ]
INFO  11:50:40,107 - #7 )
INFO  11:50:40,107 - #5 ;
INFO  11:50:40,107 - #46 if
INFO  11:50:40,107 - #6 (
INFO  11:50:40,107 - #42 1
INFO  11:50:40,107 - #32 >
INFO  11:50:40,107 - #42 2
INFO  11:50:40,112 - #7 )
INFO  11:50:40,112 - #26 read
INFO  11:50:40,112 - #6 (
INFO  11:50:40,112 - #45 a
INFO  11:50:40,112 - #7 )
INFO  11:50:40,112 - #5 ;
INFO  11:50:40,112 - #47 else
INFO  11:50:40,112 - #26 read
INFO  11:50:40,112 - #6 (
INFO  11:50:40,112 - #45 b
INFO  11:50:40,112 - #7 )
INFO  11:50:40,112 - #5 ;
INFO  11:50:40,112 - #4 }
INFO  11:50:40,114 - #9 print
INFO  11:50:40,114 - #6 (
INFO  11:50:40,114 - #45 c
INFO  11:50:40,114 - #15 .
INFO  11:50:40,114 - #45 getValue
INFO  11:50:40,114 - #6 (
INFO  11:50:40,114 - #45 c
INFO  11:50:40,114 - #15 .
INFO  11:50:40,114 - #45 theA
INFO  11:50:40,114 - #15 .
INFO  11:50:40,114 - #45 x
INFO  11:50:40,115 - #25 [
INFO  11:50:40,115 - #45 Broj
INFO  11:50:40,115 - #15 .
INFO  11:50:40,115 - #45 NULA
INFO  11:50:40,115 - #34 ]
INFO  11:50:40,115 - #7 )
INFO  11:50:40,115 - #7 )
INFO  11:50:40,116 - #5 ;
INFO  11:50:40,116 - #45 c
INFO  11:50:40,117 - #15 .
INFO  11:50:40,117 - #45 m
INFO  11:50:40,117 - #6 (
INFO  11:50:40,117 - #7 )
INFO  11:50:40,118 - #5 ;
INFO  11:50:40,118 - #4 }
INFO  11:50:40,118 - #4 }
INFO  11:50:40,151 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:50:40,156 - ===================================
INFO  11:50:40,157 - INFO:  Pocetak programa Program na liniji 1
INFO  11:50:40,157 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  11:50:40,157 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  11:50:40,157 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  11:50:40,157 - INFO:  Definisan interfejs I na liniji 4
INFO  11:50:40,157 - INFO:  Deklarisan niz x na liniji 5
INFO  11:50:40,157 - INFO:  Deklarisan niz y na liniji 5
INFO  11:50:40,157 - INFO:  Definisana klasa A na liniji 5
INFO  11:50:40,157 - INFO:  Definisan enum tip Broj na liniji 7
INFO  11:50:40,157 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  11:50:40,157 - INFO:  Deklarisan niz x na liniji 9
INFO  11:50:40,157 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  11:50:40,157 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  11:50:40,157 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  11:50:44,777 - INFO:  Deklarisan metod getValue na liniji 11
INFO  11:50:44,777 - INFO:  Deklarisan metod m na liniji 15
INFO  11:50:44,777 - INFO:  Definisana klasa B na liniji 8
INFO  11:50:44,777 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  11:50:44,782 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  11:50:44,782 - INFO:  Definisana klasa C na liniji 18
INFO  11:50:44,782 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  11:50:44,782 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  11:50:44,790 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  11:50:44,790 - INFO:  Deklarisana promenljiva i na liniji 20
INFO  13:26:56,081 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  13:26:56,253 - #2 program
INFO  13:26:56,275 - #45 Program
INFO  13:26:56,275 - #45 int
INFO  13:26:56,275 - #45 x
INFO  13:26:56,275 - #8 ,
INFO  13:26:56,275 - #45 y
INFO  13:26:56,275 - #5 ;
INFO  13:26:56,275 - #14 interface
INFO  13:26:56,275 - #45 I
INFO  13:26:56,275 - #3 {
INFO  13:26:56,275 - #13 void
INFO  13:26:56,275 - #45 m
INFO  13:26:56,275 - #6 (
INFO  13:26:56,275 - #7 )
INFO  13:26:56,275 - #5 ;
INFO  13:26:56,275 - #4 }
INFO  13:26:56,275 - #16 class
INFO  13:26:56,275 - #45 A
INFO  13:26:56,275 - #3 {
INFO  13:26:56,290 - #45 int
INFO  13:26:56,290 - #45 x
INFO  13:26:56,290 - #25 [
INFO  13:26:56,290 - #34 ]
INFO  13:26:56,290 - #8 ,
INFO  13:26:56,290 - #45 y
INFO  13:26:56,290 - #25 [
INFO  13:26:56,290 - #34 ]
INFO  13:26:56,290 - #5 ;
INFO  13:26:56,290 - #4 }
INFO  13:26:56,290 - #29 enum
INFO  13:26:56,290 - #45 Broj
INFO  13:26:56,290 - #3 {
INFO  13:26:56,290 - #45 NULA
INFO  13:26:56,290 - #8 ,
INFO  13:26:56,290 - #45 TRI
INFO  13:26:56,290 - #12 =
INFO  13:26:56,290 - #42 3
INFO  13:26:56,290 - #8 ,
INFO  13:26:56,290 - #45 PET
INFO  13:26:56,290 - #12 =
INFO  13:26:56,290 - #42 5
INFO  13:26:56,290 - #4 }
INFO  13:26:56,290 - #16 class
INFO  13:26:56,290 - #45 B
INFO  13:26:56,290 - #39 extends
INFO  13:26:56,290 - #45 A
INFO  13:26:56,290 - #40 implements
INFO  13:26:56,290 - #45 I
INFO  13:26:56,290 - #3 {
INFO  13:26:56,290 - #45 int
INFO  13:26:56,290 - #45 i
INFO  13:26:56,290 - #5 ;
INFO  13:26:56,290 - #45 int
INFO  13:26:56,290 - #45 x
INFO  13:26:56,290 - #25 [
INFO  13:26:56,290 - #34 ]
INFO  13:26:56,290 - #5 ;
INFO  13:26:56,290 - #3 {
INFO  13:26:56,290 - #45 int
INFO  13:26:56,290 - #45 getValue
INFO  13:26:56,290 - #6 (
INFO  13:26:56,290 - #45 int
INFO  13:26:56,306 - #45 a
INFO  13:26:56,306 - #7 )
INFO  13:26:56,306 - #45 int
INFO  13:26:56,306 - #45 b
INFO  13:26:56,306 - #5 ;
INFO  13:26:56,306 - #45 bool
INFO  13:26:56,306 - #45 c
INFO  13:26:56,306 - #5 ;
INFO  13:26:56,306 - #3 {
INFO  13:26:56,306 - #10 return
INFO  13:26:56,306 - #42 0
INFO  13:26:56,306 - #5 ;
INFO  13:26:56,322 - #4 }
INFO  13:26:56,322 - #13 void
INFO  13:26:56,322 - #45 m
INFO  13:26:56,322 - #6 (
INFO  13:26:56,322 - #7 )
INFO  13:26:56,322 - #3 {
INFO  13:26:56,322 - #4 }
INFO  13:26:56,322 - #4 }
INFO  13:26:56,322 - #4 }
INFO  13:26:56,322 - #16 class
INFO  13:26:56,322 - #45 C
INFO  13:26:56,322 - #39 extends
INFO  13:26:56,322 - #45 B
INFO  13:26:56,322 - #3 {
INFO  13:26:56,322 - #45 A
INFO  13:26:56,322 - #45 theA
INFO  13:26:56,322 - #5 ;
INFO  13:26:56,322 - #45 int
INFO  13:26:56,322 - #45 a
INFO  13:26:56,322 - #5 ;
INFO  13:26:56,322 - #4 }
INFO  13:26:56,322 - #3 {
INFO  13:26:56,322 - #13 void
INFO  13:26:56,322 - #45 main
INFO  13:26:56,322 - #6 (
INFO  13:26:56,322 - #45 int
INFO  13:26:56,337 - #45 x
INFO  13:26:56,337 - #7 )
INFO  13:26:56,337 - #45 A
INFO  13:26:56,337 - #45 a
INFO  13:26:56,337 - #5 ;
INFO  13:26:56,337 - #45 C
INFO  13:26:56,337 - #45 c
INFO  13:26:56,337 - #5 ;
INFO  13:26:56,337 - #45 int
INFO  13:26:56,337 - #45 i
INFO  13:26:56,337 - #5 ;
INFO  13:26:56,337 - #3 {
INFO  13:26:56,337 - #45 c
INFO  13:26:56,337 - #12 =
INFO  13:26:56,337 - #18 new
INFO  13:26:56,337 - #45 C
INFO  13:26:56,337 - #5 ;
INFO  13:26:56,337 - #45 c
INFO  13:26:56,337 - #15 .
INFO  13:26:56,337 - #45 theA
INFO  13:26:56,337 - #12 =
INFO  13:26:56,337 - #45 a
INFO  13:26:56,337 - #5 ;
INFO  13:26:56,337 - #45 c
INFO  13:26:56,337 - #15 .
INFO  13:26:56,337 - #45 x
INFO  13:26:56,337 - #12 =
INFO  13:26:56,337 - #18 new
INFO  13:26:56,337 - #45 int
INFO  13:26:56,337 - #25 [
INFO  13:26:56,337 - #42 5
INFO  13:26:56,337 - #34 ]
INFO  13:26:56,337 - #5 ;
INFO  13:26:56,337 - #45 x
INFO  13:26:56,337 - #12 =
INFO  13:26:56,337 - #18 new
INFO  13:26:56,337 - #45 int
INFO  13:26:56,337 - #25 [
INFO  13:26:56,337 - #45 Broj
INFO  13:26:56,337 - #15 .
INFO  13:26:56,337 - #45 TRI
INFO  13:26:56,337 - #34 ]
INFO  13:26:56,337 - #5 ;
INFO  13:26:56,337 - #26 read
INFO  13:26:56,337 - #6 (
INFO  13:26:56,337 - #45 c
INFO  13:26:56,337 - #15 .
INFO  13:26:56,337 - #45 i
INFO  13:26:56,337 - #7 )
INFO  13:26:56,337 - #5 ;
INFO  13:26:56,353 - #41 for
INFO  13:26:56,353 - #6 (
INFO  13:26:56,353 - #45 i
INFO  13:26:56,353 - #12 =
INFO  13:26:56,353 - #42 0
INFO  13:26:56,353 - #5 ;
INFO  13:26:56,353 - #45 i
INFO  13:26:56,353 - #19 <
INFO  13:26:56,353 - #42 5
INFO  13:26:56,353 - #5 ;
INFO  13:26:56,353 - #45 i
INFO  13:26:56,353 - #38 ++
INFO  13:26:56,353 - #7 )
INFO  13:26:56,353 - #3 {
INFO  13:26:56,353 - #26 read
INFO  13:26:56,353 - #6 (
INFO  13:26:56,353 - #45 c
INFO  13:26:56,353 - #15 .
INFO  13:26:56,353 - #45 x
INFO  13:26:56,353 - #25 [
INFO  13:26:56,353 - #45 i
INFO  13:26:56,353 - #34 ]
INFO  13:26:56,353 - #7 )
INFO  13:26:56,353 - #5 ;
INFO  13:26:56,353 - #26 read
INFO  13:26:56,353 - #6 (
INFO  13:26:56,353 - #45 c
INFO  13:26:56,353 - #15 .
INFO  13:26:56,353 - #45 theA
INFO  13:26:56,353 - #15 .
INFO  13:26:56,353 - #45 x
INFO  13:26:56,353 - #25 [
INFO  13:26:56,353 - #45 i
INFO  13:26:56,353 - #34 ]
INFO  13:26:56,353 - #7 )
INFO  13:26:56,353 - #5 ;
INFO  13:26:56,353 - #46 if
INFO  13:26:56,353 - #6 (
INFO  13:26:56,368 - #42 1
INFO  13:26:56,368 - #32 >
INFO  13:26:56,368 - #42 2
INFO  13:26:56,368 - #7 )
INFO  13:26:56,368 - #26 read
INFO  13:26:56,368 - #6 (
INFO  13:26:56,368 - #45 a
INFO  13:26:56,368 - #7 )
INFO  13:26:56,368 - #5 ;
INFO  13:26:56,368 - #47 else
INFO  13:26:56,368 - #26 read
INFO  13:26:56,368 - #6 (
INFO  13:26:56,368 - #45 b
INFO  13:26:56,368 - #7 )
INFO  13:26:56,368 - #5 ;
INFO  13:26:56,368 - #4 }
INFO  13:26:56,368 - #9 print
INFO  13:26:56,384 - #6 (
INFO  13:26:56,384 - #45 c
INFO  13:26:56,384 - #15 .
INFO  13:26:56,384 - #45 getValue
INFO  13:26:56,384 - #6 (
INFO  13:26:56,384 - #45 c
INFO  13:26:56,384 - #15 .
INFO  13:26:56,384 - #45 theA
INFO  13:26:56,384 - #15 .
INFO  13:26:56,384 - #45 x
INFO  13:26:56,384 - #25 [
INFO  13:26:56,384 - #45 Broj
INFO  13:26:56,384 - #15 .
INFO  13:26:56,384 - #45 NULA
INFO  13:26:56,384 - #34 ]
INFO  13:26:56,384 - #7 )
INFO  13:26:56,384 - #7 )
INFO  13:26:56,384 - #5 ;
INFO  13:26:56,384 - #45 c
INFO  13:26:56,384 - #15 .
INFO  13:26:56,384 - #45 m
INFO  13:26:56,384 - #6 (
INFO  13:26:56,384 - #7 )
INFO  13:26:56,384 - #5 ;
INFO  13:26:56,384 - #4 }
INFO  13:26:56,384 - #4 }
INFO  13:26:56,431 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  13:26:56,431 - ===================================
INFO  13:26:56,431 - INFO:  Pocetak programa Program na liniji 1
INFO  13:26:58,821 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  13:26:58,821 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  13:26:58,829 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  13:26:58,829 - INFO:  Definisan interfejs I na liniji 4
INFO  13:26:59,627 - INFO:  Deklarisan niz x na liniji 5
INFO  13:26:59,627 - INFO:  Deklarisan niz y na liniji 5
INFO  13:26:59,627 - INFO:  Definisana klasa A na liniji 5
INFO  13:26:59,627 - INFO:  Definisan enum tip Broj na liniji 7
INFO  13:27:02,782 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  13:27:03,804 - INFO:  Deklarisan niz x na liniji 9
INFO  13:27:05,159 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  13:27:05,354 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  13:27:05,510 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  13:27:06,380 - INFO:  Deklarisan metod getValue na liniji 11
INFO  13:27:06,394 - INFO:  Deklarisan metod m na liniji 15
INFO  13:27:06,394 - INFO:  Definisana klasa B na liniji 8
INFO  13:27:07,724 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  13:27:08,341 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  13:27:08,341 - INFO:  Definisana klasa C na liniji 18
INFO  13:27:08,700 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  13:27:08,872 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  13:27:09,076 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  13:27:09,263 - INFO:  Deklarisana promenljiva i na liniji 20
INFO  13:27:49,041 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  13:27:49,244 - #2 program
INFO  13:27:49,244 - #45 Program
INFO  13:27:49,244 - #45 int
INFO  13:27:49,244 - #45 x
INFO  13:27:49,244 - #8 ,
INFO  13:27:49,259 - #45 y
INFO  13:27:49,259 - #5 ;
INFO  13:27:49,259 - #14 interface
INFO  13:27:49,259 - #45 I
INFO  13:27:49,259 - #3 {
INFO  13:27:49,259 - #13 void
INFO  13:27:49,259 - #45 m
INFO  13:27:49,259 - #6 (
INFO  13:27:49,259 - #7 )
INFO  13:27:49,259 - #5 ;
INFO  13:27:49,259 - #4 }
INFO  13:27:49,259 - #16 class
INFO  13:27:49,259 - #45 A
INFO  13:27:49,259 - #3 {
INFO  13:27:49,259 - #45 int
INFO  13:27:49,259 - #45 x
INFO  13:27:49,259 - #25 [
INFO  13:27:49,259 - #34 ]
INFO  13:27:49,259 - #8 ,
INFO  13:27:49,259 - #45 y
INFO  13:27:49,259 - #25 [
INFO  13:27:49,259 - #34 ]
INFO  13:27:49,259 - #5 ;
INFO  13:27:49,259 - #4 }
INFO  13:27:49,259 - #29 enum
INFO  13:27:49,259 - #45 Broj
INFO  13:27:49,259 - #3 {
INFO  13:27:49,259 - #45 NULA
INFO  13:27:49,259 - #8 ,
INFO  13:27:49,259 - #45 TRI
INFO  13:27:49,259 - #12 =
INFO  13:27:49,259 - #42 3
INFO  13:27:49,275 - #8 ,
INFO  13:27:49,275 - #45 PET
INFO  13:27:49,275 - #12 =
INFO  13:27:49,275 - #42 5
INFO  13:27:49,275 - #4 }
INFO  13:27:49,275 - #16 class
INFO  13:27:49,275 - #45 B
INFO  13:27:49,275 - #39 extends
INFO  13:27:49,275 - #45 A
INFO  13:27:49,275 - #40 implements
INFO  13:27:49,275 - #45 I
INFO  13:27:49,275 - #3 {
INFO  13:27:49,275 - #45 int
INFO  13:27:49,275 - #45 i
INFO  13:27:49,275 - #5 ;
INFO  13:27:49,275 - #45 int
INFO  13:27:49,275 - #45 x
INFO  13:27:49,275 - #25 [
INFO  13:27:49,275 - #34 ]
INFO  13:27:49,275 - #5 ;
INFO  13:27:49,275 - #3 {
INFO  13:27:49,275 - #45 int
INFO  13:27:49,275 - #45 getValue
INFO  13:27:49,275 - #6 (
INFO  13:27:49,275 - #45 int
INFO  13:27:49,275 - #45 a
INFO  13:27:49,275 - #7 )
INFO  13:27:49,275 - #45 int
INFO  13:27:49,275 - #45 b
INFO  13:27:49,275 - #5 ;
INFO  13:27:49,275 - #45 bool
INFO  13:27:49,275 - #45 c
INFO  13:27:49,275 - #5 ;
INFO  13:27:49,275 - #3 {
INFO  13:27:49,275 - #10 return
INFO  13:27:49,275 - #42 0
INFO  13:27:49,275 - #5 ;
INFO  13:27:49,275 - #4 }
INFO  13:27:49,275 - #13 void
INFO  13:27:49,275 - #45 m
INFO  13:27:49,275 - #6 (
INFO  13:27:49,275 - #7 )
INFO  13:27:49,275 - #3 {
INFO  13:27:49,275 - #4 }
INFO  13:27:49,275 - #4 }
INFO  13:27:49,275 - #4 }
INFO  13:27:49,275 - #16 class
INFO  13:27:49,291 - #45 C
INFO  13:27:49,291 - #39 extends
INFO  13:27:49,291 - #45 B
INFO  13:27:49,291 - #3 {
INFO  13:27:49,291 - #45 A
INFO  13:27:49,291 - #45 theA
INFO  13:27:49,291 - #5 ;
INFO  13:27:49,291 - #45 int
INFO  13:27:49,291 - #45 a
INFO  13:27:49,291 - #5 ;
INFO  13:27:49,291 - #4 }
INFO  13:27:49,291 - #3 {
INFO  13:27:49,291 - #13 void
INFO  13:27:49,291 - #45 main
INFO  13:27:49,291 - #6 (
INFO  13:27:49,291 - #45 int
INFO  13:27:49,291 - #45 x
INFO  13:27:49,291 - #7 )
INFO  13:27:49,291 - #45 A
INFO  13:27:49,291 - #45 a
INFO  13:27:49,291 - #5 ;
INFO  13:27:49,291 - #45 C
INFO  13:27:49,291 - #45 c
INFO  13:27:49,291 - #5 ;
INFO  13:27:49,291 - #45 int
INFO  13:27:49,291 - #45 i
INFO  13:27:49,291 - #5 ;
INFO  13:27:49,291 - #3 {
INFO  13:27:49,291 - #45 c
INFO  13:27:49,291 - #12 =
INFO  13:27:49,291 - #18 new
INFO  13:27:49,291 - #45 C
INFO  13:27:49,291 - #5 ;
INFO  13:27:49,291 - #45 c
INFO  13:27:49,291 - #15 .
INFO  13:27:49,291 - #45 theA
INFO  13:27:49,291 - #12 =
INFO  13:27:49,291 - #45 a
INFO  13:27:49,291 - #5 ;
INFO  13:27:49,306 - #45 c
INFO  13:27:49,306 - #15 .
INFO  13:27:49,306 - #45 x
INFO  13:27:49,306 - #12 =
INFO  13:27:49,306 - #18 new
INFO  13:27:49,306 - #45 int
INFO  13:27:49,306 - #25 [
INFO  13:27:49,306 - #42 5
INFO  13:27:49,306 - #34 ]
INFO  13:27:49,306 - #5 ;
INFO  13:27:49,306 - #45 x
INFO  13:27:49,306 - #12 =
INFO  13:27:49,306 - #18 new
INFO  13:27:49,306 - #45 int
INFO  13:27:49,306 - #25 [
INFO  13:27:49,306 - #45 Broj
INFO  13:27:49,306 - #15 .
INFO  13:27:49,306 - #45 TRI
INFO  13:27:49,306 - #34 ]
INFO  13:27:49,306 - #5 ;
INFO  13:27:49,306 - #26 read
INFO  13:27:49,306 - #6 (
INFO  13:27:49,306 - #45 c
INFO  13:27:49,306 - #15 .
INFO  13:27:49,306 - #45 i
INFO  13:27:49,306 - #7 )
INFO  13:27:49,306 - #5 ;
INFO  13:27:49,306 - #41 for
INFO  13:27:49,306 - #6 (
INFO  13:27:49,306 - #45 i
INFO  13:27:49,306 - #12 =
INFO  13:27:49,306 - #42 0
INFO  13:27:49,306 - #5 ;
INFO  13:27:49,306 - #45 i
INFO  13:27:49,306 - #19 <
INFO  13:27:49,306 - #42 5
INFO  13:27:49,322 - #5 ;
INFO  13:27:49,322 - #45 i
INFO  13:27:49,322 - #38 ++
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #3 {
INFO  13:27:49,322 - #26 read
INFO  13:27:49,322 - #6 (
INFO  13:27:49,322 - #45 c
INFO  13:27:49,322 - #15 .
INFO  13:27:49,322 - #45 x
INFO  13:27:49,322 - #25 [
INFO  13:27:49,322 - #45 i
INFO  13:27:49,322 - #34 ]
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #5 ;
INFO  13:27:49,322 - #26 read
INFO  13:27:49,322 - #6 (
INFO  13:27:49,322 - #45 c
INFO  13:27:49,322 - #15 .
INFO  13:27:49,322 - #45 theA
INFO  13:27:49,322 - #15 .
INFO  13:27:49,322 - #45 x
INFO  13:27:49,322 - #25 [
INFO  13:27:49,322 - #45 i
INFO  13:27:49,322 - #34 ]
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #5 ;
INFO  13:27:49,322 - #46 if
INFO  13:27:49,322 - #6 (
INFO  13:27:49,322 - #42 1
INFO  13:27:49,322 - #32 >
INFO  13:27:49,322 - #42 2
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #26 read
INFO  13:27:49,322 - #6 (
INFO  13:27:49,322 - #45 a
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #5 ;
INFO  13:27:49,322 - #47 else
INFO  13:27:49,322 - #26 read
INFO  13:27:49,322 - #6 (
INFO  13:27:49,322 - #45 b
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #5 ;
INFO  13:27:49,322 - #4 }
INFO  13:27:49,322 - #9 print
INFO  13:27:49,322 - #6 (
INFO  13:27:49,322 - #45 c
INFO  13:27:49,322 - #15 .
INFO  13:27:49,322 - #45 getValue
INFO  13:27:49,322 - #6 (
INFO  13:27:49,322 - #45 c
INFO  13:27:49,322 - #15 .
INFO  13:27:49,322 - #45 theA
INFO  13:27:49,322 - #15 .
INFO  13:27:49,322 - #45 x
INFO  13:27:49,322 - #25 [
INFO  13:27:49,322 - #45 Broj
INFO  13:27:49,322 - #15 .
INFO  13:27:49,322 - #45 NULA
INFO  13:27:49,322 - #34 ]
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #5 ;
INFO  13:27:49,322 - #45 c
INFO  13:27:49,322 - #15 .
INFO  13:27:49,322 - #45 m
INFO  13:27:49,322 - #6 (
INFO  13:27:49,322 - #7 )
INFO  13:27:49,322 - #5 ;
INFO  13:27:49,322 - #4 }
INFO  13:27:49,322 - #4 }
INFO  13:27:49,369 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  13:27:49,403 - ===================================
INFO  13:27:49,403 - INFO:  Pocetak programa Program na liniji 1
INFO  13:27:53,043 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  13:27:53,057 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  13:27:53,057 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  13:27:53,057 - INFO:  Definisan interfejs I na liniji 4
INFO  13:28:01,056 - INFO:  Deklarisan niz x na liniji 5
INFO  13:28:01,069 - INFO:  Deklarisan niz y na liniji 5
INFO  13:28:01,069 - INFO:  Definisana klasa A na liniji 5
INFO  13:28:01,069 - INFO:  Definisan enum tip Broj na liniji 7
INFO  13:28:03,399 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  13:28:04,102 - INFO:  Deklarisan niz x na liniji 9
INFO  13:28:06,226 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  13:28:06,830 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  13:28:07,611 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  13:28:12,726 - INFO:  Deklarisan metod getValue na liniji 11
INFO  13:28:12,735 - INFO:  Deklarisan metod m na liniji 15
INFO  13:28:12,735 - INFO:  Definisana klasa B na liniji 8
INFO  13:28:20,377 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  13:28:21,084 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  13:28:21,084 - INFO:  Definisana klasa C na liniji 18
INFO  13:28:44,203 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  13:28:46,622 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  13:29:06,251 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  13:29:33,437 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 13:32:35,852 - ERROR: Odgovarajuci tip mora biti int na liniji 24		<--------------- ERROR 
INFO  13:38:07,155 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  13:38:07,342 - #2 program
INFO  13:38:07,342 - #45 Program
INFO  13:38:07,342 - #45 int
INFO  13:38:07,342 - #45 x
INFO  13:38:07,342 - #8 ,
INFO  13:38:07,358 - #45 y
INFO  13:38:07,358 - #5 ;
INFO  13:38:07,358 - #14 interface
INFO  13:38:07,358 - #45 I
INFO  13:38:07,358 - #3 {
INFO  13:38:07,358 - #13 void
INFO  13:38:07,358 - #45 m
INFO  13:38:07,358 - #6 (
INFO  13:38:07,358 - #7 )
INFO  13:38:07,358 - #5 ;
INFO  13:38:07,358 - #4 }
INFO  13:38:07,358 - #16 class
INFO  13:38:07,358 - #45 A
INFO  13:38:07,358 - #3 {
INFO  13:38:07,358 - #45 int
INFO  13:38:07,358 - #45 x
INFO  13:38:07,358 - #25 [
INFO  13:38:07,358 - #34 ]
INFO  13:38:07,358 - #8 ,
INFO  13:38:07,358 - #45 y
INFO  13:38:07,358 - #25 [
INFO  13:38:07,358 - #34 ]
INFO  13:38:07,358 - #5 ;
INFO  13:38:07,358 - #4 }
INFO  13:38:07,373 - #29 enum
INFO  13:38:07,373 - #45 Broj
INFO  13:38:07,373 - #3 {
INFO  13:38:07,373 - #45 NULA
INFO  13:38:07,373 - #8 ,
INFO  13:38:07,373 - #45 TRI
INFO  13:38:07,373 - #12 =
INFO  13:38:07,373 - #42 3
INFO  13:38:07,373 - #8 ,
INFO  13:38:07,373 - #45 PET
INFO  13:38:07,373 - #12 =
INFO  13:38:07,373 - #42 5
INFO  13:38:07,373 - #4 }
INFO  13:38:07,373 - #16 class
INFO  13:38:07,373 - #45 B
INFO  13:38:07,373 - #39 extends
INFO  13:38:07,373 - #45 A
INFO  13:38:07,373 - #40 implements
INFO  13:38:07,373 - #45 I
INFO  13:38:07,373 - #3 {
INFO  13:38:07,373 - #45 int
INFO  13:38:07,373 - #45 i
INFO  13:38:07,373 - #5 ;
INFO  13:38:07,373 - #45 int
INFO  13:38:07,373 - #45 x
INFO  13:38:07,373 - #25 [
INFO  13:38:07,373 - #34 ]
INFO  13:38:07,373 - #5 ;
INFO  13:38:07,373 - #3 {
INFO  13:38:07,373 - #45 int
INFO  13:38:07,373 - #45 getValue
INFO  13:38:07,373 - #6 (
INFO  13:38:07,373 - #45 int
INFO  13:38:07,373 - #45 a
INFO  13:38:07,373 - #7 )
INFO  13:38:07,373 - #45 int
INFO  13:38:07,373 - #45 b
INFO  13:38:07,373 - #5 ;
INFO  13:38:07,373 - #45 bool
INFO  13:38:07,373 - #45 c
INFO  13:38:07,373 - #5 ;
INFO  13:38:07,373 - #3 {
INFO  13:38:07,373 - #10 return
INFO  13:38:07,373 - #42 0
INFO  13:38:07,373 - #5 ;
INFO  13:38:07,389 - #4 }
INFO  13:38:07,389 - #13 void
INFO  13:38:07,389 - #45 m
INFO  13:38:07,389 - #6 (
INFO  13:38:07,389 - #7 )
INFO  13:38:07,389 - #3 {
INFO  13:38:07,389 - #4 }
INFO  13:38:07,389 - #4 }
INFO  13:38:07,389 - #4 }
INFO  13:38:07,389 - #16 class
INFO  13:38:07,389 - #45 C
INFO  13:38:07,389 - #39 extends
INFO  13:38:07,389 - #45 B
INFO  13:38:07,389 - #3 {
INFO  13:38:07,389 - #45 A
INFO  13:38:07,389 - #45 theA
INFO  13:38:07,389 - #5 ;
INFO  13:38:07,389 - #45 int
INFO  13:38:07,389 - #45 a
INFO  13:38:07,389 - #5 ;
INFO  13:38:07,389 - #4 }
INFO  13:38:07,389 - #3 {
INFO  13:38:07,389 - #13 void
INFO  13:38:07,389 - #45 main
INFO  13:38:07,389 - #6 (
INFO  13:38:07,389 - #45 int
INFO  13:38:07,389 - #45 x
INFO  13:38:07,389 - #7 )
INFO  13:38:07,389 - #45 A
INFO  13:38:07,389 - #45 a
INFO  13:38:07,389 - #5 ;
INFO  13:38:07,389 - #45 C
INFO  13:38:07,389 - #45 c
INFO  13:38:07,389 - #5 ;
INFO  13:38:07,389 - #45 int
INFO  13:38:07,389 - #45 i
INFO  13:38:07,389 - #5 ;
INFO  13:38:07,389 - #3 {
INFO  13:38:07,389 - #45 c
INFO  13:38:07,389 - #12 =
INFO  13:38:07,389 - #18 new
INFO  13:38:07,405 - #45 C
INFO  13:38:07,405 - #5 ;
INFO  13:38:07,405 - #45 c
INFO  13:38:07,405 - #15 .
INFO  13:38:07,405 - #45 theA
INFO  13:38:07,405 - #12 =
INFO  13:38:07,405 - #45 a
INFO  13:38:07,405 - #5 ;
INFO  13:38:07,405 - #45 c
INFO  13:38:07,405 - #15 .
INFO  13:38:07,405 - #45 x
INFO  13:38:07,405 - #12 =
INFO  13:38:07,405 - #18 new
INFO  13:38:07,405 - #45 int
INFO  13:38:07,405 - #25 [
INFO  13:38:07,405 - #42 5
INFO  13:38:07,405 - #34 ]
INFO  13:38:07,405 - #5 ;
INFO  13:38:07,405 - #45 x
INFO  13:38:07,405 - #12 =
INFO  13:38:07,405 - #18 new
INFO  13:38:07,405 - #45 int
INFO  13:38:07,405 - #25 [
INFO  13:38:07,405 - #45 Broj
INFO  13:38:07,405 - #15 .
INFO  13:38:07,405 - #45 TRI
INFO  13:38:07,405 - #34 ]
INFO  13:38:07,405 - #5 ;
INFO  13:38:07,405 - #26 read
INFO  13:38:07,405 - #6 (
INFO  13:38:07,405 - #45 c
INFO  13:38:07,405 - #15 .
INFO  13:38:07,405 - #45 i
INFO  13:38:07,405 - #7 )
INFO  13:38:07,405 - #5 ;
INFO  13:38:07,405 - #41 for
INFO  13:38:07,405 - #6 (
INFO  13:38:07,405 - #45 i
INFO  13:38:07,405 - #12 =
INFO  13:38:07,405 - #42 0
INFO  13:38:07,405 - #5 ;
INFO  13:38:07,405 - #45 i
INFO  13:38:07,405 - #19 <
INFO  13:38:07,405 - #42 5
INFO  13:38:07,405 - #5 ;
INFO  13:38:07,420 - #45 i
INFO  13:38:07,420 - #38 ++
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #3 {
INFO  13:38:07,420 - #26 read
INFO  13:38:07,420 - #6 (
INFO  13:38:07,420 - #45 c
INFO  13:38:07,420 - #15 .
INFO  13:38:07,420 - #45 x
INFO  13:38:07,420 - #25 [
INFO  13:38:07,420 - #45 i
INFO  13:38:07,420 - #34 ]
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #5 ;
INFO  13:38:07,420 - #26 read
INFO  13:38:07,420 - #6 (
INFO  13:38:07,420 - #45 c
INFO  13:38:07,420 - #15 .
INFO  13:38:07,420 - #45 theA
INFO  13:38:07,420 - #15 .
INFO  13:38:07,420 - #45 x
INFO  13:38:07,420 - #25 [
INFO  13:38:07,420 - #45 i
INFO  13:38:07,420 - #34 ]
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #5 ;
INFO  13:38:07,420 - #46 if
INFO  13:38:07,420 - #6 (
INFO  13:38:07,420 - #42 1
INFO  13:38:07,420 - #32 >
INFO  13:38:07,420 - #42 2
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #26 read
INFO  13:38:07,420 - #6 (
INFO  13:38:07,420 - #45 a
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #5 ;
INFO  13:38:07,420 - #47 else
INFO  13:38:07,420 - #26 read
INFO  13:38:07,420 - #6 (
INFO  13:38:07,420 - #45 b
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #5 ;
INFO  13:38:07,420 - #4 }
INFO  13:38:07,420 - #9 print
INFO  13:38:07,420 - #6 (
INFO  13:38:07,420 - #45 c
INFO  13:38:07,420 - #15 .
INFO  13:38:07,420 - #45 getValue
INFO  13:38:07,420 - #6 (
INFO  13:38:07,420 - #45 c
INFO  13:38:07,420 - #15 .
INFO  13:38:07,420 - #45 theA
INFO  13:38:07,420 - #15 .
INFO  13:38:07,420 - #45 x
INFO  13:38:07,420 - #25 [
INFO  13:38:07,420 - #45 Broj
INFO  13:38:07,420 - #15 .
INFO  13:38:07,420 - #45 NULA
INFO  13:38:07,420 - #34 ]
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #5 ;
INFO  13:38:07,420 - #45 c
INFO  13:38:07,420 - #15 .
INFO  13:38:07,420 - #45 m
INFO  13:38:07,420 - #6 (
INFO  13:38:07,420 - #7 )
INFO  13:38:07,420 - #5 ;
INFO  13:38:07,420 - #4 }
INFO  13:38:07,420 - #4 }
INFO  13:38:07,467 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  13:38:07,467 - ===================================
INFO  13:38:07,467 - INFO:  Pocetak programa Program na liniji 1
INFO  13:38:12,232 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  13:38:12,244 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  13:38:12,244 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  13:38:12,245 - INFO:  Definisan interfejs I na liniji 4
INFO  13:38:12,997 - INFO:  Deklarisan niz x na liniji 5
INFO  13:38:12,997 - INFO:  Deklarisan niz y na liniji 5
INFO  13:38:12,997 - INFO:  Definisana klasa A na liniji 5
INFO  13:38:12,997 - INFO:  Definisan enum tip Broj na liniji 7
INFO  13:38:14,949 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  13:38:15,534 - INFO:  Deklarisan niz x na liniji 9
INFO  13:38:16,736 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  13:38:17,451 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  13:38:18,107 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  13:38:37,779 - INFO:  Deklarisan metod getValue na liniji 11
INFO  13:38:40,237 - INFO:  Deklarisan metod m na liniji 15
INFO  13:38:43,044 - INFO:  Definisana klasa B na liniji 8
INFO  13:38:55,897 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  13:38:57,540 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  13:38:57,540 - INFO:  Definisana klasa C na liniji 18
INFO  13:39:27,398 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  13:39:28,956 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  13:39:31,765 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  13:39:33,918 - INFO:  Deklarisana promenljiva i na liniji 20
INFO  13:42:16,763 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  13:42:16,982 - #2 program
INFO  13:42:16,982 - #45 Program
INFO  13:42:16,982 - #45 int
INFO  13:42:16,982 - #45 x
INFO  13:42:16,998 - #8 ,
INFO  13:42:16,998 - #45 y
INFO  13:42:16,998 - #5 ;
INFO  13:42:16,998 - #14 interface
INFO  13:42:16,998 - #45 I
INFO  13:42:16,998 - #3 {
INFO  13:42:16,998 - #13 void
INFO  13:42:16,998 - #45 m
INFO  13:42:16,998 - #6 (
INFO  13:42:16,998 - #7 )
INFO  13:42:16,998 - #5 ;
INFO  13:42:16,998 - #4 }
INFO  13:42:16,998 - #16 class
INFO  13:42:16,998 - #45 A
INFO  13:42:16,998 - #3 {
INFO  13:42:17,013 - #45 int
INFO  13:42:17,013 - #45 x
INFO  13:42:17,013 - #25 [
INFO  13:42:17,013 - #34 ]
INFO  13:42:17,013 - #8 ,
INFO  13:42:17,013 - #45 y
INFO  13:42:17,013 - #25 [
INFO  13:42:17,013 - #34 ]
INFO  13:42:17,013 - #5 ;
INFO  13:42:17,013 - #4 }
INFO  13:42:17,013 - #29 enum
INFO  13:42:17,029 - #45 Broj
INFO  13:42:17,029 - #3 {
INFO  13:42:17,029 - #45 NULA
INFO  13:42:17,029 - #8 ,
INFO  13:42:17,029 - #45 TRI
INFO  13:42:17,029 - #12 =
INFO  13:42:17,029 - #42 3
INFO  13:42:17,029 - #8 ,
INFO  13:42:17,029 - #45 PET
INFO  13:42:17,029 - #12 =
INFO  13:42:17,029 - #42 5
INFO  13:42:17,029 - #4 }
INFO  13:42:17,029 - #16 class
INFO  13:42:17,029 - #45 B
INFO  13:42:17,029 - #39 extends
INFO  13:42:17,029 - #45 A
INFO  13:42:17,029 - #40 implements
INFO  13:42:17,029 - #45 I
INFO  13:42:17,029 - #3 {
INFO  13:42:17,029 - #45 int
INFO  13:42:17,029 - #45 i
INFO  13:42:17,029 - #5 ;
INFO  13:42:17,029 - #45 int
INFO  13:42:17,029 - #45 x
INFO  13:42:17,029 - #25 [
INFO  13:42:17,029 - #34 ]
INFO  13:42:17,029 - #5 ;
INFO  13:42:17,029 - #3 {
INFO  13:42:17,029 - #45 int
INFO  13:42:17,029 - #45 getValue
INFO  13:42:17,029 - #6 (
INFO  13:42:17,029 - #45 int
INFO  13:42:17,029 - #45 a
INFO  13:42:17,029 - #7 )
INFO  13:42:17,029 - #45 int
INFO  13:42:17,029 - #45 b
INFO  13:42:17,029 - #5 ;
INFO  13:42:17,029 - #45 bool
INFO  13:42:17,029 - #45 c
INFO  13:42:17,029 - #5 ;
INFO  13:42:17,029 - #3 {
INFO  13:42:17,029 - #10 return
INFO  13:42:17,029 - #42 0
INFO  13:42:17,029 - #5 ;
INFO  13:42:17,045 - #4 }
INFO  13:42:17,060 - #13 void
INFO  13:42:17,061 - #45 m
INFO  13:42:17,061 - #6 (
INFO  13:42:17,061 - #7 )
INFO  13:42:17,061 - #3 {
INFO  13:42:17,061 - #4 }
INFO  13:42:17,061 - #4 }
INFO  13:42:17,062 - #4 }
INFO  13:42:17,062 - #16 class
INFO  13:42:17,062 - #45 C
INFO  13:42:17,062 - #39 extends
INFO  13:42:17,062 - #45 B
INFO  13:42:17,062 - #3 {
INFO  13:42:17,062 - #45 A
INFO  13:42:17,062 - #45 theA
INFO  13:42:17,062 - #5 ;
INFO  13:42:17,063 - #45 int
INFO  13:42:17,063 - #45 a
INFO  13:42:17,063 - #5 ;
INFO  13:42:17,063 - #4 }
INFO  13:42:17,063 - #3 {
INFO  13:42:17,063 - #13 void
INFO  13:42:17,063 - #45 main
INFO  13:42:17,063 - #6 (
INFO  13:42:17,063 - #45 int
INFO  13:42:17,063 - #45 x
INFO  13:42:17,063 - #7 )
INFO  13:42:17,063 - #45 A
INFO  13:42:17,063 - #45 a
INFO  13:42:17,063 - #5 ;
INFO  13:42:17,063 - #45 C
INFO  13:42:17,063 - #45 c
INFO  13:42:17,063 - #5 ;
INFO  13:42:17,063 - #45 int
INFO  13:42:17,063 - #45 i
INFO  13:42:17,063 - #5 ;
INFO  13:42:17,063 - #3 {
INFO  13:42:17,063 - #45 c
INFO  13:42:17,063 - #12 =
INFO  13:42:17,063 - #18 new
INFO  13:42:17,063 - #45 C
INFO  13:42:17,063 - #5 ;
INFO  13:42:17,063 - #45 c
INFO  13:42:17,063 - #15 .
INFO  13:42:17,063 - #45 theA
INFO  13:42:17,063 - #12 =
INFO  13:42:17,063 - #45 a
INFO  13:42:17,079 - #5 ;
INFO  13:42:17,079 - #45 c
INFO  13:42:17,079 - #15 .
INFO  13:42:17,079 - #45 x
INFO  13:42:17,079 - #12 =
INFO  13:42:17,079 - #18 new
INFO  13:42:17,079 - #45 int
INFO  13:42:17,079 - #25 [
INFO  13:42:17,079 - #42 5
INFO  13:42:17,079 - #34 ]
INFO  13:42:17,079 - #5 ;
INFO  13:42:17,079 - #45 x
INFO  13:42:17,079 - #12 =
INFO  13:42:17,079 - #18 new
INFO  13:42:17,079 - #45 int
INFO  13:42:17,079 - #25 [
INFO  13:42:17,079 - #45 Broj
INFO  13:42:17,079 - #15 .
INFO  13:42:17,079 - #45 TRI
INFO  13:42:17,079 - #34 ]
INFO  13:42:17,079 - #5 ;
INFO  13:42:17,079 - #26 read
INFO  13:42:17,079 - #6 (
INFO  13:42:17,079 - #45 c
INFO  13:42:17,079 - #15 .
INFO  13:42:17,079 - #45 i
INFO  13:42:17,079 - #7 )
INFO  13:42:17,079 - #5 ;
INFO  13:42:17,079 - #41 for
INFO  13:42:17,079 - #6 (
INFO  13:42:17,079 - #45 i
INFO  13:42:17,079 - #12 =
INFO  13:42:17,079 - #42 0
INFO  13:42:17,079 - #5 ;
INFO  13:42:17,079 - #45 i
INFO  13:42:17,079 - #19 <
INFO  13:42:17,079 - #42 5
INFO  13:42:17,079 - #5 ;
INFO  13:42:17,079 - #45 i
INFO  13:42:17,079 - #38 ++
INFO  13:42:17,079 - #7 )
INFO  13:42:17,094 - #3 {
INFO  13:42:17,094 - #26 read
INFO  13:42:17,094 - #6 (
INFO  13:42:17,094 - #45 c
INFO  13:42:17,094 - #15 .
INFO  13:42:17,094 - #45 x
INFO  13:42:17,094 - #25 [
INFO  13:42:17,094 - #45 i
INFO  13:42:17,094 - #34 ]
INFO  13:42:17,094 - #7 )
INFO  13:42:17,094 - #5 ;
INFO  13:42:17,094 - #26 read
INFO  13:42:17,094 - #6 (
INFO  13:42:17,094 - #45 c
INFO  13:42:17,094 - #15 .
INFO  13:42:17,094 - #45 theA
INFO  13:42:17,094 - #15 .
INFO  13:42:17,094 - #45 x
INFO  13:42:17,094 - #25 [
INFO  13:42:17,094 - #45 i
INFO  13:42:17,094 - #34 ]
INFO  13:42:17,094 - #7 )
INFO  13:42:17,094 - #5 ;
INFO  13:42:17,094 - #46 if
INFO  13:42:17,094 - #6 (
INFO  13:42:17,094 - #42 1
INFO  13:42:17,094 - #32 >
INFO  13:42:17,094 - #42 2
INFO  13:42:17,094 - #7 )
INFO  13:42:17,094 - #26 read
INFO  13:42:17,094 - #6 (
INFO  13:42:17,094 - #45 a
INFO  13:42:17,094 - #7 )
INFO  13:42:17,094 - #5 ;
INFO  13:42:17,094 - #47 else
INFO  13:42:17,094 - #26 read
INFO  13:42:17,094 - #6 (
INFO  13:42:17,094 - #45 b
INFO  13:42:17,094 - #7 )
INFO  13:42:17,094 - #5 ;
INFO  13:42:17,094 - #4 }
INFO  13:42:17,094 - #9 print
INFO  13:42:17,094 - #6 (
INFO  13:42:17,094 - #45 c
INFO  13:42:17,094 - #15 .
INFO  13:42:17,094 - #45 getValue
INFO  13:42:17,094 - #6 (
INFO  13:42:17,094 - #45 c
INFO  13:42:17,094 - #15 .
INFO  13:42:17,094 - #45 theA
INFO  13:42:17,094 - #15 .
INFO  13:42:17,094 - #45 x
INFO  13:42:17,094 - #25 [
INFO  13:42:17,094 - #45 Broj
INFO  13:42:17,094 - #15 .
INFO  13:42:17,094 - #45 NULA
INFO  13:42:17,094 - #34 ]
INFO  13:42:17,094 - #7 )
INFO  13:42:17,094 - #7 )
INFO  13:42:17,094 - #5 ;
INFO  13:42:17,094 - #45 c
INFO  13:42:17,094 - #15 .
INFO  13:42:17,094 - #45 m
INFO  13:42:17,094 - #6 (
INFO  13:42:17,094 - #7 )
INFO  13:42:17,094 - #5 ;
INFO  13:42:17,094 - #4 }
INFO  13:42:17,094 - #4 }
INFO  13:42:17,141 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  13:42:17,141 - ===================================
INFO  13:42:17,141 - INFO:  Pocetak programa Program na liniji 1
INFO  13:42:25,702 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  13:42:25,716 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  13:42:25,716 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  13:42:25,716 - INFO:  Definisan interfejs I na liniji 4
INFO  13:42:25,984 - INFO:  Deklarisan niz x na liniji 5
INFO  13:42:25,984 - INFO:  Deklarisan niz y na liniji 5
INFO  13:42:25,984 - INFO:  Definisana klasa A na liniji 5
INFO  13:42:25,984 - INFO:  Definisan enum tip Broj na liniji 7
INFO  13:42:26,953 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  13:42:27,125 - INFO:  Deklarisan niz x na liniji 9
INFO  13:42:27,640 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  13:42:27,828 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  13:42:28,015 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  13:42:28,458 - INFO:  Deklarisan metod getValue na liniji 11
INFO  13:42:28,458 - INFO:  Deklarisan metod m na liniji 15
INFO  13:42:28,458 - INFO:  Definisana klasa B na liniji 8
INFO  13:42:29,349 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  13:42:29,611 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  13:42:29,611 - INFO:  Definisana klasa C na liniji 18
INFO  13:42:29,830 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  13:42:30,001 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  13:42:30,173 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  13:42:30,923 - INFO:  Deklarisana promenljiva i na liniji 20
INFO  13:45:17,771 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  13:45:17,849 - #2 program
INFO  13:45:17,849 - #45 Program
INFO  13:45:17,849 - #45 int
INFO  13:45:17,849 - #45 x
INFO  13:45:17,849 - #8 ,
INFO  13:45:17,849 - #45 y
INFO  13:45:17,849 - #5 ;
INFO  13:45:17,849 - #14 interface
INFO  13:45:17,849 - #45 I
INFO  13:45:17,849 - #3 {
INFO  13:45:17,849 - #13 void
INFO  13:45:17,849 - #45 m
INFO  13:45:17,849 - #6 (
INFO  13:45:17,849 - #7 )
INFO  13:45:17,849 - #5 ;
INFO  13:45:17,849 - #4 }
INFO  13:45:17,849 - #16 class
INFO  13:45:17,849 - #45 A
INFO  13:45:17,849 - #3 {
INFO  13:45:17,865 - #45 int
INFO  13:45:17,865 - #45 x
INFO  13:45:17,865 - #25 [
INFO  13:45:17,865 - #34 ]
INFO  13:45:17,865 - #8 ,
INFO  13:45:17,865 - #45 y
INFO  13:45:17,865 - #25 [
INFO  13:45:17,865 - #34 ]
INFO  13:45:17,865 - #5 ;
INFO  13:45:17,865 - #4 }
INFO  13:45:17,865 - #29 enum
INFO  13:45:17,865 - #45 Broj
INFO  13:45:17,865 - #3 {
INFO  13:45:17,865 - #45 NULA
INFO  13:45:17,865 - #8 ,
INFO  13:45:17,865 - #45 TRI
INFO  13:45:17,865 - #12 =
INFO  13:45:17,865 - #42 3
INFO  13:45:17,865 - #8 ,
INFO  13:45:17,865 - #45 PET
INFO  13:45:17,865 - #12 =
INFO  13:45:17,865 - #42 5
INFO  13:45:17,865 - #4 }
INFO  13:45:17,865 - #16 class
INFO  13:45:17,865 - #45 B
INFO  13:45:17,865 - #39 extends
INFO  13:45:17,865 - #45 A
INFO  13:45:17,865 - #40 implements
INFO  13:45:17,865 - #45 I
INFO  13:45:17,865 - #3 {
INFO  13:45:17,865 - #45 int
INFO  13:45:17,865 - #45 i
INFO  13:45:17,865 - #5 ;
INFO  13:45:17,865 - #45 int
INFO  13:45:17,865 - #45 x
INFO  13:45:17,865 - #25 [
INFO  13:45:17,865 - #34 ]
INFO  13:45:17,865 - #5 ;
INFO  13:45:17,865 - #3 {
INFO  13:45:17,865 - #45 int
INFO  13:45:17,865 - #45 getValue
INFO  13:45:17,865 - #6 (
INFO  13:45:17,865 - #45 int
INFO  13:45:17,865 - #45 a
INFO  13:45:17,865 - #7 )
INFO  13:45:17,865 - #45 int
INFO  13:45:17,865 - #45 b
INFO  13:45:17,865 - #5 ;
INFO  13:45:17,865 - #45 bool
INFO  13:45:17,865 - #45 c
INFO  13:45:17,865 - #5 ;
INFO  13:45:17,865 - #3 {
INFO  13:45:17,865 - #10 return
INFO  13:45:17,865 - #42 0
INFO  13:45:17,865 - #5 ;
INFO  13:45:17,865 - #4 }
INFO  13:45:17,865 - #13 void
INFO  13:45:17,865 - #45 m
INFO  13:45:17,881 - #6 (
INFO  13:45:17,881 - #7 )
INFO  13:45:17,881 - #3 {
INFO  13:45:17,881 - #4 }
INFO  13:45:17,881 - #4 }
INFO  13:45:17,881 - #4 }
INFO  13:45:17,881 - #16 class
INFO  13:45:17,881 - #45 C
INFO  13:45:17,881 - #39 extends
INFO  13:45:17,881 - #45 B
INFO  13:45:17,881 - #3 {
INFO  13:45:17,881 - #45 A
INFO  13:45:17,881 - #45 theA
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #45 int
INFO  13:45:17,881 - #45 a
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #4 }
INFO  13:45:17,881 - #3 {
INFO  13:45:17,881 - #13 void
INFO  13:45:17,881 - #45 main
INFO  13:45:17,881 - #6 (
INFO  13:45:17,881 - #45 int
INFO  13:45:17,881 - #45 x
INFO  13:45:17,881 - #7 )
INFO  13:45:17,881 - #45 A
INFO  13:45:17,881 - #45 a
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #45 C
INFO  13:45:17,881 - #45 c
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #45 int
INFO  13:45:17,881 - #45 i
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #3 {
INFO  13:45:17,881 - #45 c
INFO  13:45:17,881 - #12 =
INFO  13:45:17,881 - #18 new
INFO  13:45:17,881 - #45 C
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #45 c
INFO  13:45:17,881 - #15 .
INFO  13:45:17,881 - #45 theA
INFO  13:45:17,881 - #12 =
INFO  13:45:17,881 - #45 a
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #45 c
INFO  13:45:17,881 - #15 .
INFO  13:45:17,881 - #45 x
INFO  13:45:17,881 - #12 =
INFO  13:45:17,881 - #18 new
INFO  13:45:17,881 - #45 int
INFO  13:45:17,881 - #25 [
INFO  13:45:17,881 - #42 5
INFO  13:45:17,881 - #34 ]
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #45 x
INFO  13:45:17,881 - #12 =
INFO  13:45:17,881 - #18 new
INFO  13:45:17,881 - #45 int
INFO  13:45:17,881 - #25 [
INFO  13:45:17,881 - #45 Broj
INFO  13:45:17,881 - #15 .
INFO  13:45:17,881 - #45 TRI
INFO  13:45:17,881 - #34 ]
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #26 read
INFO  13:45:17,881 - #6 (
INFO  13:45:17,881 - #45 c
INFO  13:45:17,881 - #15 .
INFO  13:45:17,881 - #45 i
INFO  13:45:17,881 - #7 )
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #41 for
INFO  13:45:17,881 - #6 (
INFO  13:45:17,881 - #45 i
INFO  13:45:17,881 - #12 =
INFO  13:45:17,881 - #42 0
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #45 i
INFO  13:45:17,881 - #19 <
INFO  13:45:17,881 - #42 5
INFO  13:45:17,881 - #5 ;
INFO  13:45:17,881 - #45 i
INFO  13:45:17,881 - #38 ++
INFO  13:45:17,881 - #7 )
INFO  13:45:17,881 - #3 {
INFO  13:45:17,896 - #26 read
INFO  13:45:17,896 - #6 (
INFO  13:45:17,896 - #45 c
INFO  13:45:17,896 - #15 .
INFO  13:45:17,896 - #45 x
INFO  13:45:17,896 - #25 [
INFO  13:45:17,896 - #45 i
INFO  13:45:17,896 - #34 ]
INFO  13:45:17,896 - #7 )
INFO  13:45:17,896 - #5 ;
INFO  13:45:17,896 - #26 read
INFO  13:45:17,896 - #6 (
INFO  13:45:17,896 - #45 c
INFO  13:45:17,896 - #15 .
INFO  13:45:17,896 - #45 theA
INFO  13:45:17,896 - #15 .
INFO  13:45:17,896 - #45 x
INFO  13:45:17,896 - #25 [
INFO  13:45:17,896 - #45 i
INFO  13:45:17,896 - #34 ]
INFO  13:45:17,896 - #7 )
INFO  13:45:17,896 - #5 ;
INFO  13:45:17,896 - #46 if
INFO  13:45:17,896 - #6 (
INFO  13:45:17,896 - #42 1
INFO  13:45:17,896 - #32 >
INFO  13:45:17,896 - #42 2
INFO  13:45:17,896 - #7 )
INFO  13:45:17,896 - #26 read
INFO  13:45:17,896 - #6 (
INFO  13:45:17,896 - #45 a
INFO  13:45:17,896 - #7 )
INFO  13:45:17,896 - #5 ;
INFO  13:45:17,896 - #47 else
INFO  13:45:17,896 - #26 read
INFO  13:45:17,896 - #6 (
INFO  13:45:17,896 - #45 b
INFO  13:45:17,896 - #7 )
INFO  13:45:17,896 - #5 ;
INFO  13:45:17,896 - #4 }
INFO  13:45:17,896 - #9 print
INFO  13:45:17,896 - #6 (
INFO  13:45:17,896 - #45 c
INFO  13:45:17,896 - #15 .
INFO  13:45:17,896 - #45 getValue
INFO  13:45:17,896 - #6 (
INFO  13:45:17,896 - #45 c
INFO  13:45:17,896 - #15 .
INFO  13:45:17,896 - #45 theA
INFO  13:45:17,896 - #15 .
INFO  13:45:17,896 - #45 x
INFO  13:45:17,896 - #25 [
INFO  13:45:17,896 - #45 Broj
INFO  13:45:17,896 - #15 .
INFO  13:45:17,896 - #45 NULA
INFO  13:45:17,896 - #34 ]
INFO  13:45:17,896 - #7 )
INFO  13:45:17,896 - #7 )
INFO  13:45:17,896 - #5 ;
INFO  13:45:17,896 - #45 c
INFO  13:45:17,896 - #15 .
INFO  13:45:17,896 - #45 m
INFO  13:45:17,896 - #6 (
INFO  13:45:17,896 - #7 )
INFO  13:45:17,896 - #5 ;
INFO  13:45:17,896 - #4 }
INFO  13:45:17,896 - #4 }
INFO  13:45:17,912 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           c
                            NoDesignator(
                            ) [NoDesignator]
                          ) [Design]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             theA
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                Design(
                                 a
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           x
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     x
                      NoDesignator(
                      ) [NoDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   Broj
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       TRI
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  13:45:17,912 - ===================================
INFO  13:45:17,912 - INFO:  Pocetak programa Program na liniji 1
INFO  13:45:17,912 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  13:45:17,912 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  13:45:17,912 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  13:45:17,912 - INFO:  Definisan interfejs I na liniji 4
INFO  13:45:17,912 - INFO:  Deklarisan niz x na liniji 5
INFO  13:45:17,912 - INFO:  Deklarisan niz y na liniji 5
INFO  13:45:17,912 - INFO:  Definisana klasa A na liniji 5
INFO  13:45:17,912 - INFO:  Definisan enum tip Broj na liniji 7
INFO  13:45:17,912 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  13:45:17,912 - INFO:  Deklarisan niz x na liniji 9
INFO  13:45:17,912 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  13:45:17,912 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  13:45:17,912 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  13:45:17,912 - INFO:  Deklarisan metod getValue na liniji 11
INFO  13:45:17,912 - INFO:  Deklarisan metod m na liniji 15
INFO  13:45:17,912 - INFO:  Definisana klasa B na liniji 8
INFO  13:45:17,912 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  13:45:17,912 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  13:45:17,912 - INFO:  Definisana klasa C na liniji 18
INFO  13:45:17,912 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  13:45:17,912 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  13:45:17,912 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  13:45:17,912 - INFO:  Deklarisana promenljiva i na liniji 20
ERROR 13:45:17,912 - ERROR: Odgovarajuci tip velicine niza mora biti int  na liniji 27		<--------------- ERROR 
INFO  13:45:17,912 - INFO:  Deklarisan metod main na liniji 20
INFO  13:45:17,912 - ===================================
ERROR 13:45:17,912 - Postoji greska u generisanom kodu!
INFO  13:45:38,952 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  13:45:39,030 - #2 program
INFO  13:45:39,030 - #45 Program
INFO  13:45:39,030 - #45 int
INFO  13:45:39,030 - #45 x
INFO  13:45:39,030 - #8 ,
INFO  13:45:39,030 - #45 y
INFO  13:45:39,030 - #5 ;
INFO  13:45:39,030 - #14 interface
INFO  13:45:39,030 - #45 I
INFO  13:45:39,030 - #3 {
INFO  13:45:39,030 - #13 void
INFO  13:45:39,030 - #45 m
INFO  13:45:39,030 - #6 (
INFO  13:45:39,030 - #7 )
INFO  13:45:39,030 - #5 ;
INFO  13:45:39,030 - #4 }
INFO  13:45:39,030 - #16 class
INFO  13:45:39,030 - #45 A
INFO  13:45:39,030 - #3 {
INFO  13:45:39,030 - #45 int
INFO  13:45:39,030 - #45 x
INFO  13:45:39,030 - #25 [
INFO  13:45:39,030 - #34 ]
INFO  13:45:39,030 - #8 ,
INFO  13:45:39,030 - #45 y
INFO  13:45:39,030 - #25 [
INFO  13:45:39,030 - #34 ]
INFO  13:45:39,030 - #5 ;
INFO  13:45:39,030 - #4 }
INFO  13:45:39,030 - #29 enum
INFO  13:45:39,030 - #45 Broj
INFO  13:45:39,030 - #3 {
INFO  13:45:39,030 - #45 NULA
INFO  13:45:39,030 - #8 ,
INFO  13:45:39,030 - #45 TRI
INFO  13:45:39,030 - #12 =
INFO  13:45:39,030 - #42 3
INFO  13:45:39,030 - #8 ,
INFO  13:45:39,030 - #45 PET
INFO  13:45:39,030 - #12 =
INFO  13:45:39,030 - #42 5
INFO  13:45:39,030 - #4 }
INFO  13:45:39,046 - #16 class
INFO  13:45:39,046 - #45 B
INFO  13:45:39,046 - #39 extends
INFO  13:45:39,046 - #45 A
INFO  13:45:39,046 - #40 implements
INFO  13:45:39,046 - #45 I
INFO  13:45:39,046 - #3 {
INFO  13:45:39,046 - #45 int
INFO  13:45:39,046 - #45 i
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #45 int
INFO  13:45:39,046 - #45 x
INFO  13:45:39,046 - #25 [
INFO  13:45:39,046 - #34 ]
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #3 {
INFO  13:45:39,046 - #45 int
INFO  13:45:39,046 - #45 getValue
INFO  13:45:39,046 - #6 (
INFO  13:45:39,046 - #45 int
INFO  13:45:39,046 - #45 a
INFO  13:45:39,046 - #7 )
INFO  13:45:39,046 - #45 int
INFO  13:45:39,046 - #45 b
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #45 bool
INFO  13:45:39,046 - #45 c
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #3 {
INFO  13:45:39,046 - #10 return
INFO  13:45:39,046 - #42 0
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #4 }
INFO  13:45:39,046 - #13 void
INFO  13:45:39,046 - #45 m
INFO  13:45:39,046 - #6 (
INFO  13:45:39,046 - #7 )
INFO  13:45:39,046 - #3 {
INFO  13:45:39,046 - #4 }
INFO  13:45:39,046 - #4 }
INFO  13:45:39,046 - #4 }
INFO  13:45:39,046 - #16 class
INFO  13:45:39,046 - #45 C
INFO  13:45:39,046 - #39 extends
INFO  13:45:39,046 - #45 B
INFO  13:45:39,046 - #3 {
INFO  13:45:39,046 - #45 A
INFO  13:45:39,046 - #45 theA
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #45 int
INFO  13:45:39,046 - #45 a
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #4 }
INFO  13:45:39,046 - #3 {
INFO  13:45:39,046 - #13 void
INFO  13:45:39,046 - #45 main
INFO  13:45:39,046 - #6 (
INFO  13:45:39,046 - #45 int
INFO  13:45:39,046 - #45 x
INFO  13:45:39,046 - #7 )
INFO  13:45:39,046 - #45 A
INFO  13:45:39,046 - #45 a
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #45 C
INFO  13:45:39,046 - #45 c
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #45 int
INFO  13:45:39,046 - #45 i
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #3 {
INFO  13:45:39,046 - #45 c
INFO  13:45:39,046 - #12 =
INFO  13:45:39,046 - #18 new
INFO  13:45:39,046 - #45 C
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #45 c
INFO  13:45:39,046 - #15 .
INFO  13:45:39,046 - #45 theA
INFO  13:45:39,046 - #12 =
INFO  13:45:39,046 - #45 a
INFO  13:45:39,046 - #5 ;
INFO  13:45:39,046 - #45 c
INFO  13:45:39,046 - #15 .
INFO  13:45:39,046 - #45 x
INFO  13:45:39,046 - #12 =
INFO  13:45:39,061 - #18 new
INFO  13:45:39,061 - #45 int
INFO  13:45:39,061 - #25 [
INFO  13:45:39,061 - #42 5
INFO  13:45:39,061 - #34 ]
INFO  13:45:39,061 - #5 ;
INFO  13:45:39,061 - #26 read
INFO  13:45:39,061 - #6 (
INFO  13:45:39,061 - #45 c
INFO  13:45:39,061 - #15 .
INFO  13:45:39,061 - #45 i
INFO  13:45:39,061 - #7 )
INFO  13:45:39,061 - #5 ;
INFO  13:45:39,061 - #41 for
INFO  13:45:39,061 - #6 (
INFO  13:45:39,061 - #45 i
INFO  13:45:39,061 - #12 =
INFO  13:45:39,061 - #42 0
INFO  13:45:39,061 - #5 ;
INFO  13:45:39,061 - #45 i
INFO  13:45:39,061 - #19 <
INFO  13:45:39,061 - #42 5
INFO  13:45:39,061 - #5 ;
INFO  13:45:39,061 - #45 i
INFO  13:45:39,061 - #38 ++
INFO  13:45:39,061 - #7 )
INFO  13:45:39,061 - #3 {
INFO  13:45:39,061 - #26 read
INFO  13:45:39,061 - #6 (
INFO  13:45:39,061 - #45 c
INFO  13:45:39,061 - #15 .
INFO  13:45:39,061 - #45 x
INFO  13:45:39,061 - #25 [
INFO  13:45:39,061 - #45 i
INFO  13:45:39,061 - #34 ]
INFO  13:45:39,061 - #7 )
INFO  13:45:39,061 - #5 ;
INFO  13:45:39,061 - #26 read
INFO  13:45:39,061 - #6 (
INFO  13:45:39,061 - #45 c
INFO  13:45:39,061 - #15 .
INFO  13:45:39,061 - #45 theA
INFO  13:45:39,061 - #15 .
INFO  13:45:39,061 - #45 x
INFO  13:45:39,061 - #25 [
INFO  13:45:39,061 - #45 i
INFO  13:45:39,061 - #34 ]
INFO  13:45:39,061 - #7 )
INFO  13:45:39,061 - #5 ;
INFO  13:45:39,061 - #46 if
INFO  13:45:39,061 - #6 (
INFO  13:45:39,061 - #42 1
INFO  13:45:39,061 - #32 >
INFO  13:45:39,061 - #42 2
INFO  13:45:39,061 - #7 )
INFO  13:45:39,061 - #26 read
INFO  13:45:39,061 - #6 (
INFO  13:45:39,061 - #45 a
INFO  13:45:39,061 - #7 )
INFO  13:45:39,061 - #5 ;
INFO  13:45:39,061 - #47 else
INFO  13:45:39,061 - #26 read
INFO  13:45:39,061 - #6 (
INFO  13:45:39,061 - #45 b
INFO  13:45:39,077 - #7 )
INFO  13:45:39,077 - #5 ;
INFO  13:45:39,077 - #4 }
INFO  13:45:39,077 - #9 print
INFO  13:45:39,077 - #6 (
INFO  13:45:39,077 - #45 c
INFO  13:45:39,077 - #15 .
INFO  13:45:39,077 - #45 getValue
INFO  13:45:39,077 - #6 (
INFO  13:45:39,077 - #45 c
INFO  13:45:39,077 - #15 .
INFO  13:45:39,077 - #45 theA
INFO  13:45:39,077 - #15 .
INFO  13:45:39,077 - #45 x
INFO  13:45:39,077 - #25 [
INFO  13:45:39,077 - #45 Broj
INFO  13:45:39,077 - #15 .
INFO  13:45:39,077 - #45 NULA
INFO  13:45:39,077 - #34 ]
INFO  13:45:39,077 - #7 )
INFO  13:45:39,077 - #7 )
INFO  13:45:39,077 - #5 ;
INFO  13:45:39,077 - #45 c
INFO  13:45:39,077 - #15 .
INFO  13:45:39,077 - #45 m
INFO  13:45:39,077 - #6 (
INFO  13:45:39,077 - #7 )
INFO  13:45:39,077 - #5 ;
INFO  13:45:39,077 - #4 }
INFO  13:45:39,077 - #4 }
INFO  13:45:39,093 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         c
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              NewFactor(
                                Type(
                                 C
                                ) [Type]
                              ) [NewFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       c
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           theA
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               a
                                NoDesignator(
                                ) [NoDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     c
                      OptDesignator(
                        NoDesignator(
                        ) [NoDesignator]
                        DesignField(
                         x
                        ) [DesignField]
                      ) [OptDesignator]
                    ) [Design]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 5
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                Design(
                 c
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     i
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            Design(
                             i
                              NoDesignator(
                              ) [NoDesignator]
                            ) [Design]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  Design(
                   i
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        Design(
                         c
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               x
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignArr(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    Design(
                                     i
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [DesignArr]
                          ) [OptDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      Design(
                       c
                        OptDesignator(
                          OptDesignator(
                            OptDesignator(
                              NoDesignator(
                              ) [NoDesignator]
                              DesignField(
                               theA
                              ) [DesignField]
                            ) [OptDesignator]
                            DesignField(
                             x
                            ) [DesignField]
                          ) [OptDesignator]
                          DesignArr(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  Design(
                                   i
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [OptDesignator]
                      ) [Design]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      Design(
                       a
                        NoDesignator(
                        ) [NoDesignator]
                      ) [Design]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        Design(
                         b
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  Design(
                   c
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       getValue
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              Design(
                               c
                                OptDesignator(
                                  OptDesignator(
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       theA
                                      ) [DesignField]
                                    ) [OptDesignator]
                                    DesignField(
                                     x
                                    ) [DesignField]
                                  ) [OptDesignator]
                                  DesignArr(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          Design(
                                           Broj
                                            OptDesignator(
                                              NoDesignator(
                                              ) [NoDesignator]
                                              DesignField(
                                               NULA
                                              ) [DesignField]
                                            ) [OptDesignator]
                                          ) [Design]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                ) [OptDesignator]
                              ) [Design]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            Design(
             c
              OptDesignator(
                NoDesignator(
                ) [NoDesignator]
                DesignField(
                 m
                ) [DesignField]
              ) [OptDesignator]
            ) [Design]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  13:45:39,093 - ===================================
INFO  13:45:39,093 - INFO:  Pocetak programa Program na liniji 1
INFO  13:45:39,093 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  13:45:39,093 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  13:45:39,093 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  13:45:39,093 - INFO:  Definisan interfejs I na liniji 4
INFO  13:45:39,093 - INFO:  Deklarisan niz x na liniji 5
INFO  13:45:39,093 - INFO:  Deklarisan niz y na liniji 5
INFO  13:45:39,093 - INFO:  Definisana klasa A na liniji 5
INFO  13:45:39,093 - INFO:  Definisan enum tip Broj na liniji 7
INFO  13:45:39,093 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  13:45:39,093 - INFO:  Deklarisan niz x na liniji 9
INFO  13:45:39,093 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  13:45:39,093 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  13:45:39,093 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  13:45:39,093 - INFO:  Deklarisan metod getValue na liniji 11
INFO  13:45:39,093 - INFO:  Deklarisan metod m na liniji 15
INFO  13:45:39,093 - INFO:  Definisana klasa B na liniji 8
INFO  13:45:39,093 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  13:45:39,093 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  13:45:39,093 - INFO:  Definisana klasa C na liniji 18
INFO  13:45:39,093 - INFO:  Deklarisan formalni parametar x na liniji 20
INFO  13:45:39,093 - INFO:  Deklarisana promenljiva a na liniji 20
INFO  13:45:39,093 - INFO:  Deklarisana promenljiva c na liniji 20
INFO  13:45:39,093 - INFO:  Deklarisana promenljiva i na liniji 20
INFO  13:45:39,093 - INFO:  Deklarisan metod main na liniji 20
INFO  13:45:39,093 - ===================================
INFO  14:01:19,941 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  14:01:20,019 - #2 program
INFO  14:01:20,019 - #45 SemanticTest
INFO  14:01:20,019 - #22 const
INFO  14:01:20,019 - #45 int
INFO  14:01:20,019 - #45 x
INFO  14:01:20,019 - #12 =
INFO  14:01:20,019 - #42 5
INFO  14:01:20,019 - #8 ,
INFO  14:01:20,019 - #45 f
INFO  14:01:20,019 - #12 =
INFO  14:01:20,019 - #42 6
INFO  14:01:20,019 - #5 ;
INFO  14:01:20,019 - #22 const
INFO  14:01:20,019 - #45 bool
INFO  14:01:20,019 - #45 b
INFO  14:01:20,019 - #12 =
INFO  14:01:20,019 - #44 false
INFO  14:01:20,019 - #5 ;
INFO  14:01:20,019 - #45 int
INFO  14:01:20,019 - #45 x1
INFO  14:01:20,019 - #8 ,
INFO  14:01:20,019 - #45 x2
INFO  14:01:20,019 - #25 [
INFO  14:01:20,019 - #34 ]
INFO  14:01:20,019 - #5 ;
INFO  14:01:20,019 - #29 enum
INFO  14:01:20,019 - #45 nums
INFO  14:01:20,019 - #3 {
INFO  14:01:20,019 - #45 ONE
INFO  14:01:20,019 - #8 ,
INFO  14:01:20,019 - #45 TWO
INFO  14:01:20,019 - #12 =
INFO  14:01:20,019 - #42 5
INFO  14:01:20,019 - #8 ,
INFO  14:01:20,019 - #45 THREE
INFO  14:01:20,019 - #4 }
INFO  14:01:20,019 - #16 class
INFO  14:01:20,019 - #45 A
INFO  14:01:20,019 - #3 {
INFO  14:01:20,019 - #4 }
INFO  14:01:20,019 - #14 interface
INFO  14:01:20,019 - #45 I
INFO  14:01:20,019 - #3 {
INFO  14:01:20,035 - #45 int
INFO  14:01:20,035 - #45 x
INFO  14:01:20,035 - #6 (
INFO  14:01:20,035 - #7 )
INFO  14:01:20,035 - #5 ;
INFO  14:01:20,035 - #13 void
INFO  14:01:20,035 - #45 p
INFO  14:01:20,035 - #6 (
INFO  14:01:20,035 - #7 )
INFO  14:01:20,035 - #5 ;
INFO  14:01:20,035 - #4 }
INFO  14:01:20,035 - #3 {
INFO  14:01:20,035 - #45 int
INFO  14:01:20,035 - #45 metod1
INFO  14:01:20,035 - #6 (
INFO  14:01:20,035 - #7 )
INFO  14:01:20,035 - #3 {
INFO  14:01:20,035 - #45 x
INFO  14:01:20,035 - #12 =
INFO  14:01:20,035 - #42 1
INFO  14:01:20,035 - #11 +
INFO  14:01:20,035 - #42 5
INFO  14:01:20,035 - #5 ;
INFO  14:01:20,035 - #10 return
INFO  14:01:20,035 - #42 3
INFO  14:01:20,035 - #5 ;
INFO  14:01:20,035 - #4 }
INFO  14:01:20,035 - #13 void
INFO  14:01:20,035 - #45 metod2
INFO  14:01:20,035 - #6 (
INFO  14:01:20,035 - #45 int
INFO  14:01:20,035 - #45 x
INFO  14:01:20,035 - #25 [
INFO  14:01:20,035 - #34 ]
INFO  14:01:20,035 - #8 ,
INFO  14:01:20,035 - #45 char
INFO  14:01:20,035 - #45 y
INFO  14:01:20,035 - #8 ,
INFO  14:01:20,035 - #45 bool
INFO  14:01:20,035 - #45 z
INFO  14:01:20,035 - #7 )
INFO  14:01:20,035 - #3 {
INFO  14:01:20,035 - #4 }
INFO  14:01:20,035 - #4 }
INFO  14:01:20,066 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              ConstDeclaration(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleConsts(
                    SingleConst(
                      ConstItem(
                       x
                        InitializerNum(
                         5
                        ) [InitializerNum]
                      ) [ConstItem]
                    ) [SingleConst]
                    ConstItem(
                     f
                      InitializerNum(
                       6
                      ) [InitializerNum]
                    ) [ConstItem]
                  ) [MultipleConsts]
                ) [ConstDeclarations]
              ) [ConstDeclaration]
            ) [VarDeclLists]
            ConstDeclaration(
              ConstDeclarations(
                Type(
                 bool
                ) [Type]
                SingleConst(
                  ConstItem(
                   b
                    InitializerBool(
                     false
                    ) [InitializerBool]
                  ) [ConstItem]
                ) [SingleConst]
              ) [ConstDeclarations]
            ) [ConstDeclaration]
          ) [VarDeclLists]
          VarDeclaration(
            VarDeclarations(
              Type(
               int
              ) [Type]
              MultipleVars(
                SingleVar(
                  Var(
                   x1
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
                Var(
                 x2
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [MultipleVars]
            ) [VarDeclarations]
          ) [VarDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             nums
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TWO
                 5
                ) [InitEnum]
              ) [MultipleEnums]
              NoInitEnum(
               THREE
              ) [NoInitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           A
          ) [ClassName]
          NoSuperClass(
          ) [NoSuperClass]
          NoImplInteraces(
          ) [NoImplInteraces]
          NoOptVars(
          ) [NoOptVars]
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
        InterName(
         I
        ) [InterName]
        OptInterMethodDeclList(
          InterfaceMethodDeclarations(
            SingleInterfaceMethodDeclaration(
              InterfaceMethodDeclaration(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               x
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
              ) [InterfaceMethodDeclaration]
            ) [SingleInterfaceMethodDeclaration]
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             p
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [InterfaceMethodDeclarations]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    OptMethods(
      NoOptMethods(
      ) [NoOptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          TypeIdentificator(
            Type(
             int
            ) [Type]
          ) [TypeIdentificator]
         metod1
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        NoOptVars(
        ) [NoOptVars]
        OptionalStmt(
          OptionalStmt(
            NoOptionalStmt(
            ) [NoOptionalStmt]
            DesignatorStmt(
              DesignStmt(
                Design(
                 x
                  NoDesignator(
                  ) [NoDesignator]
                ) [Design]
                AssignOper(
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      NumFactor(
                       1
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    WithAddTerms(
                      NoAddTerms(
                      ) [NoAddTerms]
                      PlusOp(
                      ) [PlusOp]
                      Terms(
                        NumFactor(
                         5
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                    ) [WithAddTerms]
                  ) [Expression]
                ) [AssignOper]
              ) [DesignStmt]
            ) [DesignatorStmt]
          ) [OptionalStmt]
          ReturnStmt(
            OptRetExprDerived1(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  NumFactor(
                   3
                  ) [NumFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
            ) [OptRetExprDerived1]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       metod2
      ) [MethodDeclTypeName]
      OptionalFormPars(
        MultipleFormPars(
          MultipleFormPars(
            SingleFormPars(
              FormParItem(
                Type(
                 int
                ) [Type]
               x
                ArrayVar(
                ) [ArrayVar]
              ) [FormParItem]
            ) [SingleFormPars]
            FormParItem(
              Type(
               char
              ) [Type]
             y
              NoArrayVar(
              ) [NoArrayVar]
            ) [FormParItem]
          ) [MultipleFormPars]
          FormParItem(
            Type(
             bool
            ) [Type]
           z
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [MultipleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      NoOptionalStmt(
      ) [NoOptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  14:01:20,066 - ===================================
INFO  14:01:20,066 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  14:01:20,066 - INFO:  Deklarisana konstanta x na liniji 6
INFO  14:01:20,066 - INFO:  Deklarisana konstanta f na liniji 6
INFO  14:01:20,066 - INFO:  Deklarisana konstanta b na liniji 7
INFO  14:01:20,081 - INFO:  Deklarisana globalna promenljiva x1 na liniji 8
INFO  14:01:20,081 - INFO:  Deklarisan niz x2 na liniji 8
INFO  14:01:20,081 - INFO:  Definisan enum tip nums na liniji 10
INFO  14:01:20,081 - INFO:  Definisana klasa A na liniji 12
INFO  14:01:20,081 - INFO:  Deklarisan metod x u interfejsu na liniji 14
INFO  14:01:20,081 - INFO:  Deklarisan metod p u interfejsu na liniji 15
INFO  14:01:20,081 - INFO:  Definisan interfejs I na liniji 13
INFO  14:01:20,081 - INFO:  Deklarisan metod metod1 na liniji 19
INFO  14:01:20,081 - INFO:  Deklarisan formalni parametar x na liniji 24
INFO  14:01:20,081 - INFO:  Deklarisan formalni parametar y na liniji 24
INFO  14:01:20,081 - INFO:  Deklarisan formalni parametar z na liniji 24
INFO  14:01:20,081 - INFO:  Deklarisan metod metod2 na liniji 24
INFO  14:01:20,081 - ===================================
INFO  14:02:01,028 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  14:02:01,107 - #2 program
INFO  14:02:01,107 - #45 SemanticTest
INFO  14:02:01,107 - #22 const
INFO  14:02:01,107 - #45 int
INFO  14:02:01,107 - #45 x
INFO  14:02:01,107 - #12 =
INFO  14:02:01,107 - #42 5
INFO  14:02:01,107 - #8 ,
INFO  14:02:01,107 - #45 f
INFO  14:02:01,107 - #12 =
INFO  14:02:01,107 - #42 6
INFO  14:02:01,107 - #5 ;
INFO  14:02:01,107 - #22 const
INFO  14:02:01,107 - #45 bool
INFO  14:02:01,107 - #45 b
INFO  14:02:01,107 - #12 =
INFO  14:02:01,107 - #44 false
INFO  14:02:01,107 - #5 ;
INFO  14:02:01,107 - #45 int
INFO  14:02:01,107 - #45 x1
INFO  14:02:01,107 - #8 ,
INFO  14:02:01,107 - #45 x2
INFO  14:02:01,107 - #25 [
INFO  14:02:01,107 - #34 ]
INFO  14:02:01,107 - #5 ;
INFO  14:02:01,107 - #29 enum
INFO  14:02:01,107 - #45 nums
INFO  14:02:01,107 - #3 {
INFO  14:02:01,107 - #45 ONE
INFO  14:02:01,107 - #8 ,
INFO  14:02:01,107 - #45 TWO
INFO  14:02:01,107 - #12 =
INFO  14:02:01,107 - #42 5
INFO  14:02:01,107 - #8 ,
INFO  14:02:01,107 - #45 THREE
INFO  14:02:01,107 - #4 }
INFO  14:02:01,107 - #16 class
INFO  14:02:01,107 - #45 A
INFO  14:02:01,107 - #3 {
INFO  14:02:01,122 - #4 }
INFO  14:02:01,122 - #14 interface
INFO  14:02:01,122 - #45 I
INFO  14:02:01,122 - #3 {
INFO  14:02:01,122 - #45 int
INFO  14:02:01,122 - #45 x
INFO  14:02:01,122 - #6 (
INFO  14:02:01,122 - #7 )
INFO  14:02:01,122 - #5 ;
INFO  14:02:01,122 - #13 void
INFO  14:02:01,122 - #45 p
INFO  14:02:01,122 - #6 (
INFO  14:02:01,122 - #7 )
INFO  14:02:01,122 - #5 ;
INFO  14:02:01,122 - #4 }
INFO  14:02:01,122 - #3 {
INFO  14:02:01,122 - #45 int
INFO  14:02:01,122 - #45 metod1
INFO  14:02:01,122 - #6 (
INFO  14:02:01,122 - #7 )
INFO  14:02:01,122 - #3 {
INFO  14:02:01,122 - #45 x
INFO  14:02:01,122 - #12 =
INFO  14:02:01,122 - #42 1
INFO  14:02:01,122 - #11 +
INFO  14:02:01,122 - #42 5
INFO  14:02:01,122 - #5 ;
INFO  14:02:01,122 - #10 return
INFO  14:02:01,122 - #42 3
INFO  14:02:01,122 - #5 ;
INFO  14:02:01,122 - #4 }
INFO  14:02:01,122 - #13 void
INFO  14:02:01,122 - #45 metod2
INFO  14:02:01,122 - #6 (
INFO  14:02:01,122 - #45 int
INFO  14:02:01,122 - #45 x
INFO  14:02:01,122 - #25 [
INFO  14:02:01,122 - #34 ]
INFO  14:02:01,122 - #8 ,
INFO  14:02:01,122 - #45 char
INFO  14:02:01,122 - #45 y
INFO  14:02:01,122 - #8 ,
INFO  14:02:01,122 - #45 bool
INFO  14:02:01,122 - #45 z
INFO  14:02:01,122 - #7 )
INFO  14:02:01,122 - #3 {
INFO  14:02:01,122 - #4 }
INFO  14:02:01,122 - #4 }
INFO  14:02:01,138 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              ConstDeclaration(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleConsts(
                    SingleConst(
                      ConstItem(
                       x
                        InitializerNum(
                         5
                        ) [InitializerNum]
                      ) [ConstItem]
                    ) [SingleConst]
                    ConstItem(
                     f
                      InitializerNum(
                       6
                      ) [InitializerNum]
                    ) [ConstItem]
                  ) [MultipleConsts]
                ) [ConstDeclarations]
              ) [ConstDeclaration]
            ) [VarDeclLists]
            ConstDeclaration(
              ConstDeclarations(
                Type(
                 bool
                ) [Type]
                SingleConst(
                  ConstItem(
                   b
                    InitializerBool(
                     false
                    ) [InitializerBool]
                  ) [ConstItem]
                ) [SingleConst]
              ) [ConstDeclarations]
            ) [ConstDeclaration]
          ) [VarDeclLists]
          VarDeclaration(
            VarDeclarations(
              Type(
               int
              ) [Type]
              MultipleVars(
                SingleVar(
                  Var(
                   x1
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
                Var(
                 x2
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [MultipleVars]
            ) [VarDeclarations]
          ) [VarDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             nums
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TWO
                 5
                ) [InitEnum]
              ) [MultipleEnums]
              NoInitEnum(
               THREE
              ) [NoInitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           A
          ) [ClassName]
          NoSuperClass(
          ) [NoSuperClass]
          NoImplInteraces(
          ) [NoImplInteraces]
          NoOptVars(
          ) [NoOptVars]
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
        InterName(
         I
        ) [InterName]
        OptInterMethodDeclList(
          InterfaceMethodDeclarations(
            SingleInterfaceMethodDeclaration(
              InterfaceMethodDeclaration(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               x
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
              ) [InterfaceMethodDeclaration]
            ) [SingleInterfaceMethodDeclaration]
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             p
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [InterfaceMethodDeclarations]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    OptMethods(
      NoOptMethods(
      ) [NoOptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          TypeIdentificator(
            Type(
             int
            ) [Type]
          ) [TypeIdentificator]
         metod1
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        NoOptVars(
        ) [NoOptVars]
        OptionalStmt(
          OptionalStmt(
            NoOptionalStmt(
            ) [NoOptionalStmt]
            DesignatorStmt(
              DesignStmt(
                Design(
                 x
                  NoDesignator(
                  ) [NoDesignator]
                ) [Design]
                AssignOper(
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      NumFactor(
                       1
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    WithAddTerms(
                      NoAddTerms(
                      ) [NoAddTerms]
                      PlusOp(
                      ) [PlusOp]
                      Terms(
                        NumFactor(
                         5
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                    ) [WithAddTerms]
                  ) [Expression]
                ) [AssignOper]
              ) [DesignStmt]
            ) [DesignatorStmt]
          ) [OptionalStmt]
          ReturnStmt(
            OptRetExprDerived1(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  NumFactor(
                   3
                  ) [NumFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
            ) [OptRetExprDerived1]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       metod2
      ) [MethodDeclTypeName]
      OptionalFormPars(
        MultipleFormPars(
          MultipleFormPars(
            SingleFormPars(
              FormParItem(
                Type(
                 int
                ) [Type]
               x
                ArrayVar(
                ) [ArrayVar]
              ) [FormParItem]
            ) [SingleFormPars]
            FormParItem(
              Type(
               char
              ) [Type]
             y
              NoArrayVar(
              ) [NoArrayVar]
            ) [FormParItem]
          ) [MultipleFormPars]
          FormParItem(
            Type(
             bool
            ) [Type]
           z
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [MultipleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      NoOptionalStmt(
      ) [NoOptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  14:02:01,138 - ===================================
INFO  14:02:01,138 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  14:02:01,138 - INFO:  Deklarisana konstanta x na liniji 6
INFO  14:02:01,138 - INFO:  Deklarisana konstanta f na liniji 6
INFO  14:02:01,138 - INFO:  Deklarisana konstanta b na liniji 7
INFO  14:02:01,138 - INFO:  Deklarisana globalna promenljiva x1 na liniji 8
INFO  14:02:01,138 - INFO:  Deklarisan niz x2 na liniji 8
INFO  14:02:01,138 - INFO:  Definisan enum tip nums na liniji 10
INFO  14:02:01,138 - INFO:  Definisana klasa A na liniji 12
INFO  14:02:01,138 - INFO:  Deklarisan metod x u interfejsu na liniji 14
INFO  14:02:01,138 - INFO:  Deklarisan metod p u interfejsu na liniji 15
INFO  14:02:01,138 - INFO:  Definisan interfejs I na liniji 13
INFO  14:02:01,138 - INFO:  Deklarisan metod metod1 na liniji 19
INFO  14:02:01,138 - INFO:  Deklarisan formalni parametar x na liniji 24
INFO  14:02:01,138 - INFO:  Deklarisan formalni parametar y na liniji 24
INFO  14:02:01,138 - INFO:  Deklarisan formalni parametar z na liniji 24
INFO  14:02:01,138 - INFO:  Deklarisan metod metod2 na liniji 24
INFO  14:02:01,138 - ===================================
INFO  14:03:00,684 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  14:03:00,762 - #2 program
INFO  14:03:00,762 - #45 SemanticTest
INFO  14:03:00,762 - #22 const
INFO  14:03:00,762 - #45 int
INFO  14:03:00,762 - #45 x
INFO  14:03:00,762 - #12 =
INFO  14:03:00,762 - #42 5
INFO  14:03:00,762 - #8 ,
INFO  14:03:00,762 - #45 f
INFO  14:03:00,762 - #12 =
INFO  14:03:00,762 - #42 6
INFO  14:03:00,762 - #5 ;
INFO  14:03:00,762 - #22 const
INFO  14:03:00,762 - #45 bool
INFO  14:03:00,762 - #45 b
INFO  14:03:00,762 - #12 =
INFO  14:03:00,762 - #44 false
INFO  14:03:00,762 - #5 ;
INFO  14:03:00,762 - #45 int
INFO  14:03:00,762 - #45 x1
INFO  14:03:00,762 - #8 ,
INFO  14:03:00,762 - #45 x2
INFO  14:03:00,762 - #25 [
INFO  14:03:00,762 - #34 ]
INFO  14:03:00,762 - #5 ;
INFO  14:03:00,762 - #29 enum
INFO  14:03:00,762 - #45 nums
INFO  14:03:00,762 - #3 {
INFO  14:03:00,762 - #45 ONE
INFO  14:03:00,762 - #8 ,
INFO  14:03:00,762 - #45 TWO
INFO  14:03:00,762 - #12 =
INFO  14:03:00,762 - #42 5
INFO  14:03:00,762 - #8 ,
INFO  14:03:00,762 - #45 THREE
INFO  14:03:00,762 - #4 }
INFO  14:03:00,762 - #16 class
INFO  14:03:00,762 - #45 A
INFO  14:03:00,762 - #3 {
INFO  14:03:00,762 - #4 }
INFO  14:03:00,762 - #14 interface
INFO  14:03:00,762 - #45 I
INFO  14:03:00,762 - #3 {
INFO  14:03:00,762 - #45 int
INFO  14:03:00,762 - #45 x
INFO  14:03:00,762 - #6 (
INFO  14:03:00,762 - #7 )
INFO  14:03:00,777 - #5 ;
INFO  14:03:00,777 - #13 void
INFO  14:03:00,777 - #45 p
INFO  14:03:00,777 - #6 (
INFO  14:03:00,777 - #7 )
INFO  14:03:00,777 - #5 ;
INFO  14:03:00,777 - #4 }
INFO  14:03:00,777 - #3 {
INFO  14:03:00,777 - #45 int
INFO  14:03:00,777 - #45 metod1
INFO  14:03:00,777 - #6 (
INFO  14:03:00,777 - #7 )
INFO  14:03:00,777 - #3 {
INFO  14:03:00,777 - #45 x
INFO  14:03:00,777 - #12 =
INFO  14:03:00,777 - #42 1
INFO  14:03:00,777 - #11 +
INFO  14:03:00,777 - #42 5
INFO  14:03:00,777 - #5 ;
INFO  14:03:00,777 - #10 return
INFO  14:03:00,777 - #42 3
INFO  14:03:00,777 - #5 ;
INFO  14:03:00,777 - #4 }
INFO  14:03:00,777 - #13 void
INFO  14:03:00,777 - #45 metod2
INFO  14:03:00,777 - #6 (
INFO  14:03:00,777 - #45 int
INFO  14:03:00,777 - #45 x
INFO  14:03:00,777 - #25 [
INFO  14:03:00,777 - #34 ]
INFO  14:03:00,777 - #8 ,
INFO  14:03:00,777 - #45 char
INFO  14:03:00,777 - #45 y
INFO  14:03:00,777 - #8 ,
INFO  14:03:00,777 - #45 bool
INFO  14:03:00,777 - #45 z
INFO  14:03:00,777 - #7 )
INFO  14:03:00,777 - #3 {
INFO  14:03:00,777 - #4 }
INFO  14:03:00,777 - #4 }
INFO  14:03:00,793 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              ConstDeclaration(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleConsts(
                    SingleConst(
                      ConstItem(
                       x
                        InitializerNum(
                         5
                        ) [InitializerNum]
                      ) [ConstItem]
                    ) [SingleConst]
                    ConstItem(
                     f
                      InitializerNum(
                       6
                      ) [InitializerNum]
                    ) [ConstItem]
                  ) [MultipleConsts]
                ) [ConstDeclarations]
              ) [ConstDeclaration]
            ) [VarDeclLists]
            ConstDeclaration(
              ConstDeclarations(
                Type(
                 bool
                ) [Type]
                SingleConst(
                  ConstItem(
                   b
                    InitializerBool(
                     false
                    ) [InitializerBool]
                  ) [ConstItem]
                ) [SingleConst]
              ) [ConstDeclarations]
            ) [ConstDeclaration]
          ) [VarDeclLists]
          VarDeclaration(
            VarDeclarations(
              Type(
               int
              ) [Type]
              MultipleVars(
                SingleVar(
                  Var(
                   x1
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
                Var(
                 x2
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [MultipleVars]
            ) [VarDeclarations]
          ) [VarDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             nums
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TWO
                 5
                ) [InitEnum]
              ) [MultipleEnums]
              NoInitEnum(
               THREE
              ) [NoInitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           A
          ) [ClassName]
          NoSuperClass(
          ) [NoSuperClass]
          NoImplInteraces(
          ) [NoImplInteraces]
          NoOptVars(
          ) [NoOptVars]
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
        InterName(
         I
        ) [InterName]
        OptInterMethodDeclList(
          InterfaceMethodDeclarations(
            SingleInterfaceMethodDeclaration(
              InterfaceMethodDeclaration(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               x
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
              ) [InterfaceMethodDeclaration]
            ) [SingleInterfaceMethodDeclaration]
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             p
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [InterfaceMethodDeclarations]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    OptMethods(
      NoOptMethods(
      ) [NoOptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          TypeIdentificator(
            Type(
             int
            ) [Type]
          ) [TypeIdentificator]
         metod1
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        NoOptVars(
        ) [NoOptVars]
        OptionalStmt(
          OptionalStmt(
            NoOptionalStmt(
            ) [NoOptionalStmt]
            DesignatorStmt(
              DesignStmt(
                Design(
                 x
                  NoDesignator(
                  ) [NoDesignator]
                ) [Design]
                AssignOper(
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      NumFactor(
                       1
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    WithAddTerms(
                      NoAddTerms(
                      ) [NoAddTerms]
                      PlusOp(
                      ) [PlusOp]
                      Terms(
                        NumFactor(
                         5
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                    ) [WithAddTerms]
                  ) [Expression]
                ) [AssignOper]
              ) [DesignStmt]
            ) [DesignatorStmt]
          ) [OptionalStmt]
          ReturnStmt(
            OptRetExprDerived1(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  NumFactor(
                   3
                  ) [NumFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
            ) [OptRetExprDerived1]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       metod2
      ) [MethodDeclTypeName]
      OptionalFormPars(
        MultipleFormPars(
          MultipleFormPars(
            SingleFormPars(
              FormParItem(
                Type(
                 int
                ) [Type]
               x
                ArrayVar(
                ) [ArrayVar]
              ) [FormParItem]
            ) [SingleFormPars]
            FormParItem(
              Type(
               char
              ) [Type]
             y
              NoArrayVar(
              ) [NoArrayVar]
            ) [FormParItem]
          ) [MultipleFormPars]
          FormParItem(
            Type(
             bool
            ) [Type]
           z
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [MultipleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      NoOptionalStmt(
      ) [NoOptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  14:03:00,793 - ===================================
INFO  14:03:00,793 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  14:03:00,793 - INFO:  Deklarisana konstanta x na liniji 6
INFO  14:03:00,793 - INFO:  Deklarisana konstanta f na liniji 6
INFO  14:03:00,793 - INFO:  Deklarisana konstanta b na liniji 7
INFO  14:03:00,793 - INFO:  Deklarisana globalna promenljiva x1 na liniji 8
INFO  14:03:00,793 - INFO:  Deklarisan niz x2 na liniji 8
INFO  14:03:00,793 - INFO:  Definisan enum tip nums na liniji 10
INFO  14:03:00,793 - INFO:  Definisana klasa A na liniji 12
INFO  14:03:00,793 - INFO:  Deklarisan metod x u interfejsu na liniji 14
INFO  14:03:00,793 - INFO:  Deklarisan metod p u interfejsu na liniji 15
INFO  14:03:00,793 - INFO:  Definisan interfejs I na liniji 13
INFO  14:03:00,793 - INFO:  Deklarisan metod metod1 na liniji 19
INFO  14:03:00,793 - INFO:  Deklarisan formalni parametar x na liniji 24
INFO  14:03:00,793 - INFO:  Deklarisan formalni parametar y na liniji 24
INFO  14:03:00,793 - INFO:  Deklarisan formalni parametar z na liniji 24
INFO  14:03:00,793 - INFO:  Deklarisan metod metod2 na liniji 24
INFO  14:03:00,793 - ===================================
INFO  14:03:10,775 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  14:03:10,853 - #2 program
INFO  14:03:10,853 - #45 SemanticTest
INFO  14:03:10,853 - #22 const
INFO  14:03:10,853 - #45 int
INFO  14:03:10,853 - #45 x
INFO  14:03:10,853 - #12 =
INFO  14:03:10,853 - #42 5
INFO  14:03:10,853 - #8 ,
INFO  14:03:10,853 - #45 f
INFO  14:03:10,853 - #12 =
INFO  14:03:10,853 - #42 6
INFO  14:03:10,853 - #5 ;
INFO  14:03:10,853 - #22 const
INFO  14:03:10,853 - #45 bool
INFO  14:03:10,853 - #45 b
INFO  14:03:10,853 - #12 =
INFO  14:03:10,853 - #44 false
INFO  14:03:10,853 - #5 ;
INFO  14:03:10,853 - #45 int
INFO  14:03:10,853 - #45 x1
INFO  14:03:10,853 - #8 ,
INFO  14:03:10,853 - #45 x2
INFO  14:03:10,853 - #25 [
INFO  14:03:10,853 - #34 ]
INFO  14:03:10,853 - #5 ;
INFO  14:03:10,853 - #29 enum
INFO  14:03:10,853 - #45 nums
INFO  14:03:10,853 - #3 {
INFO  14:03:10,853 - #45 ONE
INFO  14:03:10,853 - #8 ,
INFO  14:03:10,853 - #45 TWO
INFO  14:03:10,853 - #12 =
INFO  14:03:10,853 - #42 5
INFO  14:03:10,853 - #8 ,
INFO  14:03:10,853 - #45 THREE
INFO  14:03:10,853 - #4 }
INFO  14:03:10,853 - #16 class
INFO  14:03:10,853 - #45 A
INFO  14:03:10,853 - #3 {
INFO  14:03:10,853 - #4 }
INFO  14:03:10,869 - #14 interface
INFO  14:03:10,869 - #45 I
INFO  14:03:10,869 - #3 {
INFO  14:03:10,869 - #45 int
INFO  14:03:10,869 - #45 x
INFO  14:03:10,869 - #6 (
INFO  14:03:10,869 - #7 )
INFO  14:03:10,869 - #5 ;
INFO  14:03:10,869 - #13 void
INFO  14:03:10,869 - #45 p
INFO  14:03:10,869 - #6 (
INFO  14:03:10,869 - #7 )
INFO  14:03:10,869 - #5 ;
INFO  14:03:10,869 - #4 }
INFO  14:03:10,869 - #3 {
INFO  14:03:10,869 - #45 int
INFO  14:03:10,869 - #45 metod1
INFO  14:03:10,869 - #6 (
INFO  14:03:10,869 - #7 )
INFO  14:03:10,869 - #3 {
INFO  14:03:10,869 - #45 x
INFO  14:03:10,869 - #12 =
INFO  14:03:10,869 - #42 1
INFO  14:03:10,869 - #11 +
INFO  14:03:10,869 - #42 5
INFO  14:03:10,869 - #5 ;
INFO  14:03:10,869 - #10 return
INFO  14:03:10,869 - #42 3
INFO  14:03:10,869 - #5 ;
INFO  14:03:10,869 - #4 }
INFO  14:03:10,869 - #13 void
INFO  14:03:10,869 - #45 metod2
INFO  14:03:10,869 - #6 (
INFO  14:03:10,869 - #45 int
INFO  14:03:10,869 - #45 x
INFO  14:03:10,869 - #25 [
INFO  14:03:10,869 - #34 ]
INFO  14:03:10,869 - #8 ,
INFO  14:03:10,869 - #45 char
INFO  14:03:10,869 - #45 y
INFO  14:03:10,869 - #8 ,
INFO  14:03:10,869 - #45 bool
INFO  14:03:10,869 - #45 z
INFO  14:03:10,869 - #7 )
INFO  14:03:10,869 - #3 {
INFO  14:03:10,869 - #4 }
INFO  14:03:10,869 - #4 }
INFO  14:03:10,884 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              ConstDeclaration(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleConsts(
                    SingleConst(
                      ConstItem(
                       x
                        InitializerNum(
                         5
                        ) [InitializerNum]
                      ) [ConstItem]
                    ) [SingleConst]
                    ConstItem(
                     f
                      InitializerNum(
                       6
                      ) [InitializerNum]
                    ) [ConstItem]
                  ) [MultipleConsts]
                ) [ConstDeclarations]
              ) [ConstDeclaration]
            ) [VarDeclLists]
            ConstDeclaration(
              ConstDeclarations(
                Type(
                 bool
                ) [Type]
                SingleConst(
                  ConstItem(
                   b
                    InitializerBool(
                     false
                    ) [InitializerBool]
                  ) [ConstItem]
                ) [SingleConst]
              ) [ConstDeclarations]
            ) [ConstDeclaration]
          ) [VarDeclLists]
          VarDeclaration(
            VarDeclarations(
              Type(
               int
              ) [Type]
              MultipleVars(
                SingleVar(
                  Var(
                   x1
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
                Var(
                 x2
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [MultipleVars]
            ) [VarDeclarations]
          ) [VarDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             nums
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TWO
                 5
                ) [InitEnum]
              ) [MultipleEnums]
              NoInitEnum(
               THREE
              ) [NoInitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           A
          ) [ClassName]
          NoSuperClass(
          ) [NoSuperClass]
          NoImplInteraces(
          ) [NoImplInteraces]
          NoOptVars(
          ) [NoOptVars]
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
        InterName(
         I
        ) [InterName]
        OptInterMethodDeclList(
          InterfaceMethodDeclarations(
            SingleInterfaceMethodDeclaration(
              InterfaceMethodDeclaration(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               x
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
              ) [InterfaceMethodDeclaration]
            ) [SingleInterfaceMethodDeclaration]
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             p
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [InterfaceMethodDeclarations]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    OptMethods(
      NoOptMethods(
      ) [NoOptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          TypeIdentificator(
            Type(
             int
            ) [Type]
          ) [TypeIdentificator]
         metod1
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        NoOptVars(
        ) [NoOptVars]
        OptionalStmt(
          OptionalStmt(
            NoOptionalStmt(
            ) [NoOptionalStmt]
            DesignatorStmt(
              DesignStmt(
                Design(
                 x
                  NoDesignator(
                  ) [NoDesignator]
                ) [Design]
                AssignOper(
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      NumFactor(
                       1
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    WithAddTerms(
                      NoAddTerms(
                      ) [NoAddTerms]
                      PlusOp(
                      ) [PlusOp]
                      Terms(
                        NumFactor(
                         5
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                    ) [WithAddTerms]
                  ) [Expression]
                ) [AssignOper]
              ) [DesignStmt]
            ) [DesignatorStmt]
          ) [OptionalStmt]
          ReturnStmt(
            OptRetExprDerived1(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  NumFactor(
                   3
                  ) [NumFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
            ) [OptRetExprDerived1]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       metod2
      ) [MethodDeclTypeName]
      OptionalFormPars(
        MultipleFormPars(
          MultipleFormPars(
            SingleFormPars(
              FormParItem(
                Type(
                 int
                ) [Type]
               x
                ArrayVar(
                ) [ArrayVar]
              ) [FormParItem]
            ) [SingleFormPars]
            FormParItem(
              Type(
               char
              ) [Type]
             y
              NoArrayVar(
              ) [NoArrayVar]
            ) [FormParItem]
          ) [MultipleFormPars]
          FormParItem(
            Type(
             bool
            ) [Type]
           z
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [MultipleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      NoOptionalStmt(
      ) [NoOptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  14:03:10,884 - ===================================
INFO  14:03:10,884 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  14:03:10,884 - INFO:  Deklarisana konstanta x na liniji 6
INFO  14:03:10,884 - INFO:  Deklarisana konstanta f na liniji 6
INFO  14:03:10,884 - INFO:  Deklarisana konstanta b na liniji 7
INFO  14:03:10,884 - INFO:  Deklarisana globalna promenljiva x1 na liniji 8
INFO  14:03:10,884 - INFO:  Deklarisan niz x2 na liniji 8
INFO  14:03:10,884 - INFO:  Definisan enum tip nums na liniji 10
INFO  14:03:10,884 - INFO:  Definisana klasa A na liniji 12
INFO  14:03:10,884 - INFO:  Deklarisan metod x u interfejsu na liniji 14
INFO  14:03:10,884 - INFO:  Deklarisan metod p u interfejsu na liniji 15
INFO  14:03:10,884 - INFO:  Definisan interfejs I na liniji 13
INFO  14:03:10,884 - INFO:  Deklarisan metod metod1 na liniji 19
INFO  14:03:10,884 - INFO:  Deklarisan formalni parametar x na liniji 24
INFO  14:03:10,884 - INFO:  Deklarisan formalni parametar y na liniji 24
INFO  14:03:10,884 - INFO:  Deklarisan formalni parametar z na liniji 24
INFO  14:03:10,884 - INFO:  Deklarisan metod metod2 na liniji 24
INFO  14:03:10,884 - ===================================
