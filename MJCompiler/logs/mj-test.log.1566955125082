INFO  03:18:15,075 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test302.mj
INFO  03:18:15,171 - #2 program
INFO  03:18:15,172 - #45 test302
INFO  03:18:15,172 - #29 enum
INFO  03:18:15,174 - #45 IncrementType
INFO  03:18:15,174 - #3 {
INFO  03:18:15,175 - #45 BY_ONE
INFO  03:18:15,175 - #8 ,
INFO  03:18:15,176 - #45 DOUBLE_VALUE
INFO  03:18:15,176 - #4 }
INFO  03:18:15,176 - #45 int
INFO  03:18:15,177 - #45 i
INFO  03:18:15,178 - #5 ;
INFO  03:18:15,180 - #45 bool
INFO  03:18:15,180 - #45 ibool
INFO  03:18:15,180 - #5 ;
INFO  03:18:15,180 - #45 int
INFO  03:18:15,181 - #45 niz
INFO  03:18:15,181 - #25 [
INFO  03:18:15,181 - #34 ]
INFO  03:18:15,181 - #5 ;
INFO  03:18:15,182 - #3 {
INFO  03:18:15,183 - #45 int
INFO  03:18:15,183 - #45 sum
INFO  03:18:15,183 - #6 (
INFO  03:18:15,184 - #45 int
INFO  03:18:15,184 - #45 z
INFO  03:18:15,184 - #8 ,
INFO  03:18:15,184 - #45 int
INFO  03:18:15,184 - #45 d
INFO  03:18:15,184 - #7 )
INFO  03:18:15,184 - #3 {
INFO  03:18:15,185 - #10 return
INFO  03:18:15,186 - #45 z
INFO  03:18:15,188 - #11 +
INFO  03:18:15,190 - #45 d
INFO  03:18:15,191 - #5 ;
INFO  03:18:15,192 - #4 }
INFO  03:18:15,192 - #45 int
INFO  03:18:15,192 - #45 inkrement
INFO  03:18:15,192 - #6 (
INFO  03:18:15,193 - #45 int
INFO  03:18:15,193 - #45 a
INFO  03:18:15,193 - #8 ,
INFO  03:18:15,193 - #45 IncrementType
INFO  03:18:15,193 - #45 type
INFO  03:18:15,193 - #7 )
INFO  03:18:15,193 - #45 int
INFO  03:18:15,193 - #45 pom
INFO  03:18:15,193 - #5 ;
INFO  03:18:15,193 - #3 {
INFO  03:18:15,193 - #46 if
INFO  03:18:15,194 - #6 (
INFO  03:18:15,194 - #45 type
INFO  03:18:15,194 - #35 ==
INFO  03:18:15,194 - #45 IncrementType
INFO  03:18:15,195 - #15 .
INFO  03:18:15,195 - #45 BY_ONE
INFO  03:18:15,195 - #7 )
INFO  03:18:15,195 - #45 pom
INFO  03:18:15,196 - #12 =
INFO  03:18:15,196 - #42 1
INFO  03:18:15,197 - #5 ;
INFO  03:18:15,198 - #47 else
INFO  03:18:15,198 - #46 if
INFO  03:18:15,199 - #6 (
INFO  03:18:15,199 - #45 type
INFO  03:18:15,199 - #35 ==
INFO  03:18:15,199 - #45 IncrementType
INFO  03:18:15,199 - #15 .
INFO  03:18:15,199 - #45 DOUBLE_VALUE
INFO  03:18:15,199 - #7 )
INFO  03:18:15,200 - #45 pom
INFO  03:18:15,200 - #12 =
INFO  03:18:15,200 - #45 a
INFO  03:18:15,200 - #5 ;
INFO  03:18:15,200 - #10 return
INFO  03:18:15,202 - #45 sum
INFO  03:18:15,202 - #6 (
INFO  03:18:15,202 - #45 a
INFO  03:18:15,202 - #8 ,
INFO  03:18:15,203 - #45 pom
INFO  03:18:15,203 - #7 )
INFO  03:18:15,203 - #5 ;
INFO  03:18:15,203 - #4 }
INFO  03:18:15,203 - #13 void
INFO  03:18:15,203 - #45 main
INFO  03:18:15,204 - #6 (
INFO  03:18:15,204 - #7 )
INFO  03:18:15,205 - #3 {
INFO  03:18:15,205 - #46 if
INFO  03:18:15,205 - #6 (
INFO  03:18:15,205 - #42 1
INFO  03:18:15,206 - #31 !=
INFO  03:18:15,206 - #42 1
INFO  03:18:15,206 - #7 )
INFO  03:18:15,207 - #9 print
INFO  03:18:15,207 - #6 (
INFO  03:18:15,207 - #33 -
INFO  03:18:15,207 - #42 6
INFO  03:18:15,208 - #7 )
INFO  03:18:15,209 - #5 ;
INFO  03:18:15,209 - #47 else
INFO  03:18:15,209 - #9 print
INFO  03:18:15,209 - #6 (
INFO  03:18:15,210 - #42 0
INFO  03:18:15,210 - #7 )
INFO  03:18:15,210 - #5 ;
INFO  03:18:15,210 - #45 ibool
INFO  03:18:15,210 - #12 =
INFO  03:18:15,210 - #44 false
INFO  03:18:15,210 - #5 ;
INFO  03:18:15,210 - #45 i
INFO  03:18:15,210 - #12 =
INFO  03:18:15,210 - #42 0
INFO  03:18:15,210 - #5 ;
INFO  03:18:15,210 - #41 for
INFO  03:18:15,210 - #6 (
INFO  03:18:15,212 - #45 i
INFO  03:18:15,212 - #12 =
INFO  03:18:15,212 - #42 0
INFO  03:18:15,212 - #5 ;
INFO  03:18:15,213 - #45 i
INFO  03:18:15,213 - #19 <
INFO  03:18:15,213 - #42 5
INFO  03:18:15,213 - #5 ;
INFO  03:18:15,213 - #45 i
INFO  03:18:15,214 - #38 ++
INFO  03:18:15,214 - #7 )
INFO  03:18:15,216 - #3 {
INFO  03:18:15,216 - #46 if
INFO  03:18:15,217 - #6 (
INFO  03:18:15,217 - #45 i
INFO  03:18:15,217 - #35 ==
INFO  03:18:15,217 - #42 2
INFO  03:18:15,217 - #7 )
INFO  03:18:15,217 - #45 ibool
INFO  03:18:15,217 - #12 =
INFO  03:18:15,217 - #44 true
INFO  03:18:15,217 - #5 ;
INFO  03:18:15,217 - #4 }
INFO  03:18:15,217 - #46 if
INFO  03:18:15,219 - #6 (
INFO  03:18:15,219 - #45 ibool
INFO  03:18:15,219 - #7 )
INFO  03:18:15,220 - #46 if
INFO  03:18:15,220 - #6 (
INFO  03:18:15,220 - #45 i
INFO  03:18:15,220 - #35 ==
INFO  03:18:15,220 - #42 5
INFO  03:18:15,220 - #7 )
INFO  03:18:15,220 - #9 print
INFO  03:18:15,220 - #6 (
INFO  03:18:15,220 - #42 1
INFO  03:18:15,220 - #7 )
INFO  03:18:15,220 - #5 ;
INFO  03:18:15,220 - #47 else
INFO  03:18:15,220 - #9 print
INFO  03:18:15,220 - #6 (
INFO  03:18:15,220 - #33 -
INFO  03:18:15,220 - #42 1
INFO  03:18:15,220 - #7 )
INFO  03:18:15,222 - #5 ;
INFO  03:18:15,222 - #45 niz
INFO  03:18:15,222 - #12 =
INFO  03:18:15,229 - #18 new
INFO  03:18:15,229 - #45 int
INFO  03:18:15,229 - #25 [
INFO  03:18:15,229 - #42 3
INFO  03:18:15,229 - #34 ]
INFO  03:18:15,229 - #5 ;
INFO  03:18:15,230 - #46 if
INFO  03:18:15,230 - #6 (
INFO  03:18:15,230 - #45 niz
INFO  03:18:15,230 - #25 [
INFO  03:18:15,230 - #42 2
INFO  03:18:15,230 - #34 ]
INFO  03:18:15,230 - #35 ==
INFO  03:18:15,230 - #42 4
INFO  03:18:15,230 - #7 )
INFO  03:18:15,233 - #9 print
INFO  03:18:15,233 - #6 (
INFO  03:18:15,234 - #43 A
INFO  03:18:15,234 - #7 )
INFO  03:18:15,234 - #5 ;
INFO  03:18:15,234 - #47 else
INFO  03:18:15,234 - #9 print
INFO  03:18:15,235 - #6 (
INFO  03:18:15,235 - #43 a
INFO  03:18:15,235 - #7 )
INFO  03:18:15,235 - #5 ;
INFO  03:18:15,235 - #9 print
INFO  03:18:15,236 - #6 (
INFO  03:18:15,236 - #45 eol
INFO  03:18:15,236 - #7 )
INFO  03:18:15,236 - #5 ;
INFO  03:18:15,236 - #45 i
INFO  03:18:15,236 - #12 =
INFO  03:18:15,236 - #42 0
INFO  03:18:15,236 - #5 ;
INFO  03:18:15,236 - #41 for
INFO  03:18:15,236 - #6 (
INFO  03:18:15,236 - #5 ;
INFO  03:18:15,237 - #45 i
INFO  03:18:15,237 - #19 <
INFO  03:18:15,237 - #42 10
INFO  03:18:15,238 - #5 ;
INFO  03:18:15,238 - #7 )
INFO  03:18:15,238 - #3 {
INFO  03:18:15,238 - #46 if
INFO  03:18:15,238 - #6 (
INFO  03:18:15,238 - #45 i
INFO  03:18:15,238 - #35 ==
INFO  03:18:15,238 - #42 3
INFO  03:18:15,238 - #7 )
INFO  03:18:15,238 - #3 {
INFO  03:18:15,238 - #45 i
INFO  03:18:15,238 - #38 ++
INFO  03:18:15,238 - #5 ;
INFO  03:18:15,238 - #36 continue
INFO  03:18:15,238 - #5 ;
INFO  03:18:15,238 - #4 }
INFO  03:18:15,239 - #46 if
INFO  03:18:15,239 - #6 (
INFO  03:18:15,240 - #45 i
INFO  03:18:15,240 - #35 ==
INFO  03:18:15,240 - #42 4
INFO  03:18:15,240 - #7 )
INFO  03:18:15,240 - #17 break
INFO  03:18:15,240 - #5 ;
INFO  03:18:15,240 - #45 i
INFO  03:18:15,241 - #12 =
INFO  03:18:15,241 - #45 inkrement
INFO  03:18:15,242 - #6 (
INFO  03:18:15,242 - #45 i
INFO  03:18:15,242 - #8 ,
INFO  03:18:15,242 - #45 IncrementType
INFO  03:18:15,244 - #15 .
INFO  03:18:15,244 - #45 BY_ONE
INFO  03:18:15,245 - #7 )
INFO  03:18:15,245 - #5 ;
INFO  03:18:15,246 - #4 }
INFO  03:18:15,246 - #46 if
INFO  03:18:15,247 - #6 (
INFO  03:18:15,247 - #45 i
INFO  03:18:15,247 - #35 ==
INFO  03:18:15,247 - #42 3
INFO  03:18:15,247 - #7 )
INFO  03:18:15,247 - #9 print
INFO  03:18:15,247 - #6 (
INFO  03:18:15,247 - #42 4
INFO  03:18:15,247 - #7 )
INFO  03:18:15,247 - #5 ;
INFO  03:18:15,247 - #47 else
INFO  03:18:15,247 - #9 print
INFO  03:18:15,248 - #6 (
INFO  03:18:15,248 - #33 -
INFO  03:18:15,248 - #42 4
INFO  03:18:15,248 - #7 )
INFO  03:18:15,248 - #5 ;
INFO  03:18:15,248 - #26 read
INFO  03:18:15,248 - #6 (
INFO  03:18:15,248 - #45 niz
INFO  03:18:15,249 - #25 [
INFO  03:18:15,249 - #42 0
INFO  03:18:15,249 - #34 ]
INFO  03:18:15,249 - #7 )
INFO  03:18:15,249 - #5 ;
INFO  03:18:15,249 - #26 read
INFO  03:18:15,249 - #6 (
INFO  03:18:15,249 - #45 niz
INFO  03:18:15,249 - #25 [
INFO  03:18:15,249 - #42 1
INFO  03:18:15,250 - #34 ]
INFO  03:18:15,250 - #7 )
INFO  03:18:15,250 - #5 ;
INFO  03:18:15,250 - #26 read
INFO  03:18:15,250 - #6 (
INFO  03:18:15,250 - #45 niz
INFO  03:18:15,250 - #25 [
INFO  03:18:15,250 - #42 2
INFO  03:18:15,250 - #34 ]
INFO  03:18:15,250 - #7 )
INFO  03:18:15,250 - #5 ;
INFO  03:18:15,251 - #9 print
INFO  03:18:15,251 - #6 (
INFO  03:18:15,251 - #45 eol
INFO  03:18:15,251 - #7 )
INFO  03:18:15,251 - #5 ;
INFO  03:18:15,251 - #9 print
INFO  03:18:15,251 - #6 (
INFO  03:18:15,251 - #45 sum
INFO  03:18:15,251 - #6 (
INFO  03:18:15,251 - #45 sum
INFO  03:18:15,251 - #6 (
INFO  03:18:15,251 - #45 niz
INFO  03:18:15,251 - #25 [
INFO  03:18:15,252 - #42 0
INFO  03:18:15,252 - #34 ]
INFO  03:18:15,252 - #8 ,
INFO  03:18:15,252 - #45 niz
INFO  03:18:15,252 - #25 [
INFO  03:18:15,252 - #42 1
INFO  03:18:15,252 - #34 ]
INFO  03:18:15,252 - #7 )
INFO  03:18:15,252 - #8 ,
INFO  03:18:15,252 - #45 niz
INFO  03:18:15,253 - #25 [
INFO  03:18:15,253 - #42 2
INFO  03:18:15,253 - #34 ]
INFO  03:18:15,253 - #7 )
INFO  03:18:15,253 - #7 )
INFO  03:18:15,253 - #5 ;
INFO  03:18:15,253 - #9 print
INFO  03:18:15,253 - #6 (
INFO  03:18:15,253 - #45 eol
INFO  03:18:15,253 - #7 )
INFO  03:18:15,253 - #5 ;
INFO  03:18:15,253 - #9 print
INFO  03:18:15,253 - #6 (
INFO  03:18:15,255 - #45 inkrement
INFO  03:18:15,255 - #6 (
INFO  03:18:15,255 - #45 niz
INFO  03:18:15,255 - #25 [
INFO  03:18:15,255 - #42 2
INFO  03:18:15,255 - #34 ]
INFO  03:18:15,255 - #8 ,
INFO  03:18:15,255 - #45 IncrementType
INFO  03:18:15,255 - #15 .
INFO  03:18:15,255 - #45 DOUBLE_VALUE
INFO  03:18:15,255 - #7 )
INFO  03:18:15,255 - #7 )
INFO  03:18:15,255 - #5 ;
INFO  03:18:15,256 - #10 return
INFO  03:18:15,256 - #5 ;
INFO  03:18:15,256 - #4 }
INFO  03:18:15,257 - #4 }
INFO  03:18:15,281 - Program(
  ProgName(
   test302
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          NoVarDecl(
          ) [NoVarDecl]
          EnumDeclaration(
            EnumDeclarations(
              EnumNamed(
               IncrementType
              ) [EnumNamed]
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   BY_ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                NoInitEnum(
                 DOUBLE_VALUE
                ) [NoInitEnum]
              ) [MultipleEnums]
            ) [EnumDeclarations]
          ) [EnumDeclaration]
        ) [VarDeclLists]
        VarDeclaration(
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               i
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [VarDeclaration]
      ) [VarDeclLists]
      VarDeclaration(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          SingleVar(
            Var(
             ibool
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [VarDeclaration]
    ) [VarDeclLists]
    VarDeclaration(
      VarDeclarations(
        Type(
         int
        ) [Type]
        SingleVar(
          Var(
           niz
            ArrayVar(
            ) [ArrayVar]
          ) [Var]
        ) [SingleVar]
      ) [VarDeclarations]
    ) [VarDeclaration]
  ) [VarDeclLists]
  GlobalMeths(
    OptMethods(
      OptMethods(
        OptMethods(
          NoOptMethods(
          ) [NoOptMethods]
          MethodDeclarations(
            MethodDeclTypeName(
              TypeIdentificator(
                Type(
                 int
                ) [Type]
              ) [TypeIdentificator]
             sum
            ) [MethodDeclTypeName]
            OptionalFormPars(
              MultipleFormPars(
                SingleFormPars(
                  FormParItem(
                    Type(
                     int
                    ) [Type]
                   z
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [FormParItem]
                ) [SingleFormPars]
                FormParItem(
                  Type(
                   int
                  ) [Type]
                 d
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [FormParItem]
              ) [MultipleFormPars]
            ) [OptionalFormPars]
            NoOptVars(
            ) [NoOptVars]
            OptionalStmt(
              NoOptionalStmt(
              ) [NoOptionalStmt]
              ReturnStmt(
                RetExpr(
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      DesignFactor(
                        DesignVar(
                          DesignatorName(
                           z
                          ) [DesignatorName]
                        ) [DesignVar]
                        NoMethodCall(
                        ) [NoMethodCall]
                      ) [DesignFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    WithAddTerms(
                      NoAddTerms(
                      ) [NoAddTerms]
                      PlusOp(
                      ) [PlusOp]
                      Terms(
                        DesignFactor(
                          DesignVar(
                            DesignatorName(
                             d
                            ) [DesignatorName]
                          ) [DesignVar]
                          NoMethodCall(
                          ) [NoMethodCall]
                        ) [DesignFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                    ) [WithAddTerms]
                  ) [Expression]
                ) [RetExpr]
              ) [ReturnStmt]
            ) [OptionalStmt]
          ) [MethodDeclarations]
        ) [OptMethods]
        MethodDeclarations(
          MethodDeclTypeName(
            TypeIdentificator(
              Type(
               int
              ) [Type]
            ) [TypeIdentificator]
           inkrement
          ) [MethodDeclTypeName]
          OptionalFormPars(
            MultipleFormPars(
              SingleFormPars(
                FormParItem(
                  Type(
                   int
                  ) [Type]
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [FormParItem]
              ) [SingleFormPars]
              FormParItem(
                Type(
                 IncrementType
                ) [Type]
               type
                NoArrayVar(
                ) [NoArrayVar]
              ) [FormParItem]
            ) [MultipleFormPars]
          ) [OptionalFormPars]
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 pom
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          OptionalStmt(
            OptionalStmt(
              NoOptionalStmt(
              ) [NoOptionalStmt]
              IfStmt(
                IfCond(
                  ConditionSingle(
                    CondTermSingle(
                      CondFacts(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              DesignVar(
                                DesignatorName(
                                 type
                                ) [DesignatorName]
                              ) [DesignVar]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                        RelSame(
                        ) [RelSame]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              DesignFld(
                                DesignVar(
                                  DesignatorName(
                                   IncrementType
                                  ) [DesignatorName]
                                ) [DesignVar]
                               BY_ONE
                              ) [DesignFld]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [CondFacts]
                    ) [CondTermSingle]
                  ) [ConditionSingle]
                ) [IfCond]
                IfStart(
                ) [IfStart]
                DesignatorStmt(
                  AssignOper(
                    DesignVar(
                      DesignatorName(
                       pom
                      ) [DesignatorName]
                    ) [DesignVar]
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         1
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignatorStmt]
                ElseStmt(
                  ElseStart(
                  ) [ElseStart]
                  IfStmt(
                    IfCond(
                      ConditionSingle(
                        CondTermSingle(
                          CondFacts(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  DesignVar(
                                    DesignatorName(
                                     type
                                    ) [DesignatorName]
                                  ) [DesignVar]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            RelSame(
                            ) [RelSame]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  DesignFld(
                                    DesignVar(
                                      DesignatorName(
                                       IncrementType
                                      ) [DesignatorName]
                                    ) [DesignVar]
                                   DOUBLE_VALUE
                                  ) [DesignFld]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [CondFacts]
                        ) [CondTermSingle]
                      ) [ConditionSingle]
                    ) [IfCond]
                    IfStart(
                    ) [IfStart]
                    DesignatorStmt(
                      AssignOper(
                        DesignVar(
                          DesignatorName(
                           pom
                          ) [DesignatorName]
                        ) [DesignVar]
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              DesignVar(
                                DesignatorName(
                                 a
                                ) [DesignatorName]
                              ) [DesignVar]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignatorStmt]
                    NoElseStmt(
                    ) [NoElseStmt]
                  ) [IfStmt]
                  ElseEnd(
                  ) [ElseEnd]
                ) [ElseStmt]
              ) [IfStmt]
            ) [OptionalStmt]
            ReturnStmt(
              RetExpr(
                Expression(
                  Positive(
                  ) [Positive]
                  Terms(
                    DesignFactor(
                      DesignVar(
                        DesignatorName(
                         sum
                        ) [DesignatorName]
                      ) [DesignVar]
                      WithMethodCall(
                        WithActPars(
                          MultiActPars(
                            SingleActPars(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    DesignVar(
                                      DesignatorName(
                                       a
                                      ) [DesignatorName]
                                    ) [DesignVar]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [SingleActPars]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  DesignVar(
                                    DesignatorName(
                                     pom
                                    ) [DesignatorName]
                                  ) [DesignVar]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [MultiActPars]
                        ) [WithActPars]
                      ) [WithMethodCall]
                    ) [DesignFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  NoAddTerms(
                  ) [NoAddTerms]
                ) [Expression]
              ) [RetExpr]
            ) [ReturnStmt]
          ) [OptionalStmt]
        ) [MethodDeclarations]
      ) [OptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          VoidIdentificator(
          ) [VoidIdentificator]
         main
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        NoOptVars(
        ) [NoOptVars]
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            OptionalStmt(
                              OptionalStmt(
                                OptionalStmt(
                                  OptionalStmt(
                                    OptionalStmt(
                                      OptionalStmt(
                                        OptionalStmt(
                                          OptionalStmt(
                                            OptionalStmt(
                                              NoOptionalStmt(
                                              ) [NoOptionalStmt]
                                              IfStmt(
                                                IfCond(
                                                  ConditionSingle(
                                                    CondTermSingle(
                                                      CondFacts(
                                                        Expression(
                                                          Positive(
                                                          ) [Positive]
                                                          Terms(
                                                            NumFactor(
                                                             1
                                                            ) [NumFactor]
                                                            NoMulFacts(
                                                            ) [NoMulFacts]
                                                          ) [Terms]
                                                          NoAddTerms(
                                                          ) [NoAddTerms]
                                                        ) [Expression]
                                                        RelDif(
                                                        ) [RelDif]
                                                        Expression(
                                                          Positive(
                                                          ) [Positive]
                                                          Terms(
                                                            NumFactor(
                                                             1
                                                            ) [NumFactor]
                                                            NoMulFacts(
                                                            ) [NoMulFacts]
                                                          ) [Terms]
                                                          NoAddTerms(
                                                          ) [NoAddTerms]
                                                        ) [Expression]
                                                      ) [CondFacts]
                                                    ) [CondTermSingle]
                                                  ) [ConditionSingle]
                                                ) [IfCond]
                                                IfStart(
                                                ) [IfStart]
                                                PrintStmt(
                                                  Expression(
                                                    Negative(
                                                    ) [Negative]
                                                    Terms(
                                                      NumFactor(
                                                       6
                                                      ) [NumFactor]
                                                      NoMulFacts(
                                                      ) [NoMulFacts]
                                                    ) [Terms]
                                                    NoAddTerms(
                                                    ) [NoAddTerms]
                                                  ) [Expression]
                                                  DefaultWidth(
                                                  ) [DefaultWidth]
                                                ) [PrintStmt]
                                                ElseStmt(
                                                  ElseStart(
                                                  ) [ElseStart]
                                                  PrintStmt(
                                                    Expression(
                                                      Positive(
                                                      ) [Positive]
                                                      Terms(
                                                        NumFactor(
                                                         0
                                                        ) [NumFactor]
                                                        NoMulFacts(
                                                        ) [NoMulFacts]
                                                      ) [Terms]
                                                      NoAddTerms(
                                                      ) [NoAddTerms]
                                                    ) [Expression]
                                                    DefaultWidth(
                                                    ) [DefaultWidth]
                                                  ) [PrintStmt]
                                                  ElseEnd(
                                                  ) [ElseEnd]
                                                ) [ElseStmt]
                                              ) [IfStmt]
                                            ) [OptionalStmt]
                                            DesignatorStmt(
                                              AssignOper(
                                                DesignVar(
                                                  DesignatorName(
                                                   ibool
                                                  ) [DesignatorName]
                                                ) [DesignVar]
                                                AssignOperation(
                                                ) [AssignOperation]
                                                Expression(
                                                  Positive(
                                                  ) [Positive]
                                                  Terms(
                                                    BoolFactor(
                                                     false
                                                    ) [BoolFactor]
                                                    NoMulFacts(
                                                    ) [NoMulFacts]
                                                  ) [Terms]
                                                  NoAddTerms(
                                                  ) [NoAddTerms]
                                                ) [Expression]
                                              ) [AssignOper]
                                            ) [DesignatorStmt]
                                          ) [OptionalStmt]
                                          DesignatorStmt(
                                            AssignOper(
                                              DesignVar(
                                                DesignatorName(
                                                 i
                                                ) [DesignatorName]
                                              ) [DesignVar]
                                              AssignOperation(
                                              ) [AssignOperation]
                                              Expression(
                                                Positive(
                                                ) [Positive]
                                                Terms(
                                                  NumFactor(
                                                   0
                                                  ) [NumFactor]
                                                  NoMulFacts(
                                                  ) [NoMulFacts]
                                                ) [Terms]
                                                NoAddTerms(
                                                ) [NoAddTerms]
                                              ) [Expression]
                                            ) [AssignOper]
                                          ) [DesignatorStmt]
                                        ) [OptionalStmt]
                                        ForStmt(
                                          OptForStmt(
                                            OptDesignStmtDerived1(
                                              AssignOper(
                                                DesignVar(
                                                  DesignatorName(
                                                   i
                                                  ) [DesignatorName]
                                                ) [DesignVar]
                                                AssignOperation(
                                                ) [AssignOperation]
                                                Expression(
                                                  Positive(
                                                  ) [Positive]
                                                  Terms(
                                                    NumFactor(
                                                     0
                                                    ) [NumFactor]
                                                    NoMulFacts(
                                                    ) [NoMulFacts]
                                                  ) [Terms]
                                                  NoAddTerms(
                                                  ) [NoAddTerms]
                                                ) [Expression]
                                              ) [AssignOper]
                                            ) [OptDesignStmtDerived1]
                                          ) [OptForStmt]
                                          ForCond(
                                            ConditionSingle(
                                              CondTermSingle(
                                                CondFacts(
                                                  Expression(
                                                    Positive(
                                                    ) [Positive]
                                                    Terms(
                                                      DesignFactor(
                                                        DesignVar(
                                                          DesignatorName(
                                                           i
                                                          ) [DesignatorName]
                                                        ) [DesignVar]
                                                        NoMethodCall(
                                                        ) [NoMethodCall]
                                                      ) [DesignFactor]
                                                      NoMulFacts(
                                                      ) [NoMulFacts]
                                                    ) [Terms]
                                                    NoAddTerms(
                                                    ) [NoAddTerms]
                                                  ) [Expression]
                                                  RelLess(
                                                  ) [RelLess]
                                                  Expression(
                                                    Positive(
                                                    ) [Positive]
                                                    Terms(
                                                      NumFactor(
                                                       5
                                                      ) [NumFactor]
                                                      NoMulFacts(
                                                      ) [NoMulFacts]
                                                    ) [Terms]
                                                    NoAddTerms(
                                                    ) [NoAddTerms]
                                                  ) [Expression]
                                                ) [CondFacts]
                                              ) [CondTermSingle]
                                            ) [ConditionSingle]
                                          ) [ForCond]
                                          CondEnd(
                                          ) [CondEnd]
                                          OptForDesignStmt2(
                                            OptDesignStmtDerived1(
                                              PlusPlusSideEff(
                                                DesignVar(
                                                  DesignatorName(
                                                   i
                                                  ) [DesignatorName]
                                                ) [DesignVar]
                                              ) [PlusPlusSideEff]
                                            ) [OptDesignStmtDerived1]
                                          ) [OptForDesignStmt2]
                                          ForStatement(
                                            BlockStmt(
                                              OptionalStmt(
                                                NoOptionalStmt(
                                                ) [NoOptionalStmt]
                                                IfStmt(
                                                  IfCond(
                                                    ConditionSingle(
                                                      CondTermSingle(
                                                        CondFacts(
                                                          Expression(
                                                            Positive(
                                                            ) [Positive]
                                                            Terms(
                                                              DesignFactor(
                                                                DesignVar(
                                                                  DesignatorName(
                                                                   i
                                                                  ) [DesignatorName]
                                                                ) [DesignVar]
                                                                NoMethodCall(
                                                                ) [NoMethodCall]
                                                              ) [DesignFactor]
                                                              NoMulFacts(
                                                              ) [NoMulFacts]
                                                            ) [Terms]
                                                            NoAddTerms(
                                                            ) [NoAddTerms]
                                                          ) [Expression]
                                                          RelSame(
                                                          ) [RelSame]
                                                          Expression(
                                                            Positive(
                                                            ) [Positive]
                                                            Terms(
                                                              NumFactor(
                                                               2
                                                              ) [NumFactor]
                                                              NoMulFacts(
                                                              ) [NoMulFacts]
                                                            ) [Terms]
                                                            NoAddTerms(
                                                            ) [NoAddTerms]
                                                          ) [Expression]
                                                        ) [CondFacts]
                                                      ) [CondTermSingle]
                                                    ) [ConditionSingle]
                                                  ) [IfCond]
                                                  IfStart(
                                                  ) [IfStart]
                                                  DesignatorStmt(
                                                    AssignOper(
                                                      DesignVar(
                                                        DesignatorName(
                                                         ibool
                                                        ) [DesignatorName]
                                                      ) [DesignVar]
                                                      AssignOperation(
                                                      ) [AssignOperation]
                                                      Expression(
                                                        Positive(
                                                        ) [Positive]
                                                        Terms(
                                                          BoolFactor(
                                                           true
                                                          ) [BoolFactor]
                                                          NoMulFacts(
                                                          ) [NoMulFacts]
                                                        ) [Terms]
                                                        NoAddTerms(
                                                        ) [NoAddTerms]
                                                      ) [Expression]
                                                    ) [AssignOper]
                                                  ) [DesignatorStmt]
                                                  NoElseStmt(
                                                  ) [NoElseStmt]
                                                ) [IfStmt]
                                              ) [OptionalStmt]
                                            ) [BlockStmt]
                                          ) [ForStatement]
                                        ) [ForStmt]
                                      ) [OptionalStmt]
                                      IfStmt(
                                        IfCond(
                                          ConditionSingle(
                                            CondTermSingle(
                                              CondFactSingle(
                                                Expression(
                                                  Positive(
                                                  ) [Positive]
                                                  Terms(
                                                    DesignFactor(
                                                      DesignVar(
                                                        DesignatorName(
                                                         ibool
                                                        ) [DesignatorName]
                                                      ) [DesignVar]
                                                      NoMethodCall(
                                                      ) [NoMethodCall]
                                                    ) [DesignFactor]
                                                    NoMulFacts(
                                                    ) [NoMulFacts]
                                                  ) [Terms]
                                                  NoAddTerms(
                                                  ) [NoAddTerms]
                                                ) [Expression]
                                              ) [CondFactSingle]
                                            ) [CondTermSingle]
                                          ) [ConditionSingle]
                                        ) [IfCond]
                                        IfStart(
                                        ) [IfStart]
                                        IfStmt(
                                          IfCond(
                                            ConditionSingle(
                                              CondTermSingle(
                                                CondFacts(
                                                  Expression(
                                                    Positive(
                                                    ) [Positive]
                                                    Terms(
                                                      DesignFactor(
                                                        DesignVar(
                                                          DesignatorName(
                                                           i
                                                          ) [DesignatorName]
                                                        ) [DesignVar]
                                                        NoMethodCall(
                                                        ) [NoMethodCall]
                                                      ) [DesignFactor]
                                                      NoMulFacts(
                                                      ) [NoMulFacts]
                                                    ) [Terms]
                                                    NoAddTerms(
                                                    ) [NoAddTerms]
                                                  ) [Expression]
                                                  RelSame(
                                                  ) [RelSame]
                                                  Expression(
                                                    Positive(
                                                    ) [Positive]
                                                    Terms(
                                                      NumFactor(
                                                       5
                                                      ) [NumFactor]
                                                      NoMulFacts(
                                                      ) [NoMulFacts]
                                                    ) [Terms]
                                                    NoAddTerms(
                                                    ) [NoAddTerms]
                                                  ) [Expression]
                                                ) [CondFacts]
                                              ) [CondTermSingle]
                                            ) [ConditionSingle]
                                          ) [IfCond]
                                          IfStart(
                                          ) [IfStart]
                                          PrintStmt(
                                            Expression(
                                              Positive(
                                              ) [Positive]
                                              Terms(
                                                NumFactor(
                                                 1
                                                ) [NumFactor]
                                                NoMulFacts(
                                                ) [NoMulFacts]
                                              ) [Terms]
                                              NoAddTerms(
                                              ) [NoAddTerms]
                                            ) [Expression]
                                            DefaultWidth(
                                            ) [DefaultWidth]
                                          ) [PrintStmt]
                                          ElseStmt(
                                            ElseStart(
                                            ) [ElseStart]
                                            PrintStmt(
                                              Expression(
                                                Negative(
                                                ) [Negative]
                                                Terms(
                                                  NumFactor(
                                                   1
                                                  ) [NumFactor]
                                                  NoMulFacts(
                                                  ) [NoMulFacts]
                                                ) [Terms]
                                                NoAddTerms(
                                                ) [NoAddTerms]
                                              ) [Expression]
                                              DefaultWidth(
                                              ) [DefaultWidth]
                                            ) [PrintStmt]
                                            ElseEnd(
                                            ) [ElseEnd]
                                          ) [ElseStmt]
                                        ) [IfStmt]
                                        NoElseStmt(
                                        ) [NoElseStmt]
                                      ) [IfStmt]
                                    ) [OptionalStmt]
                                    DesignatorStmt(
                                      AssignOper(
                                        DesignVar(
                                          DesignatorName(
                                           niz
                                          ) [DesignatorName]
                                        ) [DesignVar]
                                        AssignOperation(
                                        ) [AssignOperation]
                                        Expression(
                                          Positive(
                                          ) [Positive]
                                          Terms(
                                            NewArrFactor(
                                              Type(
                                               int
                                              ) [Type]
                                              Expression(
                                                Positive(
                                                ) [Positive]
                                                Terms(
                                                  NumFactor(
                                                   3
                                                  ) [NumFactor]
                                                  NoMulFacts(
                                                  ) [NoMulFacts]
                                                ) [Terms]
                                                NoAddTerms(
                                                ) [NoAddTerms]
                                              ) [Expression]
                                              OptInitDerived1(
                                              ) [OptInitDerived1]
                                            ) [NewArrFactor]
                                            NoMulFacts(
                                            ) [NoMulFacts]
                                          ) [Terms]
                                          NoAddTerms(
                                          ) [NoAddTerms]
                                        ) [Expression]
                                      ) [AssignOper]
                                    ) [DesignatorStmt]
                                  ) [OptionalStmt]
                                  IfStmt(
                                    IfCond(
                                      ConditionSingle(
                                        CondTermSingle(
                                          CondFacts(
                                            Expression(
                                              Positive(
                                              ) [Positive]
                                              Terms(
                                                DesignFactor(
                                                  DesignArr(
                                                    DesignVar(
                                                      DesignatorName(
                                                       niz
                                                      ) [DesignatorName]
                                                    ) [DesignVar]
                                                    Expression(
                                                      Positive(
                                                      ) [Positive]
                                                      Terms(
                                                        NumFactor(
                                                         2
                                                        ) [NumFactor]
                                                        NoMulFacts(
                                                        ) [NoMulFacts]
                                                      ) [Terms]
                                                      NoAddTerms(
                                                      ) [NoAddTerms]
                                                    ) [Expression]
                                                  ) [DesignArr]
                                                  NoMethodCall(
                                                  ) [NoMethodCall]
                                                ) [DesignFactor]
                                                NoMulFacts(
                                                ) [NoMulFacts]
                                              ) [Terms]
                                              NoAddTerms(
                                              ) [NoAddTerms]
                                            ) [Expression]
                                            RelSame(
                                            ) [RelSame]
                                            Expression(
                                              Positive(
                                              ) [Positive]
                                              Terms(
                                                NumFactor(
                                                 4
                                                ) [NumFactor]
                                                NoMulFacts(
                                                ) [NoMulFacts]
                                              ) [Terms]
                                              NoAddTerms(
                                              ) [NoAddTerms]
                                            ) [Expression]
                                          ) [CondFacts]
                                        ) [CondTermSingle]
                                      ) [ConditionSingle]
                                    ) [IfCond]
                                    IfStart(
                                    ) [IfStart]
                                    PrintStmt(
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          CharFactor(
                                           A
                                          ) [CharFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                      DefaultWidth(
                                      ) [DefaultWidth]
                                    ) [PrintStmt]
                                    ElseStmt(
                                      ElseStart(
                                      ) [ElseStart]
                                      PrintStmt(
                                        Expression(
                                          Positive(
                                          ) [Positive]
                                          Terms(
                                            CharFactor(
                                             a
                                            ) [CharFactor]
                                            NoMulFacts(
                                            ) [NoMulFacts]
                                          ) [Terms]
                                          NoAddTerms(
                                          ) [NoAddTerms]
                                        ) [Expression]
                                        DefaultWidth(
                                        ) [DefaultWidth]
                                      ) [PrintStmt]
                                      ElseEnd(
                                      ) [ElseEnd]
                                    ) [ElseStmt]
                                  ) [IfStmt]
                                ) [OptionalStmt]
                                PrintStmt(
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      DesignFactor(
                                        DesignVar(
                                          DesignatorName(
                                           eol
                                          ) [DesignatorName]
                                        ) [DesignVar]
                                        NoMethodCall(
                                        ) [NoMethodCall]
                                      ) [DesignFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                  DefaultWidth(
                                  ) [DefaultWidth]
                                ) [PrintStmt]
                              ) [OptionalStmt]
                              DesignatorStmt(
                                AssignOper(
                                  DesignVar(
                                    DesignatorName(
                                     i
                                    ) [DesignatorName]
                                  ) [DesignVar]
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NumFactor(
                                       0
                                      ) [NumFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignatorStmt]
                            ) [OptionalStmt]
                            ForStmt(
                              OptForStmt(
                                OptDesignStmtDerived2(
                                ) [OptDesignStmtDerived2]
                              ) [OptForStmt]
                              ForCond(
                                ConditionSingle(
                                  CondTermSingle(
                                    CondFacts(
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            DesignVar(
                                              DesignatorName(
                                               i
                                              ) [DesignatorName]
                                            ) [DesignVar]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                      RelLess(
                                      ) [RelLess]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          NumFactor(
                                           10
                                          ) [NumFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [CondFacts]
                                  ) [CondTermSingle]
                                ) [ConditionSingle]
                              ) [ForCond]
                              CondEnd(
                              ) [CondEnd]
                              OptForDesignStmt2(
                                OptDesignStmtDerived2(
                                ) [OptDesignStmtDerived2]
                              ) [OptForDesignStmt2]
                              ForStatement(
                                BlockStmt(
                                  OptionalStmt(
                                    OptionalStmt(
                                      OptionalStmt(
                                        NoOptionalStmt(
                                        ) [NoOptionalStmt]
                                        IfStmt(
                                          IfCond(
                                            ConditionSingle(
                                              CondTermSingle(
                                                CondFacts(
                                                  Expression(
                                                    Positive(
                                                    ) [Positive]
                                                    Terms(
                                                      DesignFactor(
                                                        DesignVar(
                                                          DesignatorName(
                                                           i
                                                          ) [DesignatorName]
                                                        ) [DesignVar]
                                                        NoMethodCall(
                                                        ) [NoMethodCall]
                                                      ) [DesignFactor]
                                                      NoMulFacts(
                                                      ) [NoMulFacts]
                                                    ) [Terms]
                                                    NoAddTerms(
                                                    ) [NoAddTerms]
                                                  ) [Expression]
                                                  RelSame(
                                                  ) [RelSame]
                                                  Expression(
                                                    Positive(
                                                    ) [Positive]
                                                    Terms(
                                                      NumFactor(
                                                       3
                                                      ) [NumFactor]
                                                      NoMulFacts(
                                                      ) [NoMulFacts]
                                                    ) [Terms]
                                                    NoAddTerms(
                                                    ) [NoAddTerms]
                                                  ) [Expression]
                                                ) [CondFacts]
                                              ) [CondTermSingle]
                                            ) [ConditionSingle]
                                          ) [IfCond]
                                          IfStart(
                                          ) [IfStart]
                                          BlockStmt(
                                            OptionalStmt(
                                              OptionalStmt(
                                                NoOptionalStmt(
                                                ) [NoOptionalStmt]
                                                DesignatorStmt(
                                                  PlusPlusSideEff(
                                                    DesignVar(
                                                      DesignatorName(
                                                       i
                                                      ) [DesignatorName]
                                                    ) [DesignVar]
                                                  ) [PlusPlusSideEff]
                                                ) [DesignatorStmt]
                                              ) [OptionalStmt]
                                              ContinueStmt(
                                              ) [ContinueStmt]
                                            ) [OptionalStmt]
                                          ) [BlockStmt]
                                          NoElseStmt(
                                          ) [NoElseStmt]
                                        ) [IfStmt]
                                      ) [OptionalStmt]
                                      IfStmt(
                                        IfCond(
                                          ConditionSingle(
                                            CondTermSingle(
                                              CondFacts(
                                                Expression(
                                                  Positive(
                                                  ) [Positive]
                                                  Terms(
                                                    DesignFactor(
                                                      DesignVar(
                                                        DesignatorName(
                                                         i
                                                        ) [DesignatorName]
                                                      ) [DesignVar]
                                                      NoMethodCall(
                                                      ) [NoMethodCall]
                                                    ) [DesignFactor]
                                                    NoMulFacts(
                                                    ) [NoMulFacts]
                                                  ) [Terms]
                                                  NoAddTerms(
                                                  ) [NoAddTerms]
                                                ) [Expression]
                                                RelSame(
                                                ) [RelSame]
                                                Expression(
                                                  Positive(
                                                  ) [Positive]
                                                  Terms(
                                                    NumFactor(
                                                     4
                                                    ) [NumFactor]
                                                    NoMulFacts(
                                                    ) [NoMulFacts]
                                                  ) [Terms]
                                                  NoAddTerms(
                                                  ) [NoAddTerms]
                                                ) [Expression]
                                              ) [CondFacts]
                                            ) [CondTermSingle]
                                          ) [ConditionSingle]
                                        ) [IfCond]
                                        IfStart(
                                        ) [IfStart]
                                        BreakStmt(
                                        ) [BreakStmt]
                                        NoElseStmt(
                                        ) [NoElseStmt]
                                      ) [IfStmt]
                                    ) [OptionalStmt]
                                    DesignatorStmt(
                                      AssignOper(
                                        DesignVar(
                                          DesignatorName(
                                           i
                                          ) [DesignatorName]
                                        ) [DesignVar]
                                        AssignOperation(
                                        ) [AssignOperation]
                                        Expression(
                                          Positive(
                                          ) [Positive]
                                          Terms(
                                            DesignFactor(
                                              DesignVar(
                                                DesignatorName(
                                                 inkrement
                                                ) [DesignatorName]
                                              ) [DesignVar]
                                              WithMethodCall(
                                                WithActPars(
                                                  MultiActPars(
                                                    SingleActPars(
                                                      Expression(
                                                        Positive(
                                                        ) [Positive]
                                                        Terms(
                                                          DesignFactor(
                                                            DesignVar(
                                                              DesignatorName(
                                                               i
                                                              ) [DesignatorName]
                                                            ) [DesignVar]
                                                            NoMethodCall(
                                                            ) [NoMethodCall]
                                                          ) [DesignFactor]
                                                          NoMulFacts(
                                                          ) [NoMulFacts]
                                                        ) [Terms]
                                                        NoAddTerms(
                                                        ) [NoAddTerms]
                                                      ) [Expression]
                                                    ) [SingleActPars]
                                                    Expression(
                                                      Positive(
                                                      ) [Positive]
                                                      Terms(
                                                        DesignFactor(
                                                          DesignFld(
                                                            DesignVar(
                                                              DesignatorName(
                                                               IncrementType
                                                              ) [DesignatorName]
                                                            ) [DesignVar]
                                                           BY_ONE
                                                          ) [DesignFld]
                                                          NoMethodCall(
                                                          ) [NoMethodCall]
                                                        ) [DesignFactor]
                                                        NoMulFacts(
                                                        ) [NoMulFacts]
                                                      ) [Terms]
                                                      NoAddTerms(
                                                      ) [NoAddTerms]
                                                    ) [Expression]
                                                  ) [MultiActPars]
                                                ) [WithActPars]
                                              ) [WithMethodCall]
                                            ) [DesignFactor]
                                            NoMulFacts(
                                            ) [NoMulFacts]
                                          ) [Terms]
                                          NoAddTerms(
                                          ) [NoAddTerms]
                                        ) [Expression]
                                      ) [AssignOper]
                                    ) [DesignatorStmt]
                                  ) [OptionalStmt]
                                ) [BlockStmt]
                              ) [ForStatement]
                            ) [ForStmt]
                          ) [OptionalStmt]
                          IfStmt(
                            IfCond(
                              ConditionSingle(
                                CondTermSingle(
                                  CondFacts(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          DesignVar(
                                            DesignatorName(
                                             i
                                            ) [DesignatorName]
                                          ) [DesignVar]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                    RelSame(
                                    ) [RelSame]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         3
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [CondFacts]
                                ) [CondTermSingle]
                              ) [ConditionSingle]
                            ) [IfCond]
                            IfStart(
                            ) [IfStart]
                            PrintStmt(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   4
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                              DefaultWidth(
                              ) [DefaultWidth]
                            ) [PrintStmt]
                            ElseStmt(
                              ElseStart(
                              ) [ElseStart]
                              PrintStmt(
                                Expression(
                                  Negative(
                                  ) [Negative]
                                  Terms(
                                    NumFactor(
                                     4
                                    ) [NumFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                                DefaultWidth(
                                ) [DefaultWidth]
                              ) [PrintStmt]
                              ElseEnd(
                              ) [ElseEnd]
                            ) [ElseStmt]
                          ) [IfStmt]
                        ) [OptionalStmt]
                        ReadStmt(
                          DesignArr(
                            DesignVar(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                            ) [DesignVar]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 0
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [DesignArr]
                        ) [ReadStmt]
                      ) [OptionalStmt]
                      ReadStmt(
                        DesignArr(
                          DesignVar(
                            DesignatorName(
                             niz
                            ) [DesignatorName]
                          ) [DesignVar]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              NumFactor(
                               1
                              ) [NumFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [DesignArr]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      DesignArr(
                        DesignVar(
                          DesignatorName(
                           niz
                          ) [DesignatorName]
                        ) [DesignVar]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             2
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [DesignArr]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  PrintStmt(
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        DesignFactor(
                          DesignVar(
                            DesignatorName(
                             eol
                            ) [DesignatorName]
                          ) [DesignVar]
                          NoMethodCall(
                          ) [NoMethodCall]
                        ) [DesignFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                    DefaultWidth(
                    ) [DefaultWidth]
                  ) [PrintStmt]
                ) [OptionalStmt]
                PrintStmt(
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      DesignFactor(
                        DesignVar(
                          DesignatorName(
                           sum
                          ) [DesignatorName]
                        ) [DesignVar]
                        WithMethodCall(
                          WithActPars(
                            MultiActPars(
                              SingleActPars(
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    DesignFactor(
                                      DesignVar(
                                        DesignatorName(
                                         sum
                                        ) [DesignatorName]
                                      ) [DesignVar]
                                      WithMethodCall(
                                        WithActPars(
                                          MultiActPars(
                                            SingleActPars(
                                              Expression(
                                                Positive(
                                                ) [Positive]
                                                Terms(
                                                  DesignFactor(
                                                    DesignArr(
                                                      DesignVar(
                                                        DesignatorName(
                                                         niz
                                                        ) [DesignatorName]
                                                      ) [DesignVar]
                                                      Expression(
                                                        Positive(
                                                        ) [Positive]
                                                        Terms(
                                                          NumFactor(
                                                           0
                                                          ) [NumFactor]
                                                          NoMulFacts(
                                                          ) [NoMulFacts]
                                                        ) [Terms]
                                                        NoAddTerms(
                                                        ) [NoAddTerms]
                                                      ) [Expression]
                                                    ) [DesignArr]
                                                    NoMethodCall(
                                                    ) [NoMethodCall]
                                                  ) [DesignFactor]
                                                  NoMulFacts(
                                                  ) [NoMulFacts]
                                                ) [Terms]
                                                NoAddTerms(
                                                ) [NoAddTerms]
                                              ) [Expression]
                                            ) [SingleActPars]
                                            Expression(
                                              Positive(
                                              ) [Positive]
                                              Terms(
                                                DesignFactor(
                                                  DesignArr(
                                                    DesignVar(
                                                      DesignatorName(
                                                       niz
                                                      ) [DesignatorName]
                                                    ) [DesignVar]
                                                    Expression(
                                                      Positive(
                                                      ) [Positive]
                                                      Terms(
                                                        NumFactor(
                                                         1
                                                        ) [NumFactor]
                                                        NoMulFacts(
                                                        ) [NoMulFacts]
                                                      ) [Terms]
                                                      NoAddTerms(
                                                      ) [NoAddTerms]
                                                    ) [Expression]
                                                  ) [DesignArr]
                                                  NoMethodCall(
                                                  ) [NoMethodCall]
                                                ) [DesignFactor]
                                                NoMulFacts(
                                                ) [NoMulFacts]
                                              ) [Terms]
                                              NoAddTerms(
                                              ) [NoAddTerms]
                                            ) [Expression]
                                          ) [MultiActPars]
                                        ) [WithActPars]
                                      ) [WithMethodCall]
                                    ) [DesignFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [SingleActPars]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    DesignArr(
                                      DesignVar(
                                        DesignatorName(
                                         niz
                                        ) [DesignatorName]
                                      ) [DesignVar]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          NumFactor(
                                           2
                                          ) [NumFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [DesignArr]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [MultiActPars]
                          ) [WithActPars]
                        ) [WithMethodCall]
                      ) [DesignFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                  DefaultWidth(
                  ) [DefaultWidth]
                ) [PrintStmt]
              ) [OptionalStmt]
              PrintStmt(
                Expression(
                  Positive(
                  ) [Positive]
                  Terms(
                    DesignFactor(
                      DesignVar(
                        DesignatorName(
                         eol
                        ) [DesignatorName]
                      ) [DesignVar]
                      NoMethodCall(
                      ) [NoMethodCall]
                    ) [DesignFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  NoAddTerms(
                  ) [NoAddTerms]
                ) [Expression]
                DefaultWidth(
                ) [DefaultWidth]
              ) [PrintStmt]
            ) [OptionalStmt]
            PrintStmt(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  DesignFactor(
                    DesignVar(
                      DesignatorName(
                       inkrement
                      ) [DesignatorName]
                    ) [DesignVar]
                    WithMethodCall(
                      WithActPars(
                        MultiActPars(
                          SingleActPars(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  DesignArr(
                                    DesignVar(
                                      DesignatorName(
                                       niz
                                      ) [DesignatorName]
                                    ) [DesignVar]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         2
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [DesignArr]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [SingleActPars]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                DesignFld(
                                  DesignVar(
                                    DesignatorName(
                                     IncrementType
                                    ) [DesignatorName]
                                  ) [DesignVar]
                                 DOUBLE_VALUE
                                ) [DesignFld]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [MultiActPars]
                      ) [WithActPars]
                    ) [WithMethodCall]
                  ) [DesignFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
              DefaultWidth(
              ) [DefaultWidth]
            ) [PrintStmt]
          ) [OptionalStmt]
          ReturnStmt(
            NoRet(
            ) [NoRet]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
  ) [GlobalMeths]
) [Program]
INFO  03:18:15,284 - ===================================
INFO  03:18:15,285 - INFO:  Pocetak programa test302 na liniji 3
INFO  03:18:15,285 - INFO:  Definisan enum tip IncrementType na liniji 5
INFO  03:18:15,285 - INFO:  Deklarisana globalna promenljiva i na liniji 7
INFO  03:18:15,285 - INFO:  Deklarisana globalna promenljiva ibool na liniji 8
INFO  03:18:15,285 - INFO:  Deklarisan niz niz na liniji 10
INFO  03:18:15,285 - INFO:  Obradjuje se funkcija sum na liniji 13
INFO  03:18:15,285 - INFO:  Deklarisan formalni parametar z na liniji 13
INFO  03:18:15,285 - INFO:  Deklarisan formalni parametar d na liniji 13
INFO  03:18:15,285 - INFO:  Pristup simbolu z na liniji 15
INFO  03:18:15,285 - INFO:  Pristup simbolu d na liniji 15
INFO  03:18:15,286 - INFO:  Deklarisan metod sum na liniji 13
INFO  03:18:15,286 - INFO:  Obradjuje se funkcija inkrement na liniji 18
INFO  03:18:15,286 - INFO:  Deklarisan formalni parametar a na liniji 18
INFO  03:18:15,286 - INFO:  Deklarisan formalni parametar type na liniji 18
INFO  03:18:15,286 - INFO:  Deklarisana promenljiva pom na liniji 18
INFO  03:18:15,286 - INFO:  Pristup simbolu type na liniji 20
INFO  03:18:15,286 - INFO:  Pristup simbolu IncrementType na liniji 20
INFO  03:18:15,286 - INFO:  Pristup konstanti IncrementType.BY_ONE na liniji 20
INFO  03:18:15,286 - INFO:  Pristup simbolu pom na liniji 20
INFO  03:18:15,286 - INFO:  Pristup simbolu type na liniji 21
INFO  03:18:15,286 - INFO:  Pristup simbolu IncrementType na liniji 21
INFO  03:18:15,286 - INFO:  Pristup konstanti IncrementType.DOUBLE_VALUE na liniji 21
INFO  03:18:15,286 - INFO:  Pristup simbolu pom na liniji 21
INFO  03:18:15,286 - INFO:  Pristup simbolu a na liniji 21
INFO  03:18:15,286 - INFO:  Pristup metodi sum na liniji 23
INFO  03:18:15,286 - INFO:  Pristup simbolu a na liniji 23
INFO  03:18:15,286 - INFO:  Pristup simbolu pom na liniji 23
INFO  03:18:15,286 - INFO:  Pozvana metoda sum na liniji 23
INFO  03:18:15,286 - INFO:  Deklarisan metod inkrement na liniji 18
INFO  03:18:15,286 - INFO:  Obradjuje se funkcija main na liniji 26
INFO  03:18:15,286 - INFO:  Poziv PRINT funkcije na liniji 28
INFO  03:18:15,286 - INFO:  Poziv PRINT funkcije na liniji 12
INFO  03:18:15,286 - INFO:  Pristup simbolu ibool na liniji 31
INFO  03:18:15,286 - INFO:  Pristup simbolu i na liniji 32
INFO  03:18:15,286 - INFO:  Pristup simbolu i na liniji 33
INFO  03:18:15,286 - INFO:  Pristup simbolu i na liniji 33
INFO  03:18:15,286 - INFO:  Pristup simbolu i na liniji 33
INFO  03:18:15,286 - INFO:  Pristup simbolu i na liniji 35
INFO  03:18:15,286 - INFO:  Pristup simbolu ibool na liniji 35
INFO  03:18:15,286 - INFO:  Pristup simbolu ibool na liniji 39
INFO  03:18:15,286 - INFO:  Pristup simbolu i na liniji 40
INFO  03:18:15,286 - INFO:  Poziv PRINT funkcije na liniji 19
INFO  03:18:15,286 - INFO:  Poziv PRINT funkcije na liniji 41
INFO  03:18:15,286 - INFO:  Pristup simbolu niz na liniji 45
INFO  03:18:15,286 - INFO:  Pristup simbolu niz na liniji 46
INFO  03:18:15,286 - INFO:  Pristup elementu niza niz na liniji 46
INFO  03:18:15,286 - INFO:  Poziv PRINT funkcije na liniji 23
INFO  03:18:15,286 - INFO:  Poziv PRINT funkcije na liniji 12
INFO  03:18:15,290 - INFO:  Pristup simbolu eol na liniji 50
INFO  03:18:15,290 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  03:18:15,290 - INFO:  Pristup simbolu i na liniji 51
INFO  03:18:15,290 - INFO:  Pristup simbolu i na liniji 52
INFO  03:18:15,290 - INFO:  Pristup simbolu i na liniji 54
INFO  03:18:15,290 - INFO:  Pristup simbolu i na liniji 56
INFO  03:18:15,290 - INFO:  Pristup simbolu i na liniji 59
INFO  03:18:15,290 - INFO:  Pristup simbolu i na liniji 60
INFO  03:18:15,290 - INFO:  Pristup metodi inkrement na liniji 60
INFO  03:18:15,290 - INFO:  Pristup simbolu i na liniji 60
INFO  03:18:15,290 - INFO:  Pristup simbolu IncrementType na liniji 60
INFO  03:18:15,290 - INFO:  Pristup konstanti IncrementType.BY_ONE na liniji 60
INFO  03:18:15,290 - INFO:  Pozvana metoda inkrement na liniji 60
INFO  03:18:15,290 - INFO:  Pristup simbolu i na liniji 63
INFO  03:18:15,290 - INFO:  Poziv PRINT funkcije na liniji 18
INFO  03:18:15,290 - INFO:  Poziv PRINT funkcije na liniji 64
INFO  03:18:15,290 - INFO:  Pristup simbolu niz na liniji 66
INFO  03:18:15,290 - INFO:  Pristup elementu niza niz na liniji 66
INFO  03:18:15,290 - INFO:  Poziv READ funkcije na liniji 66
INFO  03:18:15,290 - INFO:  Pristup simbolu niz na liniji 67
INFO  03:18:15,290 - INFO:  Pristup elementu niza niz na liniji 67
INFO  03:18:15,290 - INFO:  Poziv READ funkcije na liniji 67
INFO  03:18:15,290 - INFO:  Pristup simbolu niz na liniji 68
INFO  03:18:15,290 - INFO:  Pristup elementu niza niz na liniji 68
INFO  03:18:15,290 - INFO:  Poziv READ funkcije na liniji 68
INFO  03:18:15,290 - INFO:  Pristup simbolu eol na liniji 69
INFO  03:18:15,290 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  03:18:15,290 - INFO:  Pristup metodi sum na liniji 71
INFO  03:18:15,290 - INFO:  Pristup metodi sum na liniji 71
INFO  03:18:15,290 - INFO:  Pristup simbolu niz na liniji 71
INFO  03:18:15,290 - INFO:  Pristup elementu niza niz na liniji 71
INFO  03:18:15,290 - INFO:  Pristup simbolu niz na liniji 71
INFO  03:18:15,290 - INFO:  Pristup elementu niza niz na liniji 71
INFO  03:18:15,290 - INFO:  Pozvana metoda sum na liniji 71
INFO  03:18:15,290 - INFO:  Pristup simbolu niz na liniji 71
INFO  03:18:15,290 - INFO:  Pristup elementu niza niz na liniji 71
INFO  03:18:15,290 - INFO:  Pozvana metoda sum na liniji 71
INFO  03:18:15,290 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  03:18:15,290 - INFO:  Pristup simbolu eol na liniji 73
INFO  03:18:15,290 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  03:18:15,290 - INFO:  Pristup metodi inkrement na liniji 75
INFO  03:18:15,290 - INFO:  Pristup simbolu niz na liniji 75
INFO  03:18:15,290 - INFO:  Pristup elementu niza niz na liniji 75
INFO  03:18:15,290 - INFO:  Pristup simbolu IncrementType na liniji 75
INFO  03:18:15,295 - INFO:  Pristup konstanti IncrementType.DOUBLE_VALUE na liniji 75
INFO  03:18:15,295 - INFO:  Pozvana metoda inkrement na liniji 75
INFO  03:18:15,295 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  03:18:15,296 - INFO:  Deklarisan metod main na liniji 26
INFO  03:18:15,296 - ===================================
INFO  03:18:15,305 - Uspesno parsiranje!
