INFO  02:14:35,694 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  02:14:35,878 - #2 program
INFO  02:14:35,878 - #45 SemanticTest
INFO  02:14:35,879 - #22 const
INFO  02:14:35,881 - #45 int
INFO  02:14:35,882 - #45 x
INFO  02:14:35,883 - #12 =
INFO  02:14:35,883 - #42 5
INFO  02:14:35,883 - #8 ,
INFO  02:14:35,885 - #45 init
INFO  02:14:35,885 - #12 =
INFO  02:14:35,885 - #42 0
INFO  02:14:35,886 - #5 ;
INFO  02:14:35,886 - #22 const
INFO  02:14:35,887 - #45 bool
INFO  02:14:35,887 - #45 b
INFO  02:14:35,887 - #12 =
INFO  02:14:35,887 - #44 false
INFO  02:14:35,887 - #5 ;
INFO  02:14:35,888 - #45 int
INFO  02:14:35,888 - #45 x1
INFO  02:14:35,889 - #5 ;
INFO  02:14:35,891 - #45 char
INFO  02:14:35,892 - #45 x2
INFO  02:14:35,892 - #25 [
INFO  02:14:35,892 - #34 ]
INFO  02:14:35,892 - #5 ;
INFO  02:14:35,893 - #29 enum
INFO  02:14:35,893 - #45 nums
INFO  02:14:35,893 - #3 {
INFO  02:14:35,894 - #45 ONE
INFO  02:14:35,894 - #12 =
INFO  02:14:35,894 - #42 1
INFO  02:14:35,894 - #8 ,
INFO  02:14:35,894 - #45 TWO
INFO  02:14:35,895 - #12 =
INFO  02:14:35,895 - #42 5
INFO  02:14:35,895 - #8 ,
INFO  02:14:35,895 - #45 THREE
INFO  02:14:35,895 - #4 }
INFO  02:14:35,896 - #16 class
INFO  02:14:35,896 - #45 A
INFO  02:14:35,896 - #3 {
INFO  02:14:35,900 - #45 int
INFO  02:14:35,901 - #45 fld1
INFO  02:14:35,901 - #5 ;
INFO  02:14:35,901 - #13 void
ERROR 02:14:35,901 - 
Sintaksna greska na liniji 14
INFO  02:14:35,901 - #45 meth1
INFO  02:14:35,901 - #6 (
INFO  02:14:35,901 - #7 )
INFO  02:14:35,903 - #5 ;
INFO  02:14:35,903 - #4 }
INFO  02:14:35,903 - #14 interface
INFO  02:14:35,903 - #45 I
ERROR 02:14:35,903 - Greska pri definiciji globalne promenljive. Izvrsen oporavak u liniji 13
INFO  02:14:35,906 - #3 {
INFO  02:14:35,906 - #45 int
INFO  02:14:35,907 - #45 x
INFO  02:14:35,907 - #6 (
INFO  02:14:35,907 - #7 )
INFO  02:14:35,908 - #5 ;
INFO  02:14:35,908 - #13 void
INFO  02:14:35,909 - #45 p
INFO  02:14:35,910 - #6 (
INFO  02:14:35,910 - #7 )
INFO  02:14:35,910 - #5 ;
INFO  02:14:35,910 - #4 }
INFO  02:14:35,911 - #3 {
INFO  02:14:35,911 - #45 int
INFO  02:14:35,912 - #45 main
INFO  02:14:35,912 - #6 (
INFO  02:14:35,914 - #7 )
INFO  02:14:35,914 - #3 {
INFO  02:14:35,914 - #45 x1
INFO  02:14:35,915 - #12 =
INFO  02:14:35,915 - #45 nums
INFO  02:14:35,919 - #15 .
INFO  02:14:35,919 - #45 TWO
INFO  02:14:35,919 - #5 ;
INFO  02:14:35,922 - #45 x2
INFO  02:14:35,923 - #25 [
INFO  02:14:35,923 - #42 0
INFO  02:14:35,923 - #34 ]
INFO  02:14:35,923 - #12 =
INFO  02:14:35,924 - #45 nums
INFO  02:14:35,924 - #15 .
INFO  02:14:35,924 - #45 ONE
INFO  02:14:35,924 - #5 ;
INFO  02:14:35,924 - #9 print
INFO  02:14:35,924 - #6 (
INFO  02:14:35,924 - #45 x1
INFO  02:14:35,924 - #7 )
INFO  02:14:35,926 - #5 ;
INFO  02:14:35,926 - #10 return
INFO  02:14:35,926 - #42 0
INFO  02:14:35,927 - #5 ;
INFO  02:14:35,928 - #4 }
INFO  02:14:35,928 - #4 }
INFO  02:14:35,970 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              VarDeclLists(
                NoVarDecl(
                ) [NoVarDecl]
                ConstDeclaration(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    MultipleConsts(
                      SingleConst(
                        ConstItem(
                         x
                          InitializerNum(
                           5
                          ) [InitializerNum]
                        ) [ConstItem]
                      ) [SingleConst]
                      ConstItem(
                       init
                        InitializerNum(
                         0
                        ) [InitializerNum]
                      ) [ConstItem]
                    ) [MultipleConsts]
                  ) [ConstDeclarations]
                ) [ConstDeclaration]
              ) [VarDeclLists]
              ConstDeclaration(
                ConstDeclarations(
                  Type(
                   bool
                  ) [Type]
                  SingleConst(
                    ConstItem(
                     b
                      InitializerBool(
                       false
                      ) [InitializerBool]
                    ) [ConstItem]
                  ) [SingleConst]
                ) [ConstDeclarations]
              ) [ConstDeclaration]
            ) [VarDeclLists]
            VarDeclaration(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   x1
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [VarDeclaration]
          ) [VarDeclLists]
          VarDeclaration(
            VarDeclarations(
              Type(
               char
              ) [Type]
              SingleVar(
                Var(
                 x2
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [VarDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             nums
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  InitEnum(
                   ONE
                   1
                  ) [InitEnum]
                ) [SingleEnum]
                InitEnum(
                 TWO
                 5
                ) [InitEnum]
              ) [MultipleEnums]
              NoInitEnum(
               THREE
              ) [NoInitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           A
          ) [ClassName]
          NoSuperClass(
          ) [NoSuperClass]
          NoImplInteraces(
          ) [NoImplInteraces]
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                VarDefError(
                ) [VarDefError]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
        InterName(
         I
        ) [InterName]
        OptInterMethodDeclList(
          InterfaceMethodDeclarations(
            SingleInterfaceMethodDeclaration(
              InterfaceMethodDeclaration(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               x
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
              ) [InterfaceMethodDeclaration]
            ) [SingleInterfaceMethodDeclaration]
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             p
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [InterfaceMethodDeclarations]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        TypeIdentificator(
          Type(
           int
          ) [Type]
        ) [TypeIdentificator]
       main
      ) [MethodDeclTypeName]
      NoOptionalFormPars(
      ) [NoOptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              NoOptionalStmt(
              ) [NoOptionalStmt]
              DesignatorStmt(
                AssignOper(
                  DesignVar(
                    DesignatorName(
                     x1
                    ) [DesignatorName]
                  ) [DesignVar]
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      DesignFactor(
                        DesignFld(
                          DesignVar(
                            DesignatorName(
                             nums
                            ) [DesignatorName]
                          ) [DesignVar]
                         TWO
                        ) [DesignFld]
                        NoMethodCall(
                        ) [NoMethodCall]
                      ) [DesignFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                ) [AssignOper]
              ) [DesignatorStmt]
            ) [OptionalStmt]
            DesignatorStmt(
              AssignOper(
                DesignArr(
                  DesignVar(
                    DesignatorName(
                     x2
                    ) [DesignatorName]
                  ) [DesignVar]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      NumFactor(
                       0
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                ) [DesignArr]
                AssignOperation(
                ) [AssignOperation]
                Expression(
                  Positive(
                  ) [Positive]
                  Terms(
                    DesignFactor(
                      DesignFld(
                        DesignVar(
                          DesignatorName(
                           nums
                          ) [DesignatorName]
                        ) [DesignVar]
                       ONE
                      ) [DesignFld]
                      NoMethodCall(
                      ) [NoMethodCall]
                    ) [DesignFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  NoAddTerms(
                  ) [NoAddTerms]
                ) [Expression]
              ) [AssignOper]
            ) [DesignatorStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  DesignVar(
                    DesignatorName(
                     x1
                    ) [DesignatorName]
                  ) [DesignVar]
                  NoMethodCall(
                  ) [NoMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        ReturnStmt(
          OptRetExprDerived1(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                NumFactor(
                 0
                ) [NumFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
          ) [OptRetExprDerived1]
        ) [ReturnStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  02:14:35,971 - ===================================
INFO  02:14:35,979 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  02:14:35,980 - INFO:  Deklarisana konstanta x na liniji 6
INFO  02:14:35,980 - INFO:  Deklarisana konstanta init na liniji 6
INFO  02:14:35,980 - INFO:  Deklarisana konstanta b na liniji 7
INFO  02:14:35,980 - INFO:  Deklarisana globalna promenljiva x1 na liniji 8
INFO  02:14:35,980 - INFO:  Deklarisan niz x2 na liniji 9
