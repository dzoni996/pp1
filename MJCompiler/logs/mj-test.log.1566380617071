INFO  11:42:28,310 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  11:42:28,599 - #2 program
INFO  11:42:28,599 - #45 SemanticTest
INFO  11:42:28,600 - #22 const
INFO  11:42:28,602 - #45 int
INFO  11:42:28,602 - #45 x
INFO  11:42:28,602 - #12 =
INFO  11:42:28,605 - #42 5
INFO  11:42:28,605 - #8 ,
INFO  11:42:28,614 - #45 init
INFO  11:42:28,614 - #12 =
INFO  11:42:28,614 - #42 0
INFO  11:42:28,614 - #5 ;
INFO  11:42:28,614 - #22 const
INFO  11:42:28,617 - #45 bool
INFO  11:42:28,617 - #45 b
INFO  11:42:28,618 - #12 =
INFO  11:42:28,618 - #44 false
INFO  11:42:28,618 - #5 ;
INFO  11:42:28,618 - #45 int
INFO  11:42:28,618 - #45 x1
INFO  11:42:28,618 - #5 ;
INFO  11:42:28,621 - #45 char
INFO  11:42:28,624 - #45 x2
INFO  11:42:28,624 - #25 [
INFO  11:42:28,624 - #34 ]
INFO  11:42:28,624 - #5 ;
INFO  11:42:28,625 - #29 enum
INFO  11:42:28,626 - #45 nums
INFO  11:42:28,626 - #3 {
INFO  11:42:28,626 - #45 ONE
INFO  11:42:28,628 - #12 =
INFO  11:42:28,628 - #42 1
INFO  11:42:28,629 - #8 ,
INFO  11:42:28,630 - #45 TWO
INFO  11:42:28,630 - #12 =
INFO  11:42:28,630 - #42 5
INFO  11:42:28,630 - #8 ,
INFO  11:42:28,630 - #45 THREE
INFO  11:42:28,630 - #4 }
INFO  11:42:28,631 - #16 class
INFO  11:42:28,632 - #45 A
INFO  11:42:28,633 - #3 {
INFO  11:42:28,636 - #45 int
INFO  11:42:28,636 - #45 fld1
INFO  11:42:28,636 - #5 ;
INFO  11:42:28,636 - #13 void
ERROR 11:42:28,636 - 
Sintaksna greska na liniji 14
INFO  11:42:28,636 - #45 meth1
INFO  11:42:28,639 - #6 (
INFO  11:42:28,642 - #7 )
INFO  11:42:28,646 - #5 ;
INFO  11:42:28,646 - #4 }
INFO  11:42:28,646 - #14 interface
INFO  11:42:28,646 - #45 I
ERROR 11:42:28,646 - Greska pri definiciji globalne promenljive. Izvrsen oporavak u liniji 13
INFO  11:42:28,650 - #3 {
INFO  11:42:28,651 - #45 int
INFO  11:42:28,651 - #45 x
INFO  11:42:28,651 - #6 (
INFO  11:42:28,652 - #7 )
INFO  11:42:28,653 - #5 ;
INFO  11:42:28,653 - #13 void
INFO  11:42:28,653 - #45 p
INFO  11:42:28,657 - #6 (
INFO  11:42:28,657 - #7 )
INFO  11:42:28,657 - #5 ;
INFO  11:42:28,657 - #4 }
INFO  11:42:28,657 - #3 {
INFO  11:42:28,660 - #45 int
INFO  11:42:28,663 - #45 inc
INFO  11:42:28,663 - #6 (
INFO  11:42:28,665 - #45 int
INFO  11:42:28,665 - #45 n
INFO  11:42:28,665 - #8 ,
INFO  11:42:28,666 - #45 char
INFO  11:42:28,666 - #45 add
INFO  11:42:28,666 - #7 )
INFO  11:42:28,666 - #3 {
INFO  11:42:28,666 - #10 return
INFO  11:42:28,667 - #45 n
INFO  11:42:28,669 - #11 +
INFO  11:42:28,673 - #42 1
INFO  11:42:28,675 - #5 ;
INFO  11:42:28,676 - #4 }
INFO  11:42:28,676 - #45 int
INFO  11:42:28,677 - #45 main1
INFO  11:42:28,678 - #6 (
INFO  11:42:28,678 - #7 )
INFO  11:42:28,678 - #3 {
INFO  11:42:28,678 - #45 x1
INFO  11:42:28,678 - #12 =
INFO  11:42:28,678 - #45 nums
INFO  11:42:28,680 - #15 .
INFO  11:42:28,681 - #45 TWO
INFO  11:42:28,681 - #5 ;
INFO  11:42:28,681 - #45 x2
INFO  11:42:28,682 - #25 [
INFO  11:42:28,682 - #42 0
INFO  11:42:28,682 - #34 ]
INFO  11:42:28,684 - #12 =
INFO  11:42:28,691 - #45 nums
INFO  11:42:28,692 - #15 .
INFO  11:42:28,693 - #45 ONE
INFO  11:42:28,694 - #5 ;
INFO  11:42:28,694 - #45 x2
INFO  11:42:28,694 - #25 [
INFO  11:42:28,694 - #42 1
INFO  11:42:28,694 - #34 ]
INFO  11:42:28,694 - #12 =
INFO  11:42:28,696 - #45 inc
INFO  11:42:28,696 - #6 (
INFO  11:42:28,696 - #42 2
INFO  11:42:28,697 - #8 ,
INFO  11:42:28,697 - #43 a
INFO  11:42:28,697 - #7 )
INFO  11:42:28,698 - #5 ;
INFO  11:42:28,698 - #9 print
INFO  11:42:28,698 - #6 (
INFO  11:42:28,698 - #45 x1
INFO  11:42:28,699 - #7 )
INFO  11:42:28,701 - #5 ;
INFO  11:42:28,701 - #10 return
INFO  11:42:28,702 - #42 0
INFO  11:42:28,702 - #5 ;
INFO  11:42:28,702 - #4 }
INFO  11:42:28,702 - #4 }
INFO  11:42:28,746 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              VarDeclLists(
                NoVarDecl(
                ) [NoVarDecl]
                ConstDeclaration(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    MultipleConsts(
                      SingleConst(
                        ConstItem(
                         x
                          InitializerNum(
                           5
                          ) [InitializerNum]
                        ) [ConstItem]
                      ) [SingleConst]
                      ConstItem(
                       init
                        InitializerNum(
                         0
                        ) [InitializerNum]
                      ) [ConstItem]
                    ) [MultipleConsts]
                  ) [ConstDeclarations]
                ) [ConstDeclaration]
              ) [VarDeclLists]
              ConstDeclaration(
                ConstDeclarations(
                  Type(
                   bool
                  ) [Type]
                  SingleConst(
                    ConstItem(
                     b
                      InitializerBool(
                       false
                      ) [InitializerBool]
                    ) [ConstItem]
                  ) [SingleConst]
                ) [ConstDeclarations]
              ) [ConstDeclaration]
            ) [VarDeclLists]
            VarDeclaration(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   x1
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [VarDeclaration]
          ) [VarDeclLists]
          VarDeclaration(
            VarDeclarations(
              Type(
               char
              ) [Type]
              SingleVar(
                Var(
                 x2
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [VarDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             nums
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  InitEnum(
                   ONE
                   1
                  ) [InitEnum]
                ) [SingleEnum]
                InitEnum(
                 TWO
                 5
                ) [InitEnum]
              ) [MultipleEnums]
              NoInitEnum(
               THREE
              ) [NoInitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           A
          ) [ClassName]
          NoSuperClass(
          ) [NoSuperClass]
          NoImplInteraces(
          ) [NoImplInteraces]
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                VarDefError(
                ) [VarDefError]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          NoClassMethodDecl(
          ) [NoClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
        InterName(
         I
        ) [InterName]
        OptInterMethodDeclList(
          InterfaceMethodDeclarations(
            SingleInterfaceMethodDeclaration(
              InterfaceMethodDeclaration(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               x
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
              ) [InterfaceMethodDeclaration]
            ) [SingleInterfaceMethodDeclaration]
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             p
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [InterfaceMethodDeclarations]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    OptMethods(
      NoOptMethods(
      ) [NoOptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          TypeIdentificator(
            Type(
             int
            ) [Type]
          ) [TypeIdentificator]
         inc
        ) [MethodDeclTypeName]
        OptionalFormPars(
          MultipleFormPars(
            SingleFormPars(
              FormParItem(
                Type(
                 int
                ) [Type]
               n
                NoArrayVar(
                ) [NoArrayVar]
              ) [FormParItem]
            ) [SingleFormPars]
            FormParItem(
              Type(
               char
              ) [Type]
             add
              NoArrayVar(
              ) [NoArrayVar]
            ) [FormParItem]
          ) [MultipleFormPars]
        ) [OptionalFormPars]
        NoOptVars(
        ) [NoOptVars]
        OptionalStmt(
          NoOptionalStmt(
          ) [NoOptionalStmt]
          ReturnStmt(
            OptRetExprDerived1(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  DesignFactor(
                    DesignVar(
                      DesignatorName(
                       n
                      ) [DesignatorName]
                    ) [DesignVar]
                    NoMethodCall(
                    ) [NoMethodCall]
                  ) [DesignFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                WithAddTerms(
                  NoAddTerms(
                  ) [NoAddTerms]
                  PlusOp(
                  ) [PlusOp]
                  Terms(
                    NumFactor(
                     1
                    ) [NumFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                ) [WithAddTerms]
              ) [Expression]
            ) [OptRetExprDerived1]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        TypeIdentificator(
          Type(
           int
          ) [Type]
        ) [TypeIdentificator]
       main1
      ) [MethodDeclTypeName]
      NoOptionalFormPars(
      ) [NoOptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                NoOptionalStmt(
                ) [NoOptionalStmt]
                DesignatorStmt(
                  AssignOper(
                    DesignVar(
                      DesignatorName(
                       x1
                      ) [DesignatorName]
                    ) [DesignVar]
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        DesignFactor(
                          DesignFld(
                            DesignVar(
                              DesignatorName(
                               nums
                              ) [DesignatorName]
                            ) [DesignVar]
                           TWO
                          ) [DesignFld]
                          NoMethodCall(
                          ) [NoMethodCall]
                        ) [DesignFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              DesignatorStmt(
                AssignOper(
                  DesignArr(
                    DesignVar(
                      DesignatorName(
                       x2
                      ) [DesignatorName]
                    ) [DesignVar]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [DesignArr]
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      DesignFactor(
                        DesignFld(
                          DesignVar(
                            DesignatorName(
                             nums
                            ) [DesignatorName]
                          ) [DesignVar]
                         ONE
                        ) [DesignFld]
                        NoMethodCall(
                        ) [NoMethodCall]
                      ) [DesignFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                ) [AssignOper]
              ) [DesignatorStmt]
            ) [OptionalStmt]
            DesignatorStmt(
              AssignOper(
                DesignArr(
                  DesignVar(
                    DesignatorName(
                     x2
                    ) [DesignatorName]
                  ) [DesignVar]
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      NumFactor(
                       1
                      ) [NumFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                ) [DesignArr]
                AssignOperation(
                ) [AssignOperation]
                Expression(
                  Positive(
                  ) [Positive]
                  Terms(
                    DesignFactor(
                      DesignVar(
                        DesignatorName(
                         inc
                        ) [DesignatorName]
                      ) [DesignVar]
                      WithMethodCall(
                        WithActPars(
                          MultiActPars(
                            SingleActPars(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [SingleActPars]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                CharFactor(
                                 a
                                ) [CharFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [MultiActPars]
                        ) [WithActPars]
                      ) [WithMethodCall]
                    ) [DesignFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  NoAddTerms(
                  ) [NoAddTerms]
                ) [Expression]
              ) [AssignOper]
            ) [DesignatorStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  DesignVar(
                    DesignatorName(
                     x1
                    ) [DesignatorName]
                  ) [DesignVar]
                  NoMethodCall(
                  ) [NoMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        ReturnStmt(
          OptRetExprDerived1(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                NumFactor(
                 0
                ) [NumFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
          ) [OptRetExprDerived1]
        ) [ReturnStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  11:42:28,754 - ===================================
INFO  11:42:28,754 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  11:42:28,754 - INFO:  Deklarisana konstanta x na liniji 6
INFO  11:42:28,754 - INFO:  Deklarisana konstanta init na liniji 6
INFO  11:42:28,755 - INFO:  Deklarisana konstanta b na liniji 7
INFO  11:42:28,755 - INFO:  Deklarisana globalna promenljiva x1 na liniji 8
INFO  11:42:28,755 - INFO:  Deklarisan niz x2 na liniji 9
INFO  11:42:28,755 - INFO:  Definisan enum tip nums na liniji 10
INFO  11:42:28,755 - INFO:  Definisana klasa A na liniji 12
INFO  11:42:28,756 - INFO:  Deklarisan metod x u interfejsu na liniji 18
INFO  11:42:28,756 - INFO:  Deklarisan metod p u interfejsu na liniji 19
INFO  11:42:28,756 - INFO:  Definisan interfejs I na liniji 17
INFO  11:42:28,756 - INFO:  Deklarisan formalni parametar n na liniji 23
INFO  11:42:28,756 - INFO:  Deklarisan formalni parametar add na liniji 23
INFO  11:42:28,756 - INFO:  Pristup simbolu n na liniji 24
INFO  11:42:28,757 - INFO:  Deklarisan metod inc na liniji 23
INFO  11:42:28,757 - INFO:  Pristup simbolu x1 na liniji 29
INFO  11:42:28,757 - INFO:  Pristup simbolu nums na liniji 29
INFO  11:42:28,757 - INFO:  Pristup konstanti nums.TWO na liniji 29
INFO  11:42:28,757 - INFO:  Pristup simbolu x2 na liniji 30
