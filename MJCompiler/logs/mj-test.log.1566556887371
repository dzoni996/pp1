INFO  12:38:05,165 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\mytest.mj
INFO  12:38:05,258 - #2 program
INFO  12:38:05,258 - #45 SemanticTest
INFO  12:38:05,262 - #22 const
INFO  12:38:05,263 - #45 int
INFO  12:38:05,263 - #45 x
INFO  12:38:05,264 - #12 =
INFO  12:38:05,264 - #42 5
INFO  12:38:05,264 - #8 ,
INFO  12:38:05,265 - #45 init
INFO  12:38:05,265 - #12 =
INFO  12:38:05,266 - #42 0
INFO  12:38:05,266 - #5 ;
INFO  12:38:05,266 - #45 int
INFO  12:38:05,266 - #45 x1
INFO  12:38:05,266 - #5 ;
INFO  12:38:05,267 - #45 int
INFO  12:38:05,268 - #45 x2
INFO  12:38:05,268 - #25 [
INFO  12:38:05,268 - #34 ]
INFO  12:38:05,268 - #5 ;
INFO  12:38:05,268 - #29 enum
INFO  12:38:05,269 - #45 nums
INFO  12:38:05,270 - #3 {
INFO  12:38:05,270 - #45 ONE
INFO  12:38:05,270 - #12 =
INFO  12:38:05,270 - #42 1
INFO  12:38:05,270 - #8 ,
INFO  12:38:05,270 - #45 TWO
INFO  12:38:05,270 - #12 =
INFO  12:38:05,270 - #42 5
INFO  12:38:05,271 - #8 ,
INFO  12:38:05,271 - #45 THREE
INFO  12:38:05,271 - #4 }
INFO  12:38:05,271 - #3 {
INFO  12:38:05,271 - #13 void
INFO  12:38:05,272 - #45 printf
INFO  12:38:05,272 - #6 (
INFO  12:38:05,273 - #45 int
INFO  12:38:05,273 - #45 a
INFO  12:38:05,273 - #7 )
INFO  12:38:05,273 - #3 {
INFO  12:38:05,274 - #9 print
INFO  12:38:05,275 - #6 (
INFO  12:38:05,275 - #45 a
INFO  12:38:05,276 - #7 )
INFO  12:38:05,278 - #5 ;
INFO  12:38:05,279 - #4 }
INFO  12:38:05,279 - #45 int
INFO  12:38:05,279 - #45 main
INFO  12:38:05,279 - #6 (
INFO  12:38:05,279 - #7 )
INFO  12:38:05,280 - #45 int
INFO  12:38:05,280 - #45 var
INFO  12:38:05,280 - #5 ;
INFO  12:38:05,280 - #3 {
INFO  12:38:05,280 - #45 var
INFO  12:38:05,280 - #12 =
INFO  12:38:05,280 - #42 10
INFO  12:38:05,281 - #5 ;
INFO  12:38:05,281 - #45 printf
INFO  12:38:05,281 - #6 (
INFO  12:38:05,281 - #42 0
INFO  12:38:05,281 - #7 )
INFO  12:38:05,282 - #5 ;
INFO  12:38:05,283 - #9 print
INFO  12:38:05,283 - #6 (
INFO  12:38:05,283 - #45 var
INFO  12:38:05,283 - #7 )
INFO  12:38:05,283 - #5 ;
INFO  12:38:05,283 - #10 return
INFO  12:38:05,283 - #42 0
INFO  12:38:05,283 - #5 ;
INFO  12:38:05,283 - #4 }
INFO  12:38:05,283 - #4 }
INFO  12:38:05,292 - Program(
  ProgName(
   SemanticTest
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          NoVarDecl(
          ) [NoVarDecl]
          ConstDeclaration(
            ConstDeclarations(
              Type(
               int
              ) [Type]
              MultipleConsts(
                SingleConst(
                  ConstItem(
                   x
                    InitializerNum(
                     5
                    ) [InitializerNum]
                  ) [ConstItem]
                ) [SingleConst]
                ConstItem(
                 init
                  InitializerNum(
                   0
                  ) [InitializerNum]
                ) [ConstItem]
              ) [MultipleConsts]
            ) [ConstDeclarations]
          ) [ConstDeclaration]
        ) [VarDeclLists]
        VarDeclaration(
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               x1
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [VarDeclaration]
      ) [VarDeclLists]
      VarDeclaration(
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             x2
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [VarDeclaration]
    ) [VarDeclLists]
    EnumDeclaration(
      EnumDeclarations(
        EnumNamed(
         nums
        ) [EnumNamed]
        MultipleEnums(
          MultipleEnums(
            SingleEnum(
              InitEnum(
               ONE
               1
              ) [InitEnum]
            ) [SingleEnum]
            InitEnum(
             TWO
             5
            ) [InitEnum]
          ) [MultipleEnums]
          NoInitEnum(
           THREE
          ) [NoInitEnum]
        ) [MultipleEnums]
      ) [EnumDeclarations]
    ) [EnumDeclaration]
  ) [VarDeclLists]
  GlobalMeths(
    OptMethods(
      OptMethods(
        NoOptMethods(
        ) [NoOptMethods]
        MethodDeclarations(
          MethodDeclTypeName(
            VoidIdentificator(
            ) [VoidIdentificator]
           printf
          ) [MethodDeclTypeName]
          OptionalFormPars(
            SingleFormPars(
              FormParItem(
                Type(
                 int
                ) [Type]
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [FormParItem]
            ) [SingleFormPars]
          ) [OptionalFormPars]
          NoOptVars(
          ) [NoOptVars]
          OptionalStmt(
            NoOptionalStmt(
            ) [NoOptionalStmt]
            PrintStmt(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  DesignFactor(
                    DesignVar(
                      DesignatorName(
                       a
                      ) [DesignatorName]
                    ) [DesignVar]
                    NoMethodCall(
                    ) [NoMethodCall]
                  ) [DesignFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
              OptNumConstDerived2(
              ) [OptNumConstDerived2]
            ) [PrintStmt]
          ) [OptionalStmt]
        ) [MethodDeclarations]
      ) [OptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          TypeIdentificator(
            Type(
             int
            ) [Type]
          ) [TypeIdentificator]
         main
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        OptVars(
          NoOptVars(
          ) [NoOptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               var
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                NoOptionalStmt(
                ) [NoOptionalStmt]
                DesignatorStmt(
                  AssignOper(
                    DesignVar(
                      DesignatorName(
                       var
                      ) [DesignatorName]
                    ) [DesignVar]
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         10
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              DesignatorStmt(
                ProcCall(
                  DesignVar(
                    DesignatorName(
                     printf
                    ) [DesignatorName]
                  ) [DesignVar]
                  WithActPars(
                    SingleActPars(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NumFactor(
                           0
                          ) [NumFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [SingleActPars]
                  ) [WithActPars]
                ) [ProcCall]
              ) [DesignatorStmt]
            ) [OptionalStmt]
            PrintStmt(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  DesignFactor(
                    DesignVar(
                      DesignatorName(
                       var
                      ) [DesignatorName]
                    ) [DesignVar]
                    NoMethodCall(
                    ) [NoMethodCall]
                  ) [DesignFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
              OptNumConstDerived2(
              ) [OptNumConstDerived2]
            ) [PrintStmt]
          ) [OptionalStmt]
          ReturnStmt(
            RetExpr(
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  NumFactor(
                   0
                  ) [NumFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
            ) [RetExpr]
          ) [ReturnStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
  ) [GlobalMeths]
) [Program]
INFO  12:38:05,292 - ===================================
INFO  12:38:05,292 - INFO:  Pocetak programa SemanticTest na liniji 4
INFO  12:38:05,293 - INFO:  Deklarisana konstanta x na liniji 6
INFO  12:38:05,293 - INFO:  Deklarisana konstanta init na liniji 6
INFO  12:38:05,293 - INFO:  Deklarisana globalna promenljiva x1 na liniji 7
INFO  12:38:05,293 - INFO:  Deklarisan niz x2 na liniji 8
INFO  12:38:05,293 - INFO:  Definisan enum tip nums na liniji 9
INFO  12:38:05,293 - INFO:  Obradjuje se funkcija printf na liniji 12
INFO  12:38:05,293 - INFO:  Deklarisan formalni parametar a na liniji 12
INFO  12:38:05,293 - INFO:  Pristup simbolu a na liniji 13
INFO  12:38:05,294 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  12:38:05,294 - INFO:  Deklarisan metod printf na liniji 12
INFO  12:38:05,294 - INFO:  Obradjuje se funkcija main na liniji 18
INFO  12:38:05,294 - INFO:  Deklarisana promenljiva var na liniji 18
INFO  12:38:05,294 - INFO:  Pristup simbolu var na liniji 19
INFO  12:38:05,294 - INFO:  Pristup metodi printf na liniji 21
INFO  12:38:05,294 - INFO:  Pozvana metoda printf na liniji 21
INFO  12:38:05,294 - INFO:  Pristup simbolu var na liniji 23
INFO  12:38:05,294 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  12:38:05,294 - INFO:  Deklarisan metod main na liniji 18
INFO  12:38:05,294 - ===================================
INFO  12:38:05,302 - Uspesno parsiranje!
