INFO  17:06:37,574 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\test01.mj
INFO  17:06:37,825 - #2 program
INFO  17:06:37,825 - #45 Program
INFO  17:06:37,825 - #45 int
INFO  17:06:37,825 - #45 x
INFO  17:06:37,825 - #8 ,
INFO  17:06:37,840 - #45 y
INFO  17:06:37,840 - #5 ;
INFO  17:06:37,840 - #14 interface
INFO  17:06:37,840 - #45 I
INFO  17:06:37,840 - #3 {
INFO  17:06:37,840 - #13 void
INFO  17:06:37,840 - #45 m
INFO  17:06:37,840 - #6 (
INFO  17:06:37,840 - #7 )
INFO  17:06:37,840 - #5 ;
INFO  17:06:37,840 - #4 }
INFO  17:06:37,840 - #16 class
INFO  17:06:37,840 - #45 A
INFO  17:06:37,840 - #3 {
INFO  17:06:37,856 - #45 int
INFO  17:06:37,856 - #45 x
INFO  17:06:37,856 - #25 [
INFO  17:06:37,862 - #34 ]
INFO  17:06:37,862 - #8 ,
INFO  17:06:37,863 - #45 y
INFO  17:06:37,863 - #25 [
INFO  17:06:37,863 - #34 ]
INFO  17:06:37,863 - #5 ;
INFO  17:06:37,863 - #4 }
INFO  17:06:37,863 - #29 enum
INFO  17:06:37,863 - #45 Broj
INFO  17:06:37,863 - #3 {
INFO  17:06:37,863 - #45 NULA
INFO  17:06:37,863 - #8 ,
INFO  17:06:37,863 - #45 TRI
INFO  17:06:37,863 - #12 =
INFO  17:06:37,863 - #42 3
INFO  17:06:37,863 - #8 ,
INFO  17:06:37,863 - #45 PET
INFO  17:06:37,863 - #12 =
INFO  17:06:37,863 - #42 5
INFO  17:06:37,863 - #4 }
INFO  17:06:37,863 - #16 class
INFO  17:06:37,863 - #45 B
INFO  17:06:37,863 - #39 extends
INFO  17:06:37,863 - #45 A
INFO  17:06:37,863 - #40 implements
INFO  17:06:37,863 - #45 I
INFO  17:06:37,863 - #3 {
INFO  17:06:37,863 - #45 int
INFO  17:06:37,863 - #45 i
INFO  17:06:37,863 - #5 ;
INFO  17:06:37,863 - #45 int
INFO  17:06:37,863 - #45 x
INFO  17:06:37,863 - #25 [
INFO  17:06:37,863 - #34 ]
INFO  17:06:37,863 - #5 ;
INFO  17:06:37,863 - #3 {
INFO  17:06:37,878 - #45 int
INFO  17:06:37,878 - #45 getValue
INFO  17:06:37,878 - #6 (
INFO  17:06:37,878 - #45 int
INFO  17:06:37,878 - #45 a
INFO  17:06:37,878 - #7 )
INFO  17:06:37,878 - #45 int
INFO  17:06:37,878 - #45 b
INFO  17:06:37,894 - #5 ;
INFO  17:06:37,894 - #45 bool
INFO  17:06:37,894 - #45 c
INFO  17:06:37,894 - #5 ;
INFO  17:06:37,894 - #3 {
INFO  17:06:37,894 - #10 return
INFO  17:06:37,894 - #42 0
INFO  17:06:37,894 - #5 ;
INFO  17:06:37,894 - #4 }
INFO  17:06:37,894 - #13 void
INFO  17:06:37,902 - #45 m
INFO  17:06:37,902 - #6 (
INFO  17:06:37,902 - #7 )
INFO  17:06:37,903 - #3 {
INFO  17:06:37,903 - #4 }
INFO  17:06:37,903 - #4 }
INFO  17:06:37,904 - #4 }
INFO  17:06:37,904 - #16 class
INFO  17:06:37,904 - #45 C
INFO  17:06:37,904 - #39 extends
INFO  17:06:37,904 - #45 B
INFO  17:06:37,904 - #3 {
INFO  17:06:37,904 - #45 A
INFO  17:06:37,904 - #45 theA
INFO  17:06:37,904 - #5 ;
INFO  17:06:37,904 - #45 int
INFO  17:06:37,904 - #45 a
INFO  17:06:37,904 - #5 ;
INFO  17:06:37,904 - #4 }
INFO  17:06:37,904 - #3 {
INFO  17:06:37,904 - #13 void
INFO  17:06:37,904 - #45 main
INFO  17:06:37,904 - #6 (
INFO  17:06:37,904 - #45 int
INFO  17:06:37,912 - #45 x
INFO  17:06:37,912 - #7 )
INFO  17:06:37,917 - #45 A
INFO  17:06:37,917 - #45 a
INFO  17:06:37,917 - #5 ;
INFO  17:06:37,917 - #45 C
INFO  17:06:37,917 - #45 c
INFO  17:06:37,917 - #5 ;
INFO  17:06:37,917 - #45 int
INFO  17:06:37,917 - #45 i
INFO  17:06:37,917 - #5 ;
INFO  17:06:37,917 - #3 {
INFO  17:06:37,917 - #45 a
INFO  17:06:37,918 - #12 =
INFO  17:06:37,918 - #18 new
INFO  17:06:37,918 - #45 A
INFO  17:06:37,918 - #5 ;
INFO  17:06:37,920 - #45 a
INFO  17:06:37,920 - #15 .
INFO  17:06:37,920 - #45 x
INFO  17:06:37,920 - #12 =
INFO  17:06:37,921 - #18 new
INFO  17:06:37,921 - #45 int
INFO  17:06:37,921 - #25 [
INFO  17:06:37,921 - #45 Broj
INFO  17:06:37,921 - #15 .
INFO  17:06:37,921 - #45 PET
INFO  17:06:37,921 - #34 ]
INFO  17:06:37,922 - #5 ;
INFO  17:06:37,923 - #45 a
INFO  17:06:37,923 - #15 .
INFO  17:06:37,923 - #45 y
INFO  17:06:37,923 - #12 =
INFO  17:06:37,923 - #18 new
INFO  17:06:37,923 - #45 int
INFO  17:06:37,923 - #25 [
INFO  17:06:37,923 - #42 5
INFO  17:06:37,923 - #34 ]
INFO  17:06:37,923 - #5 ;
INFO  17:06:37,923 - #45 c
INFO  17:06:37,923 - #12 =
INFO  17:06:37,923 - #18 new
INFO  17:06:37,924 - #45 C
INFO  17:06:37,924 - #5 ;
INFO  17:06:37,924 - #45 c
INFO  17:06:37,924 - #15 .
INFO  17:06:37,924 - #45 theA
INFO  17:06:37,924 - #12 =
INFO  17:06:37,924 - #45 a
INFO  17:06:37,924 - #5 ;
INFO  17:06:37,925 - #45 c
INFO  17:06:37,925 - #15 .
INFO  17:06:37,925 - #45 x
INFO  17:06:37,925 - #12 =
INFO  17:06:37,925 - #18 new
INFO  17:06:37,925 - #45 int
INFO  17:06:37,925 - #25 [
INFO  17:06:37,925 - #42 5
INFO  17:06:37,925 - #34 ]
INFO  17:06:37,925 - #5 ;
INFO  17:06:37,925 - #45 x
INFO  17:06:37,925 - #12 =
INFO  17:06:37,925 - #18 new
INFO  17:06:37,925 - #45 int
INFO  17:06:37,926 - #25 [
INFO  17:06:37,926 - #45 Broj
INFO  17:06:37,926 - #15 .
INFO  17:06:37,926 - #45 TRI
INFO  17:06:37,926 - #34 ]
INFO  17:06:37,926 - #5 ;
INFO  17:06:37,926 - #26 read
INFO  17:06:37,926 - #6 (
INFO  17:06:37,926 - #45 c
INFO  17:06:37,926 - #15 .
INFO  17:06:37,926 - #45 i
INFO  17:06:37,926 - #7 )
INFO  17:06:37,926 - #5 ;
INFO  17:06:37,926 - #41 for
INFO  17:06:37,927 - #6 (
INFO  17:06:37,927 - #45 i
INFO  17:06:37,927 - #12 =
INFO  17:06:37,927 - #42 0
INFO  17:06:37,927 - #5 ;
INFO  17:06:37,927 - #45 i
INFO  17:06:37,927 - #19 <
INFO  17:06:37,927 - #42 5
INFO  17:06:37,928 - #5 ;
INFO  17:06:37,929 - #45 i
INFO  17:06:37,929 - #38 ++
INFO  17:06:37,930 - #7 )
INFO  17:06:37,930 - #3 {
INFO  17:06:37,931 - #26 read
INFO  17:06:37,931 - #6 (
INFO  17:06:37,931 - #45 c
INFO  17:06:37,931 - #15 .
INFO  17:06:37,931 - #45 x
INFO  17:06:37,931 - #25 [
INFO  17:06:37,931 - #45 i
INFO  17:06:37,931 - #34 ]
INFO  17:06:37,931 - #7 )
INFO  17:06:37,931 - #5 ;
INFO  17:06:37,931 - #26 read
INFO  17:06:37,931 - #6 (
INFO  17:06:37,931 - #45 c
INFO  17:06:37,931 - #15 .
INFO  17:06:37,933 - #45 theA
INFO  17:06:37,933 - #15 .
INFO  17:06:37,933 - #45 x
INFO  17:06:37,933 - #25 [
INFO  17:06:37,933 - #45 i
INFO  17:06:37,933 - #34 ]
INFO  17:06:37,933 - #7 )
INFO  17:06:37,933 - #5 ;
INFO  17:06:37,933 - #46 if
INFO  17:06:37,933 - #6 (
INFO  17:06:37,933 - #42 1
INFO  17:06:37,933 - #32 >
INFO  17:06:37,933 - #42 2
INFO  17:06:37,934 - #7 )
INFO  17:06:37,934 - #26 read
INFO  17:06:37,935 - #6 (
INFO  17:06:37,935 - #45 a
INFO  17:06:37,935 - #7 )
INFO  17:06:37,935 - #5 ;
INFO  17:06:37,935 - #47 else
INFO  17:06:37,935 - #26 read
INFO  17:06:37,935 - #6 (
INFO  17:06:37,935 - #45 b
INFO  17:06:37,935 - #7 )
INFO  17:06:37,935 - #5 ;
INFO  17:06:37,935 - #4 }
INFO  17:06:37,935 - #9 print
INFO  17:06:37,936 - #6 (
INFO  17:06:37,936 - #45 c
INFO  17:06:37,936 - #15 .
INFO  17:06:37,936 - #45 getValue
INFO  17:06:37,936 - #6 (
INFO  17:06:37,936 - #45 c
INFO  17:06:37,936 - #15 .
INFO  17:06:37,936 - #45 theA
INFO  17:06:37,936 - #15 .
INFO  17:06:37,936 - #45 x
INFO  17:06:37,936 - #25 [
INFO  17:06:37,936 - #45 Broj
INFO  17:06:37,936 - #15 .
INFO  17:06:37,936 - #45 NULA
INFO  17:06:37,936 - #34 ]
INFO  17:06:37,936 - #7 )
INFO  17:06:37,942 - #7 )
INFO  17:06:37,943 - #5 ;
INFO  17:06:37,943 - #45 c
INFO  17:06:37,943 - #15 .
INFO  17:06:37,943 - #45 m
INFO  17:06:37,943 - #6 (
INFO  17:06:37,947 - #7 )
INFO  17:06:37,948 - #5 ;
INFO  17:06:37,948 - #4 }
INFO  17:06:37,948 - #4 }
INFO  17:06:37,993 - Program(
  ProgName(
   Program
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            InterfaceDeclaration(
              InterfaceDeclarations(
                InterName(
                 I
                ) [InterName]
                OptInterMethodDeclList(
                  SingleInterfaceMethodDeclaration(
                    InterfaceMethodDeclaration(
                      VoidIdentificator(
                      ) [VoidIdentificator]
                     m
                      NoOptionalFormPars(
                      ) [NoOptionalFormPars]
                    ) [InterfaceMethodDeclaration]
                  ) [SingleInterfaceMethodDeclaration]
                ) [OptInterMethodDeclList]
              ) [InterfaceDeclarations]
            ) [InterfaceDeclaration]
          ) [VarDeclLists]
          ClasstDeclaration(
            ClassDeclaration(
              ClassName(
               A
              ) [ClassName]
              NoSuperClass(
              ) [NoSuperClass]
              NoImplInteraces(
              ) [NoImplInteraces]
              OptVars(
                NoOptVars(
                ) [NoOptVars]
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  MultipleVars(
                    SingleVar(
                      Var(
                       x
                        ArrayVar(
                        ) [ArrayVar]
                      ) [Var]
                    ) [SingleVar]
                    Var(
                     y
                      ArrayVar(
                      ) [ArrayVar]
                    ) [Var]
                  ) [MultipleVars]
                ) [VarDeclarations]
              ) [OptVars]
              NoClassMethodDecl(
              ) [NoClassMethodDecl]
            ) [ClassDeclaration]
          ) [ClasstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
            EnumNamed(
             Broj
            ) [EnumNamed]
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   NULA
                  ) [NoInitEnum]
                ) [SingleEnum]
                InitEnum(
                 TRI
                 3
                ) [InitEnum]
              ) [MultipleEnums]
              InitEnum(
               PET
               5
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
          ClassName(
           B
          ) [ClassName]
          SuperClass(
            Type(
             A
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            NoInterfList(
              Type(
               I
              ) [Type]
            ) [NoInterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   i
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               int
              ) [Type]
              SingleVar(
                Var(
                 x
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              OptMethods(
                NoOptMethods(
                ) [NoOptMethods]
                MethodDeclarations(
                  MethodDeclTypeName(
                    TypeIdentificator(
                      Type(
                       int
                      ) [Type]
                    ) [TypeIdentificator]
                   getValue
                  ) [MethodDeclTypeName]
                  OptionalFormPars(
                    SingleFormPars(
                      FormParItem(
                        Type(
                         int
                        ) [Type]
                       a
                        NoArrayVar(
                        ) [NoArrayVar]
                      ) [FormParItem]
                    ) [SingleFormPars]
                  ) [OptionalFormPars]
                  OptVars(
                    OptVars(
                      NoOptVars(
                      ) [NoOptVars]
                      VarDeclarations(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          Var(
                           b
                            NoArrayVar(
                            ) [NoArrayVar]
                          ) [Var]
                        ) [SingleVar]
                      ) [VarDeclarations]
                    ) [OptVars]
                    VarDeclarations(
                      Type(
                       bool
                      ) [Type]
                      SingleVar(
                        Var(
                         c
                          NoArrayVar(
                          ) [NoArrayVar]
                        ) [Var]
                      ) [SingleVar]
                    ) [VarDeclarations]
                  ) [OptVars]
                  OptionalStmt(
                    NoOptionalStmt(
                    ) [NoOptionalStmt]
                    ReturnStmt(
                      OptRetExprDerived1(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             0
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRetExprDerived1]
                    ) [ReturnStmt]
                  ) [OptionalStmt]
                ) [MethodDeclarations]
              ) [OptMethods]
              MethodDeclarations(
                MethodDeclTypeName(
                  VoidIdentificator(
                  ) [VoidIdentificator]
                 m
                ) [MethodDeclTypeName]
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    ClasstDeclaration(
      ClassDeclaration(
        ClassName(
         C
        ) [ClassName]
        SuperClass(
          Type(
           B
          ) [Type]
        ) [SuperClass]
        NoImplInteraces(
        ) [NoImplInteraces]
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 theA
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             int
            ) [Type]
            SingleVar(
              Var(
               a
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        NoClassMethodDecl(
        ) [NoClassMethodDecl]
      ) [ClassDeclaration]
    ) [ClasstDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      MethodDeclTypeName(
        VoidIdentificator(
        ) [VoidIdentificator]
       main
      ) [MethodDeclTypeName]
      OptionalFormPars(
        SingleFormPars(
          FormParItem(
            Type(
             int
            ) [Type]
           x
            NoArrayVar(
            ) [NoArrayVar]
          ) [FormParItem]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      OptVars(
        OptVars(
          OptVars(
            NoOptVars(
            ) [NoOptVars]
            VarDeclarations(
              Type(
               A
              ) [Type]
              SingleVar(
                Var(
                 a
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             C
            ) [Type]
            SingleVar(
              Var(
               c
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        VarDeclarations(
          Type(
           int
          ) [Type]
          SingleVar(
            Var(
             i
              NoArrayVar(
              ) [NoArrayVar]
            ) [Var]
          ) [SingleVar]
        ) [VarDeclarations]
      ) [OptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            NoOptionalStmt(
                            ) [NoOptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                DesignVar(
                                  DesignName(
                                   a
                                  ) [DesignName]
                                ) [DesignVar]
                                AssignOper(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         A
                                        ) [Type]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AssignOper]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              DesignField(
                                DesignVar(
                                  DesignName(
                                   a
                                  ) [DesignName]
                                ) [DesignVar]
                               x
                              ) [DesignField]
                              AssignOper(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NewArrFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          DesignFactor(
                                            DesignField(
                                              DesignVar(
                                                DesignName(
                                                 Broj
                                                ) [DesignName]
                                              ) [DesignVar]
                                             PET
                                            ) [DesignField]
                                            NoMethodCall(
                                            ) [NoMethodCall]
                                          ) [DesignFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [NewArrFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AssignOper]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        DesignatorStmt(
                          DesignStmt(
                            DesignField(
                              DesignVar(
                                DesignName(
                                 a
                                ) [DesignName]
                              ) [DesignVar]
                             y
                            ) [DesignField]
                            AssignOper(
                              AssignOperation(
                              ) [AssignOperation]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NewArrFactor(
                                    Type(
                                     int
                                    ) [Type]
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        NumFactor(
                                         5
                                        ) [NumFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                  ) [NewArrFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [AssignOper]
                          ) [DesignStmt]
                        ) [DesignatorStmt]
                      ) [OptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          DesignVar(
                            DesignName(
                             c
                            ) [DesignName]
                          ) [DesignVar]
                          AssignOper(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NewFactor(
                                  Type(
                                   C
                                  ) [Type]
                                ) [NewFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        DesignField(
                          DesignVar(
                            DesignName(
                             c
                            ) [DesignName]
                          ) [DesignVar]
                         theA
                        ) [DesignField]
                        AssignOper(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                DesignVar(
                                  DesignName(
                                   a
                                  ) [DesignName]
                                ) [DesignVar]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      DesignField(
                        DesignVar(
                          DesignName(
                           c
                          ) [DesignName]
                        ) [DesignVar]
                       x
                      ) [DesignField]
                      AssignOper(
                        AssignOperation(
                        ) [AssignOperation]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NewArrFactor(
                              Type(
                               int
                              ) [Type]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   5
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [NewArrFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [AssignOper]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    DesignVar(
                      DesignName(
                       x
                      ) [DesignName]
                    ) [DesignVar]
                    AssignOper(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NewArrFactor(
                            Type(
                             int
                            ) [Type]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  DesignField(
                                    DesignVar(
                                      DesignName(
                                       Broj
                                      ) [DesignName]
                                    ) [DesignVar]
                                   TRI
                                  ) [DesignField]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [NewArrFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [AssignOper]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              ReadStmt(
                DesignField(
                  DesignVar(
                    DesignName(
                     c
                    ) [DesignName]
                  ) [DesignVar]
                 i
                ) [DesignField]
              ) [ReadStmt]
            ) [OptionalStmt]
            ForStmt(
              OptDesignStmtDerived1(
                DesignStmt(
                  DesignVar(
                    DesignName(
                     i
                    ) [DesignName]
                  ) [DesignVar]
                  AssignOper(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              OptCondDerived1(
                ConditionDerived2(
                  CondTermDerived2(
                    CondFactDerived1(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            DesignVar(
                              DesignName(
                               i
                              ) [DesignName]
                            ) [DesignVar]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      OptRelExprDerived1(
                        RelLess(
                        ) [RelLess]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                             5
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [OptRelExprDerived1]
                    ) [CondFactDerived1]
                  ) [CondTermDerived2]
                ) [ConditionDerived2]
              ) [OptCondDerived1]
              OptDesignStmtDerived1(
                DesignStmt(
                  DesignVar(
                    DesignName(
                     i
                    ) [DesignName]
                  ) [DesignVar]
                  PlusPlusSideEff(
                  ) [PlusPlusSideEff]
                ) [DesignStmt]
              ) [OptDesignStmtDerived1]
              BlockStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      ReadStmt(
                        DesignArr(
                          DesignField(
                            DesignVar(
                              DesignName(
                               c
                              ) [DesignName]
                            ) [DesignVar]
                           x
                          ) [DesignField]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                DesignVar(
                                  DesignName(
                                   i
                                  ) [DesignName]
                                ) [DesignVar]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [DesignArr]
                      ) [ReadStmt]
                    ) [OptionalStmt]
                    ReadStmt(
                      DesignArr(
                        DesignField(
                          DesignField(
                            DesignVar(
                              DesignName(
                               c
                              ) [DesignName]
                            ) [DesignVar]
                           theA
                          ) [DesignField]
                         x
                        ) [DesignField]
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              DesignVar(
                                DesignName(
                                 i
                                ) [DesignName]
                              ) [DesignVar]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [DesignArr]
                    ) [ReadStmt]
                  ) [OptionalStmt]
                  IfStmt(
                    IfCond(
                      ConditionDerived2(
                        CondTermDerived2(
                          CondFactDerived1(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 1
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            OptRelExprDerived1(
                              RelGreather(
                              ) [RelGreather]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [OptRelExprDerived1]
                          ) [CondFactDerived1]
                        ) [CondTermDerived2]
                      ) [ConditionDerived2]
                    ) [IfCond]
                    ReadStmt(
                      DesignVar(
                        DesignName(
                         a
                        ) [DesignName]
                      ) [DesignVar]
                    ) [ReadStmt]
                    OptElseDerived1(
                      ReadStmt(
                        DesignVar(
                          DesignName(
                           b
                          ) [DesignName]
                        ) [DesignVar]
                      ) [ReadStmt]
                    ) [OptElseDerived1]
                  ) [IfStmt]
                ) [OptionalStmt]
              ) [BlockStmt]
            ) [ForStmt]
          ) [OptionalStmt]
          PrintStmt(
            Expression(
              Positive(
              ) [Positive]
              Terms(
                DesignFactor(
                  DesignField(
                    DesignVar(
                      DesignName(
                       c
                      ) [DesignName]
                    ) [DesignVar]
                   getValue
                  ) [DesignField]
                  WithMethodCall(
                    WithActPars(
                      SingleActPars(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            DesignFactor(
                              DesignArr(
                                DesignField(
                                  DesignField(
                                    DesignVar(
                                      DesignName(
                                       c
                                      ) [DesignName]
                                    ) [DesignVar]
                                   theA
                                  ) [DesignField]
                                 x
                                ) [DesignField]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    DesignFactor(
                                      DesignField(
                                        DesignVar(
                                          DesignName(
                                           Broj
                                          ) [DesignName]
                                        ) [DesignVar]
                                       NULA
                                      ) [DesignField]
                                      NoMethodCall(
                                      ) [NoMethodCall]
                                    ) [DesignFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [DesignArr]
                              NoMethodCall(
                              ) [NoMethodCall]
                            ) [DesignFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [SingleActPars]
                    ) [WithActPars]
                  ) [WithMethodCall]
                ) [DesignFactor]
                NoMulFacts(
                ) [NoMulFacts]
              ) [Terms]
              NoAddTerms(
              ) [NoAddTerms]
            ) [Expression]
            OptNumConstDerived2(
            ) [OptNumConstDerived2]
          ) [PrintStmt]
        ) [OptionalStmt]
        DesignatorStmt(
          DesignStmt(
            DesignField(
              DesignVar(
                DesignName(
                 c
                ) [DesignName]
              ) [DesignVar]
             m
            ) [DesignField]
            ProcCall(
              NoActPars(
              ) [NoActPars]
            ) [ProcCall]
          ) [DesignStmt]
        ) [DesignatorStmt]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  17:06:38,009 - ===================================
INFO  17:06:38,009 - INFO:  Pocetak programa Program na liniji 1
INFO  17:06:38,009 - INFO:  Deklarisana globalna promenljiva x na liniji 3
INFO  17:06:38,009 - INFO:  Deklarisana globalna promenljiva y na liniji 3
INFO  17:06:38,009 - INFO:  Deklarisan metod m u interfejsu na liniji 4
INFO  17:06:38,009 - INFO:  Definisan interfejs I na liniji 4
INFO  17:06:38,009 - INFO:  Deklarisan niz x na liniji 5
INFO  17:06:38,009 - INFO:  Deklarisan niz y na liniji 5
INFO  17:06:38,009 - INFO:  Definisana klasa A na liniji 5
INFO  17:06:38,009 - INFO:  Definisan enum tip Broj na liniji 7
INFO  17:06:38,009 - INFO:  Deklarisana promenljiva i na liniji 9
INFO  17:06:38,009 - INFO:  Deklarisan niz x na liniji 9
INFO  17:06:38,009 - INFO:  Deklarisan formalni parametar a na liniji 11
INFO  17:06:38,009 - INFO:  Deklarisana promenljiva b na liniji 11
INFO  17:06:38,009 - INFO:  Deklarisana promenljiva c na liniji 11
INFO  17:06:38,009 - INFO:  Deklarisan metod getValue na liniji 11
INFO  17:06:38,009 - INFO:  Deklarisan metod m na liniji 15
INFO  17:06:38,009 - INFO:  Definisana klasa B na liniji 8
INFO  17:06:38,009 - INFO:  Deklarisana promenljiva theA na liniji 18
INFO  17:06:38,009 - INFO:  Deklarisana promenljiva a na liniji 18
INFO  17:06:38,009 - INFO:  Definisana klasa C na liniji 18
INFO  17:06:38,009 - INFO:  Deklarisan formalni parametar x na liniji 21
INFO  17:06:38,014 - INFO:  Deklarisana promenljiva a na liniji 21
INFO  17:06:38,014 - INFO:  Deklarisana promenljiva c na liniji 21
INFO  17:06:38,014 - INFO:  Deklarisana promenljiva i na liniji 21
INFO  17:06:38,014 - INFO:  Pristup konstanti Broj.PET na liniji 23
INFO  17:06:54,207 - INFO:  Pristup konstanti Broj.TRI na liniji 28
