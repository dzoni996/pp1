INFO  21:00:40,658 - Compiling source file: C:\Storage\PP1\Projekat\2. sintaksna analiza\Izvorni kod\MJCompiler2\test\program.mj
INFO  21:00:40,717 - #2 program
INFO  21:00:40,717 - #46 MJProgram
INFO  21:00:40,717 - #46 int
INFO  21:00:40,718 - #46 x
INFO  21:00:40,719 - #5 ;
INFO  21:00:40,720 - #46 char
INFO  21:00:40,720 - #46 x2
INFO  21:00:40,720 - #26 [
INFO  21:00:40,720 - #36 ]
INFO  21:00:40,720 - #5 ;
INFO  21:00:40,721 - #23 const
INFO  21:00:40,721 - #46 bool
INFO  21:00:40,722 - #46 y2
INFO  21:00:40,722 - #12 =
INFO  21:00:40,722 - #28 true
INFO  21:00:40,722 - #5 ;
INFO  21:00:40,723 - #31 enum
INFO  21:00:40,724 - #46 nums
INFO  21:00:40,724 - #3 {
INFO  21:00:40,724 - #46 ONE
INFO  21:00:40,724 - #8 ,
INFO  21:00:40,725 - #46 TWO
INFO  21:00:40,725 - #8 ,
INFO  21:00:40,725 - #46 THREE
INFO  21:00:40,725 - #12 =
INFO  21:00:40,726 - #42 3
INFO  21:00:40,726 - #4 }
INFO  21:00:40,726 - #16 class
INFO  21:00:40,726 - #46 klasa
INFO  21:00:40,726 - #41 extends
INFO  21:00:40,726 - #46 Inyt
INFO  21:00:40,726 - #43 implements
INFO  21:00:40,727 - #46 Inter1
INFO  21:00:40,727 - #8 ,
INFO  21:00:40,727 - #46 INter2
INFO  21:00:40,727 - #3 {
INFO  21:00:40,727 - #46 int
INFO  21:00:40,728 - #46 f
INFO  21:00:40,728 - #5 ;
INFO  21:00:40,728 - #46 bool
INFO  21:00:40,729 - #46 f5
INFO  21:00:40,729 - #26 [
INFO  21:00:40,729 - #36 ]
INFO  21:00:40,729 - #5 ;
INFO  21:00:40,729 - #3 {
INFO  21:00:40,729 - #13 void
INFO  21:00:40,730 - #46 f
INFO  21:00:40,731 - #6 (
INFO  21:00:40,731 - #7 )
INFO  21:00:40,732 - #3 {
INFO  21:00:40,732 - #4 }
INFO  21:00:40,733 - #4 }
INFO  21:00:40,733 - #4 }
INFO  21:00:40,733 - #14 interface
INFO  21:00:40,734 - #46 Inter1
INFO  21:00:40,734 - #3 {
INFO  21:00:40,734 - #13 void
INFO  21:00:40,734 - #46 foo
INFO  21:00:40,734 - #6 (
INFO  21:00:40,734 - #46 int
INFO  21:00:40,734 - #46 x
INFO  21:00:40,734 - #8 ,
INFO  21:00:40,735 - #46 int
INFO  21:00:40,735 - #46 z
INFO  21:00:40,735 - #26 [
INFO  21:00:40,735 - #36 ]
INFO  21:00:40,735 - #7 )
INFO  21:00:40,735 - #5 ;
INFO  21:00:40,735 - #4 }
INFO  21:00:40,736 - #3 {
INFO  21:00:40,736 - #13 void
INFO  21:00:40,736 - #46 m2
INFO  21:00:40,736 - #6 (
INFO  21:00:40,736 - #46 int
INFO  21:00:40,737 - #46 x5
INFO  21:00:40,737 - #26 [
INFO  21:00:40,737 - #36 ]
INFO  21:00:40,737 - #7 )
INFO  21:00:40,737 - #3 {
INFO  21:00:40,737 - #46 var
INFO  21:00:40,737 - #15 .
INFO  21:00:40,738 - #46 x
INFO  21:00:40,738 - #15 .
INFO  21:00:40,738 - #46 d
INFO  21:00:40,738 - #26 [
INFO  21:00:40,739 - #35 -
INFO  21:00:40,739 - #42 5
INFO  21:00:40,740 - #32 *
INFO  21:00:40,741 - #42 8
INFO  21:00:40,742 - #32 *
INFO  21:00:40,742 - #42 9
INFO  21:00:40,742 - #32 *
INFO  21:00:40,742 - #42 8
INFO  21:00:40,742 - #36 ]
INFO  21:00:40,743 - #40 ++
INFO  21:00:40,743 - #5 ;
INFO  21:00:40,744 - #46 var
INFO  21:00:40,744 - #15 .
INFO  21:00:40,744 - #46 a
INFO  21:00:40,744 - #12 =
INFO  21:00:40,749 - #46 varA
INFO  21:00:40,751 - #32 *
INFO  21:00:40,751 - #46 varB
INFO  21:00:40,751 - #6 (
INFO  21:00:40,751 - #7 )
INFO  21:00:40,752 - #32 *
INFO  21:00:40,752 - #46 varC
INFO  21:00:40,752 - #6 (
INFO  21:00:40,752 - #28 false
INFO  21:00:40,752 - #7 )
INFO  21:00:40,753 - #5 ;
INFO  21:00:40,753 - #46 var
INFO  21:00:40,753 - #15 .
INFO  21:00:40,753 - #46 b
INFO  21:00:40,753 - #40 ++
INFO  21:00:40,753 - #5 ;
INFO  21:00:40,753 - #46 var
INFO  21:00:40,753 - #15 .
INFO  21:00:40,754 - #46 c
INFO  21:00:40,754 - #6 (
INFO  21:00:40,754 - #7 )
INFO  21:00:40,754 - #5 ;
INFO  21:00:40,754 - #46 var
INFO  21:00:40,754 - #15 .
INFO  21:00:40,754 - #46 d
INFO  21:00:40,754 - #12 =
INFO  21:00:40,754 - #18 new
INFO  21:00:40,754 - #46 klasa
INFO  21:00:40,754 - #5 ;
INFO  21:00:40,755 - #46 var
INFO  21:00:40,755 - #15 .
INFO  21:00:40,755 - #46 e
INFO  21:00:40,755 - #12 =
INFO  21:00:40,755 - #6 (
INFO  21:00:40,755 - #35 -
INFO  21:00:40,755 - #42 25
INFO  21:00:40,755 - #32 *
INFO  21:00:40,755 - #42 9
INFO  21:00:40,755 - #7 )
INFO  21:00:40,756 - #5 ;
INFO  21:00:40,756 - #17 break
INFO  21:00:40,756 - #5 ;
INFO  21:00:40,756 - #38 continue
INFO  21:00:40,756 - #5 ;
INFO  21:00:40,756 - #4 }
INFO  21:00:40,757 - #4 }
INFO  21:00:40,759 - Program(
 MJProgram
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  SingleVar(
                    Var(
                     x
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [SingleVar]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            VarDeclaration(
              VarDeclarations(
                Type(
                 char
                ) [Type]
                SingleVar(
                  Var(
                   x2
                    ArrayVar(
                    ) [ArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [VarDeclaration]
          ) [VarDeclLists]
          ConstDeclaration(
            ConstDeclarations(
              Type(
               bool
              ) [Type]
              SingleConst(
                ConstInit(
                 y2
                  InitializerBool(
                  ) [InitializerBool]
                ) [ConstInit]
              ) [SingleConst]
            ) [ConstDeclarations]
          ) [ConstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
           nums
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                NoInitEnum(
                 TWO
                ) [NoInitEnum]
              ) [MultipleEnums]
              InitEnum(
               THREE
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
         klasa
          SuperClass(
            Type(
             Inyt
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            InterfList(
              NoInterfList(
                Type(
                 Inter1
                ) [Type]
              ) [NoInterfList]
              Type(
               INter2
              ) [Type]
            ) [InterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   f
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               bool
              ) [Type]
              SingleVar(
                Var(
                 f5
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              NoOptMethods(
              ) [NoOptMethods]
              MethodDeclarations(
                VoidIdentificator(
                ) [VoidIdentificator]
               f
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
       Inter1
        OptInterMethodDeclList(
          SingleInterfaceMethodDeclaration(
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             foo
              OptionalFormPars(
                MultipleFormPars(
                  SingleFormPars(
                    FormParam(
                      Type(
                       int
                      ) [Type]
                     x
                    ) [FormParam]
                  ) [SingleFormPars]
                  FormParArray(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [FormParArray]
                ) [MultipleFormPars]
              ) [OptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [SingleInterfaceMethodDeclaration]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      VoidIdentificator(
      ) [VoidIdentificator]
     m2
      OptionalFormPars(
        SingleFormPars(
          FormParArray(
            Type(
             int
            ) [Type]
           x5
          ) [FormParArray]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      DesignatorStmt(
                        DesignStmt(
                          Design(
                           var
                            OptDesignator(
                              OptDesignator(
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   x
                                  ) [DesignField]
                                ) [OptDesignator]
                                DesignField(
                                 d
                                ) [DesignField]
                              ) [OptDesignator]
                              DesignArr(
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NumFactor(
                                    ) [NumFactor]
                                    WithMulFacts(
                                      WithMulFacts(
                                        WithMulFacts(
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                          MultOp(
                                          ) [MultOp]
                                          NumFactor(
                                          ) [NumFactor]
                                        ) [WithMulFacts]
                                        MultOp(
                                        ) [MultOp]
                                        NumFactor(
                                        ) [NumFactor]
                                      ) [WithMulFacts]
                                      MultOp(
                                      ) [MultOp]
                                      NumFactor(
                                      ) [NumFactor]
                                    ) [WithMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [DesignArr]
                            ) [OptDesignator]
                          ) [Design]
                          PlusPlusSideEff(
                          ) [PlusPlusSideEff]
                        ) [DesignStmt]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    DesignatorStmt(
                      DesignStmt(
                        Design(
                         var
                          OptDesignator(
                            NoDesignator(
                            ) [NoDesignator]
                            DesignField(
                             a
                            ) [DesignField]
                          ) [OptDesignator]
                        ) [Design]
                        AddSideEff(
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Negative(
                            ) [Negative]
                            Terms(
                              DesignFactor(
                                Design(
                                 varA
                                  NoDesignator(
                                  ) [NoDesignator]
                                ) [Design]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              WithMulFacts(
                                WithMulFacts(
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                  MultOp(
                                  ) [MultOp]
                                  DesignFactor(
                                    Design(
                                     varB
                                      NoDesignator(
                                      ) [NoDesignator]
                                    ) [Design]
                                    WithMethodCall(
                                      NoActPars(
                                      ) [NoActPars]
                                    ) [WithMethodCall]
                                  ) [DesignFactor]
                                ) [WithMulFacts]
                                MultOp(
                                ) [MultOp]
                                DesignFactor(
                                  Design(
                                   varC
                                    NoDesignator(
                                    ) [NoDesignator]
                                  ) [Design]
                                  WithMethodCall(
                                    WithActPars(
                                      SingleActPars(
                                        Expression(
                                          Negative(
                                          ) [Negative]
                                          Terms(
                                            BoolFactor(
                                            ) [BoolFactor]
                                            NoMulFacts(
                                            ) [NoMulFacts]
                                          ) [Terms]
                                          NoAddTerms(
                                          ) [NoAddTerms]
                                        ) [Expression]
                                      ) [SingleActPars]
                                    ) [WithActPars]
                                  ) [WithMethodCall]
                                ) [DesignFactor]
                              ) [WithMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AddSideEff]
                      ) [DesignStmt]
                    ) [DesignatorStmt]
                  ) [OptionalStmt]
                  DesignatorStmt(
                    DesignStmt(
                      Design(
                       var
                        OptDesignator(
                          NoDesignator(
                          ) [NoDesignator]
                          DesignField(
                           b
                          ) [DesignField]
                        ) [OptDesignator]
                      ) [Design]
                      PlusPlusSideEff(
                      ) [PlusPlusSideEff]
                    ) [DesignStmt]
                  ) [DesignatorStmt]
                ) [OptionalStmt]
                DesignatorStmt(
                  DesignStmt(
                    Design(
                     var
                      OptDesignator(
                        NoDesignator(
                        ) [NoDesignator]
                        DesignField(
                         c
                        ) [DesignField]
                      ) [OptDesignator]
                    ) [Design]
                    ActParsSideEff(
                      NoActPars(
                      ) [NoActPars]
                    ) [ActParsSideEff]
                  ) [DesignStmt]
                ) [DesignatorStmt]
              ) [OptionalStmt]
              DesignatorStmt(
                DesignStmt(
                  Design(
                   var
                    OptDesignator(
                      NoDesignator(
                      ) [NoDesignator]
                      DesignField(
                       d
                      ) [DesignField]
                    ) [OptDesignator]
                  ) [Design]
                  AddSideEff(
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Negative(
                      ) [Negative]
                      Terms(
                        NewFactor(
                          Type(
                           klasa
                          ) [Type]
                          NoExpr(
                          ) [NoExpr]
                        ) [NewFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AddSideEff]
                ) [DesignStmt]
              ) [DesignatorStmt]
            ) [OptionalStmt]
            DesignatorStmt(
              DesignStmt(
                Design(
                 var
                  OptDesignator(
                    NoDesignator(
                    ) [NoDesignator]
                    DesignField(
                     e
                    ) [DesignField]
                  ) [OptDesignator]
                ) [Design]
                AddSideEff(
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    Negative(
                    ) [Negative]
                    Terms(
                      ExprFactor(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            NumFactor(
                            ) [NumFactor]
                            WithMulFacts(
                              NoMulFacts(
                              ) [NoMulFacts]
                              MultOp(
                              ) [MultOp]
                              NumFactor(
                              ) [NumFactor]
                            ) [WithMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                      ) [ExprFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                ) [AddSideEff]
              ) [DesignStmt]
            ) [DesignatorStmt]
          ) [OptionalStmt]
          StatementDerived3(
          ) [StatementDerived3]
        ) [OptionalStmt]
        StatementDerived4(
        ) [StatementDerived4]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  21:00:40,760 - ===================================
INFO  21:00:40,762 -  Print count calls = 215
INFO  21:00:40,763 -  Deklarisanih promenljivih ima = 0
