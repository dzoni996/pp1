INFO  10:58:59,642 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\testB1.mj
INFO  10:58:59,896 - #2 program
INFO  10:58:59,897 - #45 TestB1
INFO  10:58:59,897 - #22 const
INFO  10:58:59,900 - #45 int
INFO  10:58:59,900 - #45 x
INFO  10:58:59,902 - #12 =
INFO  10:58:59,902 - #42 3
INFO  10:58:59,903 - #8 ,
INFO  10:58:59,905 - #45 init
INFO  10:58:59,905 - #12 =
INFO  10:58:59,906 - #42 0
INFO  10:58:59,906 - #5 ;
INFO  10:58:59,906 - #45 int
INFO  10:58:59,907 - #45 x1
INFO  10:58:59,907 - #8 ,
INFO  10:58:59,910 - #45 x2
INFO  10:58:59,911 - #25 [
INFO  10:58:59,911 - #34 ]
INFO  10:58:59,911 - #5 ;
INFO  10:58:59,912 - #29 enum
INFO  10:58:59,913 - #45 nums
INFO  10:58:59,913 - #3 {
INFO  10:58:59,914 - #45 ONE
INFO  10:58:59,914 - #12 =
INFO  10:58:59,915 - #42 1
INFO  10:58:59,915 - #8 ,
INFO  10:58:59,915 - #45 TWO
INFO  10:58:59,915 - #8 ,
INFO  10:58:59,916 - #45 FIVE
INFO  10:58:59,916 - #12 =
INFO  10:58:59,916 - #42 5
INFO  10:58:59,916 - #4 }
INFO  10:58:59,916 - #3 {
INFO  10:58:59,917 - #45 int
INFO  10:58:59,918 - #45 printf
INFO  10:58:59,918 - #6 (
INFO  10:58:59,918 - #7 )
INFO  10:58:59,920 - #3 {
INFO  10:58:59,921 - #9 print
INFO  10:58:59,923 - #6 (
INFO  10:58:59,923 - #45 eol
INFO  10:58:59,924 - #7 )
INFO  10:58:59,930 - #5 ;
INFO  10:58:59,930 - #9 print
INFO  10:58:59,930 - #6 (
INFO  10:58:59,931 - #43 t
INFO  10:58:59,931 - #8 ,
INFO  10:58:59,931 - #42 2
INFO  10:58:59,931 - #7 )
INFO  10:58:59,931 - #5 ;
INFO  10:58:59,931 - #9 print
INFO  10:58:59,932 - #6 (
INFO  10:58:59,932 - #43 e
INFO  10:58:59,932 - #8 ,
INFO  10:58:59,932 - #42 1
INFO  10:58:59,932 - #7 )
INFO  10:58:59,932 - #5 ;
INFO  10:58:59,932 - #9 print
INFO  10:58:59,933 - #6 (
INFO  10:58:59,933 - #43 s
INFO  10:58:59,933 - #8 ,
INFO  10:58:59,933 - #42 1
INFO  10:58:59,933 - #7 )
INFO  10:58:59,933 - #5 ;
INFO  10:58:59,933 - #9 print
INFO  10:58:59,934 - #6 (
INFO  10:58:59,934 - #43 t
INFO  10:58:59,934 - #8 ,
INFO  10:58:59,934 - #42 1
INFO  10:58:59,934 - #7 )
INFO  10:58:59,934 - #5 ;
INFO  10:58:59,934 - #9 print
INFO  10:58:59,935 - #6 (
INFO  10:58:59,935 - #43 d
INFO  10:58:59,935 - #8 ,
INFO  10:58:59,935 - #42 2
INFO  10:58:59,935 - #7 )
INFO  10:58:59,935 - #5 ;
INFO  10:58:59,935 - #9 print
INFO  10:58:59,935 - #6 (
INFO  10:58:59,935 - #43 o
INFO  10:58:59,935 - #8 ,
INFO  10:58:59,935 - #42 1
INFO  10:58:59,936 - #7 )
INFO  10:58:59,936 - #5 ;
INFO  10:58:59,936 - #9 print
INFO  10:58:59,936 - #6 (
INFO  10:58:59,936 - #43 n
INFO  10:58:59,936 - #8 ,
INFO  10:58:59,936 - #42 1
INFO  10:58:59,936 - #7 )
INFO  10:58:59,936 - #5 ;
INFO  10:58:59,936 - #9 print
INFO  10:58:59,937 - #6 (
INFO  10:58:59,937 - #43 e
INFO  10:58:59,937 - #8 ,
INFO  10:58:59,937 - #42 1
INFO  10:58:59,937 - #7 )
INFO  10:58:59,937 - #5 ;
INFO  10:58:59,937 - #10 return
INFO  10:58:59,938 - #42 0
INFO  10:58:59,938 - #5 ;
INFO  10:58:59,938 - #4 }
INFO  10:58:59,939 - #45 int
INFO  10:58:59,939 - #45 inc
INFO  10:58:59,939 - #6 (
INFO  10:58:59,940 - #45 int
INFO  10:58:59,940 - #45 x
INFO  10:58:59,940 - #7 )
INFO  10:58:59,940 - #3 {
INFO  10:58:59,940 - #10 return
INFO  10:58:59,940 - #45 x
INFO  10:58:59,940 - #11 +
INFO  10:58:59,940 - #45 nums
INFO  10:58:59,942 - #15 .
INFO  10:58:59,942 - #45 ONE
INFO  10:58:59,942 - #5 ;
INFO  10:58:59,942 - #4 }
INFO  10:58:59,943 - #45 int
INFO  10:58:59,943 - #45 dec
INFO  10:58:59,943 - #6 (
INFO  10:58:59,943 - #45 int
INFO  10:58:59,943 - #45 x
INFO  10:58:59,943 - #7 )
INFO  10:58:59,943 - #3 {
INFO  10:58:59,944 - #10 return
INFO  10:58:59,944 - #45 x
INFO  10:58:59,944 - #33 -
INFO  10:58:59,944 - #45 nums
INFO  10:58:59,945 - #15 .
INFO  10:58:59,945 - #45 ONE
INFO  10:58:59,945 - #5 ;
INFO  10:58:59,946 - #4 }
INFO  10:58:59,946 - #13 void
INFO  10:58:59,946 - #45 main
INFO  10:58:59,947 - #6 (
INFO  10:58:59,947 - #7 )
INFO  10:58:59,947 - #45 int
INFO  10:58:59,947 - #45 var
INFO  10:58:59,947 - #5 ;
INFO  10:58:59,947 - #45 bool
INFO  10:58:59,947 - #45 var2
INFO  10:58:59,947 - #5 ;
INFO  10:58:59,947 - #45 char
INFO  10:58:59,947 - #45 var3
INFO  10:58:59,948 - #25 [
INFO  10:58:59,948 - #34 ]
INFO  10:58:59,948 - #5 ;
INFO  10:58:59,948 - #3 {
INFO  10:58:59,948 - #45 var3
INFO  10:58:59,948 - #12 =
INFO  10:58:59,948 - #18 new
INFO  10:58:59,950 - #45 char
INFO  10:58:59,950 - #25 [
INFO  10:58:59,950 - #42 3
INFO  10:58:59,950 - #34 ]
INFO  10:58:59,950 - #3 {
INFO  10:58:59,951 - #43 a
INFO  10:58:59,952 - #8 ,
INFO  10:58:59,956 - #43 r
INFO  10:58:59,957 - #8 ,
INFO  10:58:59,957 - #43 r
INFO  10:58:59,957 - #4 }
INFO  10:58:59,961 - #5 ;
INFO  10:58:59,970 - #41 for
INFO  10:58:59,971 - #6 (
INFO  10:58:59,971 - #45 var
INFO  10:58:59,971 - #12 =
INFO  10:58:59,971 - #42 0
INFO  10:58:59,971 - #5 ;
INFO  10:58:59,971 - #45 var
INFO  10:58:59,972 - #19 <
INFO  10:58:59,972 - #42 3
INFO  10:58:59,974 - #5 ;
INFO  10:58:59,974 - #45 var
INFO  10:58:59,975 - #38 ++
INFO  10:58:59,975 - #7 )
INFO  10:58:59,977 - #9 print
INFO  10:58:59,977 - #6 (
INFO  10:58:59,977 - #45 var3
INFO  10:58:59,978 - #25 [
INFO  10:58:59,978 - #45 var
INFO  10:58:59,978 - #34 ]
INFO  10:58:59,978 - #7 )
INFO  10:58:59,978 - #5 ;
INFO  10:58:59,978 - #9 print
INFO  10:58:59,980 - #6 (
INFO  10:58:59,980 - #45 eol
INFO  10:58:59,980 - #7 )
INFO  10:58:59,980 - #5 ;
INFO  10:58:59,980 - #46 if
INFO  10:58:59,980 - #6 (
INFO  10:58:59,981 - #45 var
INFO  10:58:59,981 - #35 ==
INFO  10:58:59,981 - #42 3
INFO  10:58:59,982 - #37 &&
INFO  10:58:59,982 - #45 var2
INFO  10:58:59,982 - #7 )
INFO  10:58:59,983 - #3 {
INFO  10:58:59,984 - #9 print
INFO  10:58:59,985 - #6 (
INFO  10:58:59,985 - #43 e
INFO  10:58:59,985 - #7 )
INFO  10:58:59,985 - #5 ;
INFO  10:58:59,985 - #9 print
INFO  10:58:59,985 - #6 (
INFO  10:58:59,985 - #43 r
INFO  10:58:59,985 - #7 )
INFO  10:58:59,985 - #5 ;
INFO  10:58:59,985 - #9 print
INFO  10:58:59,985 - #6 (
INFO  10:58:59,985 - #43 r
INFO  10:58:59,985 - #7 )
INFO  10:58:59,985 - #5 ;
INFO  10:58:59,985 - #4 }
INFO  10:58:59,985 - #47 else
INFO  10:58:59,986 - #3 {
INFO  10:58:59,988 - #9 print
INFO  10:58:59,988 - #6 (
INFO  10:58:59,989 - #43 i
INFO  10:58:59,989 - #7 )
INFO  10:58:59,989 - #5 ;
INFO  10:58:59,989 - #9 print
INFO  10:58:59,989 - #6 (
INFO  10:58:59,989 - #43 f
INFO  10:58:59,989 - #7 )
INFO  10:58:59,989 - #5 ;
INFO  10:58:59,989 - #4 }
INFO  10:58:59,989 - #9 print
INFO  10:58:59,991 - #6 (
INFO  10:58:59,991 - #45 eol
INFO  10:58:59,991 - #7 )
INFO  10:58:59,991 - #5 ;
INFO  10:58:59,991 - #41 for
INFO  10:58:59,991 - #6 (
INFO  10:58:59,991 - #45 var
INFO  10:58:59,991 - #12 =
INFO  10:58:59,992 - #42 0
INFO  10:58:59,992 - #5 ;
INFO  10:58:59,992 - #45 var
INFO  10:58:59,992 - #19 <
INFO  10:58:59,992 - #42 5
INFO  10:58:59,992 - #5 ;
INFO  10:58:59,992 - #45 var
INFO  10:58:59,992 - #38 ++
INFO  10:58:59,992 - #7 )
INFO  10:58:59,992 - #3 {
INFO  10:58:59,992 - #46 if
INFO  10:58:59,993 - #6 (
INFO  10:58:59,993 - #45 var
INFO  10:58:59,993 - #24 %
INFO  10:58:59,993 - #42 2
INFO  10:58:59,995 - #35 ==
INFO  10:58:59,995 - #42 0
INFO  10:58:59,995 - #7 )
INFO  10:58:59,995 - #3 {
INFO  10:58:59,996 - #9 print
INFO  10:58:59,996 - #6 (
INFO  10:58:59,996 - #43 f
INFO  10:58:59,996 - #7 )
INFO  10:58:59,996 - #5 ;
INFO  10:58:59,996 - #9 print
INFO  10:58:59,996 - #6 (
INFO  10:58:59,996 - #43 o
INFO  10:58:59,997 - #7 )
INFO  10:58:59,997 - #5 ;
INFO  10:58:59,997 - #9 print
INFO  10:58:59,997 - #6 (
INFO  10:58:59,997 - #43 r
INFO  10:58:59,997 - #7 )
INFO  10:58:59,997 - #5 ;
INFO  10:58:59,997 - #36 continue
INFO  10:58:59,997 - #5 ;
INFO  10:58:59,997 - #4 }
INFO  10:58:59,999 - #47 else
INFO  10:58:59,999 - #3 {
INFO  10:58:59,999 - #17 break
INFO  10:58:59,999 - #5 ;
INFO  10:59:00,000 - #4 }
INFO  10:59:00,001 - #9 print
INFO  10:59:00,001 - #6 (
INFO  10:59:00,001 - #45 eol
INFO  10:59:00,001 - #7 )
INFO  10:59:00,001 - #5 ;
INFO  10:59:00,001 - #4 }
INFO  10:59:00,001 - #45 var
INFO  10:59:00,002 - #12 =
INFO  10:59:00,002 - #45 printf
INFO  10:59:00,002 - #6 (
INFO  10:59:00,002 - #7 )
INFO  10:59:00,005 - #5 ;
INFO  10:59:00,005 - #4 }
INFO  10:59:00,006 - #4 }
INFO  10:59:00,082 - Program(
  ProgName(
   TestB1
  ) [ProgName]
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        NoVarDecl(
        ) [NoVarDecl]
        ConstDeclaration(
          ConstDeclarations(
            Type(
             int
            ) [Type]
            MultipleConsts(
              SingleConst(
                ConstItem(
                 x
                  InitializerNum(
                   3
                  ) [InitializerNum]
                ) [ConstItem]
              ) [SingleConst]
              ConstItem(
               init
                InitializerNum(
                 0
                ) [InitializerNum]
              ) [ConstItem]
            ) [MultipleConsts]
          ) [ConstDeclarations]
        ) [ConstDeclaration]
      ) [VarDeclLists]
      VarDeclaration(
        VarDeclarations(
          Type(
           int
          ) [Type]
          MultipleVars(
            SingleVar(
              Var(
               x1
                NoArrayVar(
                ) [NoArrayVar]
              ) [Var]
            ) [SingleVar]
            Var(
             x2
              ArrayVar(
              ) [ArrayVar]
            ) [Var]
          ) [MultipleVars]
        ) [VarDeclarations]
      ) [VarDeclaration]
    ) [VarDeclLists]
    EnumDeclaration(
      EnumDeclarations(
        EnumNamed(
         nums
        ) [EnumNamed]
        MultipleEnums(
          MultipleEnums(
            SingleEnum(
              InitEnum(
               ONE
               1
              ) [InitEnum]
            ) [SingleEnum]
            NoInitEnum(
             TWO
            ) [NoInitEnum]
          ) [MultipleEnums]
          InitEnum(
           FIVE
           5
          ) [InitEnum]
        ) [MultipleEnums]
      ) [EnumDeclarations]
    ) [EnumDeclaration]
  ) [VarDeclLists]
  GlobalMeths(
    OptMethods(
      OptMethods(
        OptMethods(
          OptMethods(
            NoOptMethods(
            ) [NoOptMethods]
            MethodDeclarations(
              MethodDeclTypeName(
                TypeIdentificator(
                  Type(
                   int
                  ) [Type]
                ) [TypeIdentificator]
               printf
              ) [MethodDeclTypeName]
              NoOptionalFormPars(
              ) [NoOptionalFormPars]
              NoOptVars(
              ) [NoOptVars]
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            OptionalStmt(
                              OptionalStmt(
                                OptionalStmt(
                                  NoOptionalStmt(
                                  ) [NoOptionalStmt]
                                  PrintStmt(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        DesignFactor(
                                          DesignVar(
                                            DesignatorName(
                                             eol
                                            ) [DesignatorName]
                                          ) [DesignVar]
                                          NoMethodCall(
                                          ) [NoMethodCall]
                                        ) [DesignFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                    DefaultWidth(
                                    ) [DefaultWidth]
                                  ) [PrintStmt]
                                ) [OptionalStmt]
                                PrintStmt(
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      CharFactor(
                                       t
                                      ) [CharFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                  PrintWidth(
                                   2
                                  ) [PrintWidth]
                                ) [PrintStmt]
                              ) [OptionalStmt]
                              PrintStmt(
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    CharFactor(
                                     e
                                    ) [CharFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                                PrintWidth(
                                 1
                                ) [PrintWidth]
                              ) [PrintStmt]
                            ) [OptionalStmt]
                            PrintStmt(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  CharFactor(
                                   s
                                  ) [CharFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                              PrintWidth(
                               1
                              ) [PrintWidth]
                            ) [PrintStmt]
                          ) [OptionalStmt]
                          PrintStmt(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                CharFactor(
                                 t
                                ) [CharFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            PrintWidth(
                             1
                            ) [PrintWidth]
                          ) [PrintStmt]
                        ) [OptionalStmt]
                        PrintStmt(
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              CharFactor(
                               d
                              ) [CharFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                          PrintWidth(
                           2
                          ) [PrintWidth]
                        ) [PrintStmt]
                      ) [OptionalStmt]
                      PrintStmt(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            CharFactor(
                             o
                            ) [CharFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                        PrintWidth(
                         1
                        ) [PrintWidth]
                      ) [PrintStmt]
                    ) [OptionalStmt]
                    PrintStmt(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          CharFactor(
                           n
                          ) [CharFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      PrintWidth(
                       1
                      ) [PrintWidth]
                    ) [PrintStmt]
                  ) [OptionalStmt]
                  PrintStmt(
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        CharFactor(
                         e
                        ) [CharFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                    PrintWidth(
                     1
                    ) [PrintWidth]
                  ) [PrintStmt]
                ) [OptionalStmt]
                ReturnStmt(
                  RetExpr(
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [RetExpr]
                ) [ReturnStmt]
              ) [OptionalStmt]
            ) [MethodDeclarations]
          ) [OptMethods]
          MethodDeclarations(
            MethodDeclTypeName(
              TypeIdentificator(
                Type(
                 int
                ) [Type]
              ) [TypeIdentificator]
             inc
            ) [MethodDeclTypeName]
            OptionalFormPars(
              SingleFormPars(
                FormParItem(
                  Type(
                   int
                  ) [Type]
                 x
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [FormParItem]
              ) [SingleFormPars]
            ) [OptionalFormPars]
            NoOptVars(
            ) [NoOptVars]
            OptionalStmt(
              NoOptionalStmt(
              ) [NoOptionalStmt]
              ReturnStmt(
                RetExpr(
                  Expression(
                    Positive(
                    ) [Positive]
                    Terms(
                      DesignFactor(
                        DesignVar(
                          DesignatorName(
                           x
                          ) [DesignatorName]
                        ) [DesignVar]
                        NoMethodCall(
                        ) [NoMethodCall]
                      ) [DesignFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    WithAddTerms(
                      NoAddTerms(
                      ) [NoAddTerms]
                      PlusOp(
                      ) [PlusOp]
                      Terms(
                        DesignFactor(
                          DesignFld(
                            DesignVar(
                              DesignatorName(
                               nums
                              ) [DesignatorName]
                            ) [DesignVar]
                           ONE
                          ) [DesignFld]
                          NoMethodCall(
                          ) [NoMethodCall]
                        ) [DesignFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                    ) [WithAddTerms]
                  ) [Expression]
                ) [RetExpr]
              ) [ReturnStmt]
            ) [OptionalStmt]
          ) [MethodDeclarations]
        ) [OptMethods]
        MethodDeclarations(
          MethodDeclTypeName(
            TypeIdentificator(
              Type(
               int
              ) [Type]
            ) [TypeIdentificator]
           dec
          ) [MethodDeclTypeName]
          OptionalFormPars(
            SingleFormPars(
              FormParItem(
                Type(
                 int
                ) [Type]
               x
                NoArrayVar(
                ) [NoArrayVar]
              ) [FormParItem]
            ) [SingleFormPars]
          ) [OptionalFormPars]
          NoOptVars(
          ) [NoOptVars]
          OptionalStmt(
            NoOptionalStmt(
            ) [NoOptionalStmt]
            ReturnStmt(
              RetExpr(
                Expression(
                  Positive(
                  ) [Positive]
                  Terms(
                    DesignFactor(
                      DesignVar(
                        DesignatorName(
                         x
                        ) [DesignatorName]
                      ) [DesignVar]
                      NoMethodCall(
                      ) [NoMethodCall]
                    ) [DesignFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  WithAddTerms(
                    NoAddTerms(
                    ) [NoAddTerms]
                    MinusOp(
                    ) [MinusOp]
                    Terms(
                      DesignFactor(
                        DesignFld(
                          DesignVar(
                            DesignatorName(
                             nums
                            ) [DesignatorName]
                          ) [DesignVar]
                         ONE
                        ) [DesignFld]
                        NoMethodCall(
                        ) [NoMethodCall]
                      ) [DesignFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                  ) [WithAddTerms]
                ) [Expression]
              ) [RetExpr]
            ) [ReturnStmt]
          ) [OptionalStmt]
        ) [MethodDeclarations]
      ) [OptMethods]
      MethodDeclarations(
        MethodDeclTypeName(
          VoidIdentificator(
          ) [VoidIdentificator]
         main
        ) [MethodDeclTypeName]
        NoOptionalFormPars(
        ) [NoOptionalFormPars]
        OptVars(
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   var
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               bool
              ) [Type]
              SingleVar(
                Var(
                 var2
                  NoArrayVar(
                  ) [NoArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          VarDeclarations(
            Type(
             char
            ) [Type]
            SingleVar(
              Var(
               var3
                ArrayVar(
                ) [ArrayVar]
              ) [Var]
            ) [SingleVar]
          ) [VarDeclarations]
        ) [OptVars]
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      DesignatorStmt(
                        AssignOper(
                          DesignVar(
                            DesignatorName(
                             var3
                            ) [DesignatorName]
                          ) [DesignVar]
                          AssignOperation(
                          ) [AssignOperation]
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              NewArrFactor(
                                Type(
                                 char
                                ) [Type]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                                WithInitArr(
                                  IniStart(
                                  ) [IniStart]
                                  IniStart2(
                                  ) [IniStart2]
                                  InitListDerived1(
                                    InitListDerived1(
                                      InitListDerived2(
                                        InitExpr(
                                          Expression(
                                            Positive(
                                            ) [Positive]
                                            Terms(
                                              CharFactor(
                                               a
                                              ) [CharFactor]
                                              NoMulFacts(
                                              ) [NoMulFacts]
                                            ) [Terms]
                                            NoAddTerms(
                                            ) [NoAddTerms]
                                          ) [Expression]
                                        ) [InitExpr]
                                      ) [InitListDerived2]
                                      InitExpr(
                                        Expression(
                                          Positive(
                                          ) [Positive]
                                          Terms(
                                            CharFactor(
                                             r
                                            ) [CharFactor]
                                            NoMulFacts(
                                            ) [NoMulFacts]
                                          ) [Terms]
                                          NoAddTerms(
                                          ) [NoAddTerms]
                                        ) [Expression]
                                      ) [InitExpr]
                                    ) [InitListDerived1]
                                    InitExpr(
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          CharFactor(
                                           r
                                          ) [CharFactor]
                                          NoMulFacts(
                                          ) [NoMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [InitExpr]
                                  ) [InitListDerived1]
                                ) [WithInitArr]
                              ) [NewArrFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [AssignOper]
                      ) [DesignatorStmt]
                    ) [OptionalStmt]
                    ForStmt(
                      OptForStmt(
                        OptDesignStmtDerived1(
                          AssignOper(
                            DesignVar(
                              DesignatorName(
                               var
                              ) [DesignatorName]
                            ) [DesignVar]
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 0
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [AssignOper]
                        ) [OptDesignStmtDerived1]
                      ) [OptForStmt]
                      ForCond(
                        ConditionSingle(
                          CondTermSingle(
                            CondFacts(
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  DesignFactor(
                                    DesignVar(
                                      DesignatorName(
                                       var
                                      ) [DesignatorName]
                                    ) [DesignVar]
                                    NoMethodCall(
                                    ) [NoMethodCall]
                                  ) [DesignFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                              RelLess(
                              ) [RelLess]
                              Expression(
                                Positive(
                                ) [Positive]
                                Terms(
                                  NumFactor(
                                   3
                                  ) [NumFactor]
                                  NoMulFacts(
                                  ) [NoMulFacts]
                                ) [Terms]
                                NoAddTerms(
                                ) [NoAddTerms]
                              ) [Expression]
                            ) [CondFacts]
                          ) [CondTermSingle]
                        ) [ConditionSingle]
                      ) [ForCond]
                      CondEnd(
                      ) [CondEnd]
                      OptForDesignStmt2(
                        OptDesignStmtDerived1(
                          PlusPlusSideEff(
                            DesignVar(
                              DesignatorName(
                               var
                              ) [DesignatorName]
                            ) [DesignVar]
                          ) [PlusPlusSideEff]
                        ) [OptDesignStmtDerived1]
                      ) [OptForDesignStmt2]
                      ForStatement(
                        PrintStmt(
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                DesignArr(
                                  DesignVar(
                                    DesignatorName(
                                     var3
                                    ) [DesignatorName]
                                  ) [DesignVar]
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      DesignFactor(
                                        DesignVar(
                                          DesignatorName(
                                           var
                                          ) [DesignatorName]
                                        ) [DesignVar]
                                        NoMethodCall(
                                        ) [NoMethodCall]
                                      ) [DesignFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [DesignArr]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                          DefaultWidth(
                          ) [DefaultWidth]
                        ) [PrintStmt]
                      ) [ForStatement]
                    ) [ForStmt]
                  ) [OptionalStmt]
                  PrintStmt(
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        DesignFactor(
                          DesignVar(
                            DesignatorName(
                             eol
                            ) [DesignatorName]
                          ) [DesignVar]
                          NoMethodCall(
                          ) [NoMethodCall]
                        ) [DesignFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                    DefaultWidth(
                    ) [DefaultWidth]
                  ) [PrintStmt]
                ) [OptionalStmt]
                IfStmt(
                  IfCond(
                    ConditionSingle(
                      CondTerms(
                        CondTermSingle(
                          CondFacts(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                DesignFactor(
                                  DesignVar(
                                    DesignatorName(
                                     var
                                    ) [DesignatorName]
                                  ) [DesignVar]
                                  NoMethodCall(
                                  ) [NoMethodCall]
                                ) [DesignFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            RelSame(
                            ) [RelSame]
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                NumFactor(
                                 3
                                ) [NumFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                          ) [CondFacts]
                        ) [CondTermSingle]
                        CondFactSingle(
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              DesignFactor(
                                DesignVar(
                                  DesignatorName(
                                   var2
                                  ) [DesignatorName]
                                ) [DesignVar]
                                NoMethodCall(
                                ) [NoMethodCall]
                              ) [DesignFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                        ) [CondFactSingle]
                      ) [CondTerms]
                    ) [ConditionSingle]
                  ) [IfCond]
                  IfStart(
                  ) [IfStart]
                  BlockStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          NoOptionalStmt(
                          ) [NoOptionalStmt]
                          PrintStmt(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                CharFactor(
                                 e
                                ) [CharFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            DefaultWidth(
                            ) [DefaultWidth]
                          ) [PrintStmt]
                        ) [OptionalStmt]
                        PrintStmt(
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              CharFactor(
                               r
                              ) [CharFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                          DefaultWidth(
                          ) [DefaultWidth]
                        ) [PrintStmt]
                      ) [OptionalStmt]
                      PrintStmt(
                        Expression(
                          Positive(
                          ) [Positive]
                          Terms(
                            CharFactor(
                             r
                            ) [CharFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                          NoAddTerms(
                          ) [NoAddTerms]
                        ) [Expression]
                        DefaultWidth(
                        ) [DefaultWidth]
                      ) [PrintStmt]
                    ) [OptionalStmt]
                  ) [BlockStmt]
                  ElseStmt(
                    ElseStart(
                    ) [ElseStart]
                    BlockStmt(
                      OptionalStmt(
                        OptionalStmt(
                          NoOptionalStmt(
                          ) [NoOptionalStmt]
                          PrintStmt(
                            Expression(
                              Positive(
                              ) [Positive]
                              Terms(
                                CharFactor(
                                 i
                                ) [CharFactor]
                                NoMulFacts(
                                ) [NoMulFacts]
                              ) [Terms]
                              NoAddTerms(
                              ) [NoAddTerms]
                            ) [Expression]
                            DefaultWidth(
                            ) [DefaultWidth]
                          ) [PrintStmt]
                        ) [OptionalStmt]
                        PrintStmt(
                          Expression(
                            Positive(
                            ) [Positive]
                            Terms(
                              CharFactor(
                               f
                              ) [CharFactor]
                              NoMulFacts(
                              ) [NoMulFacts]
                            ) [Terms]
                            NoAddTerms(
                            ) [NoAddTerms]
                          ) [Expression]
                          DefaultWidth(
                          ) [DefaultWidth]
                        ) [PrintStmt]
                      ) [OptionalStmt]
                    ) [BlockStmt]
                    ElseEnd(
                    ) [ElseEnd]
                  ) [ElseStmt]
                ) [IfStmt]
              ) [OptionalStmt]
              PrintStmt(
                Expression(
                  Positive(
                  ) [Positive]
                  Terms(
                    DesignFactor(
                      DesignVar(
                        DesignatorName(
                         eol
                        ) [DesignatorName]
                      ) [DesignVar]
                      NoMethodCall(
                      ) [NoMethodCall]
                    ) [DesignFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  NoAddTerms(
                  ) [NoAddTerms]
                ) [Expression]
                DefaultWidth(
                ) [DefaultWidth]
              ) [PrintStmt]
            ) [OptionalStmt]
            ForStmt(
              OptForStmt(
                OptDesignStmtDerived1(
                  AssignOper(
                    DesignVar(
                      DesignatorName(
                       var
                      ) [DesignatorName]
                    ) [DesignVar]
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      Positive(
                      ) [Positive]
                      Terms(
                        NumFactor(
                         0
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [AssignOper]
                ) [OptDesignStmtDerived1]
              ) [OptForStmt]
              ForCond(
                ConditionSingle(
                  CondTermSingle(
                    CondFacts(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            DesignVar(
                              DesignatorName(
                               var
                              ) [DesignatorName]
                            ) [DesignVar]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      RelLess(
                      ) [RelLess]
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          NumFactor(
                           5
                          ) [NumFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                    ) [CondFacts]
                  ) [CondTermSingle]
                ) [ConditionSingle]
              ) [ForCond]
              CondEnd(
              ) [CondEnd]
              OptForDesignStmt2(
                OptDesignStmtDerived1(
                  PlusPlusSideEff(
                    DesignVar(
                      DesignatorName(
                       var
                      ) [DesignatorName]
                    ) [DesignVar]
                  ) [PlusPlusSideEff]
                ) [OptDesignStmtDerived1]
              ) [OptForDesignStmt2]
              ForStatement(
                BlockStmt(
                  OptionalStmt(
                    OptionalStmt(
                      NoOptionalStmt(
                      ) [NoOptionalStmt]
                      IfStmt(
                        IfCond(
                          ConditionSingle(
                            CondTermSingle(
                              CondFacts(
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    DesignFactor(
                                      DesignVar(
                                        DesignatorName(
                                         var
                                        ) [DesignatorName]
                                      ) [DesignVar]
                                      NoMethodCall(
                                      ) [NoMethodCall]
                                    ) [DesignFactor]
                                    WithMulFacts(
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                      ModOp(
                                      ) [ModOp]
                                      NumFactor(
                                       2
                                      ) [NumFactor]
                                    ) [WithMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                                RelSame(
                                ) [RelSame]
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    NumFactor(
                                     0
                                    ) [NumFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [CondFacts]
                            ) [CondTermSingle]
                          ) [ConditionSingle]
                        ) [IfCond]
                        IfStart(
                        ) [IfStart]
                        BlockStmt(
                          OptionalStmt(
                            OptionalStmt(
                              OptionalStmt(
                                OptionalStmt(
                                  NoOptionalStmt(
                                  ) [NoOptionalStmt]
                                  PrintStmt(
                                    Expression(
                                      Positive(
                                      ) [Positive]
                                      Terms(
                                        CharFactor(
                                         f
                                        ) [CharFactor]
                                        NoMulFacts(
                                        ) [NoMulFacts]
                                      ) [Terms]
                                      NoAddTerms(
                                      ) [NoAddTerms]
                                    ) [Expression]
                                    DefaultWidth(
                                    ) [DefaultWidth]
                                  ) [PrintStmt]
                                ) [OptionalStmt]
                                PrintStmt(
                                  Expression(
                                    Positive(
                                    ) [Positive]
                                    Terms(
                                      CharFactor(
                                       o
                                      ) [CharFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                  DefaultWidth(
                                  ) [DefaultWidth]
                                ) [PrintStmt]
                              ) [OptionalStmt]
                              PrintStmt(
                                Expression(
                                  Positive(
                                  ) [Positive]
                                  Terms(
                                    CharFactor(
                                     r
                                    ) [CharFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                                DefaultWidth(
                                ) [DefaultWidth]
                              ) [PrintStmt]
                            ) [OptionalStmt]
                            ContinueStmt(
                            ) [ContinueStmt]
                          ) [OptionalStmt]
                        ) [BlockStmt]
                        ElseStmt(
                          ElseStart(
                          ) [ElseStart]
                          BlockStmt(
                            OptionalStmt(
                              NoOptionalStmt(
                              ) [NoOptionalStmt]
                              BreakStmt(
                              ) [BreakStmt]
                            ) [OptionalStmt]
                          ) [BlockStmt]
                          ElseEnd(
                          ) [ElseEnd]
                        ) [ElseStmt]
                      ) [IfStmt]
                    ) [OptionalStmt]
                    PrintStmt(
                      Expression(
                        Positive(
                        ) [Positive]
                        Terms(
                          DesignFactor(
                            DesignVar(
                              DesignatorName(
                               eol
                              ) [DesignatorName]
                            ) [DesignVar]
                            NoMethodCall(
                            ) [NoMethodCall]
                          ) [DesignFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        NoAddTerms(
                        ) [NoAddTerms]
                      ) [Expression]
                      DefaultWidth(
                      ) [DefaultWidth]
                    ) [PrintStmt]
                  ) [OptionalStmt]
                ) [BlockStmt]
              ) [ForStatement]
            ) [ForStmt]
          ) [OptionalStmt]
          DesignatorStmt(
            AssignOper(
              DesignVar(
                DesignatorName(
                 var
                ) [DesignatorName]
              ) [DesignVar]
              AssignOperation(
              ) [AssignOperation]
              Expression(
                Positive(
                ) [Positive]
                Terms(
                  DesignFactor(
                    DesignVar(
                      DesignatorName(
                       printf
                      ) [DesignatorName]
                    ) [DesignVar]
                    WithMethodCall(
                      NoActPars(
                      ) [NoActPars]
                    ) [WithMethodCall]
                  ) [DesignFactor]
                  NoMulFacts(
                  ) [NoMulFacts]
                ) [Terms]
                NoAddTerms(
                ) [NoAddTerms]
              ) [Expression]
            ) [AssignOper]
          ) [DesignatorStmt]
        ) [OptionalStmt]
      ) [MethodDeclarations]
    ) [OptMethods]
  ) [GlobalMeths]
) [Program]
INFO  10:59:00,085 - ===================================
INFO  10:59:00,086 - INFO:  Pocetak programa TestB1 na liniji 1
INFO  10:59:00,088 - INFO:  Deklarisana konstanta x na liniji 3
INFO  10:59:00,088 - INFO:  Deklarisana konstanta init na liniji 3
INFO  10:59:00,088 - INFO:  Deklarisana globalna promenljiva x1 na liniji 4
INFO  10:59:00,088 - INFO:  Deklarisan niz x2 na liniji 4
INFO  10:59:00,088 - INFO:  Definisan enum tip nums na liniji 6
INFO  10:59:00,088 - INFO:  Obradjuje se funkcija printf na liniji 10
INFO  10:59:00,089 - INFO:  Pristup simbolu eol na liniji 12
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 22
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 37
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 52
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 22
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 37
INFO  10:59:00,090 - INFO:  Poziv PRINT funkcije na liniji 52
INFO  10:59:00,091 - INFO:  Deklarisan metod printf na liniji 10
INFO  10:59:00,091 - INFO:  Obradjuje se funkcija inc na liniji 19
INFO  10:59:00,091 - INFO:  Deklarisan formalni parametar x na liniji 19
INFO  10:59:00,091 - INFO:  Pristup simbolu x na liniji 20
INFO  10:59:00,091 - INFO:  Pristup simbolu nums na liniji 20
INFO  10:59:00,091 - INFO:  Pristup konstanti nums.ONE na liniji 20
INFO  10:59:00,091 - INFO:  Deklarisan metod inc na liniji 19
INFO  10:59:00,091 - INFO:  Obradjuje se funkcija dec na liniji 23
INFO  10:59:00,091 - INFO:  Deklarisan formalni parametar x na liniji 23
INFO  10:59:00,091 - INFO:  Pristup simbolu x na liniji 24
INFO  10:59:00,091 - INFO:  Pristup simbolu nums na liniji 24
INFO  10:59:00,092 - INFO:  Pristup konstanti nums.ONE na liniji 24
INFO  10:59:00,092 - INFO:  Deklarisan metod dec na liniji 23
INFO  10:59:00,092 - INFO:  Obradjuje se funkcija main na liniji 27
INFO  10:59:00,092 - INFO:  Deklarisana promenljiva var na liniji 27
INFO  10:59:00,092 - INFO:  Deklarisana promenljiva var2 na liniji 27
INFO  10:59:00,092 - INFO:  Deklarisan niz var3 na liniji 27
INFO  10:59:00,092 - INFO:  Pristup simbolu var3 na liniji 31
INFO  10:59:00,092 - INFO: Pristup parametru init liste - 0
INFO  10:59:06,856 - INFO: Pristup parametru init liste - 1 na liniji 20
INFO  10:59:07,544 - INFO: Pristup parametru init liste - 2 na liniji 24
INFO  10:59:08,249 - INFO: Pristup parametru init liste - 3 na liniji 29
INFO  10:59:08,249 - INFO:  Pristup simbolu var na liniji 35
INFO  10:59:08,255 - INFO:  Pristup simbolu var na liniji 35
INFO  10:59:08,255 - INFO:  Pristup simbolu var na liniji 35
INFO  10:59:08,255 - INFO:  Pristup simbolu var3 na liniji 36
INFO  10:59:08,255 - INFO:  Pristup simbolu var na liniji 36
INFO  10:59:08,255 - INFO:  Pristup elementu niza var3 na liniji 36
INFO  10:59:08,255 - INFO:  Poziv PRINT funkcije na liniji 8
INFO  10:59:08,255 - INFO:  Pristup simbolu eol na liniji 37
INFO  10:59:08,255 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  10:59:08,255 - INFO:  Pristup simbolu var na liniji 42
INFO  10:59:08,256 - INFO:  Pristup simbolu var2 na liniji 42
INFO  10:59:08,256 - INFO:  Poziv PRINT funkcije na liniji 8
INFO  10:59:08,256 - INFO:  Poziv PRINT funkcije na liniji 20
INFO  10:59:08,256 - INFO:  Poziv PRINT funkcije na liniji 32
INFO  10:59:08,257 - INFO:  Poziv PRINT funkcije na liniji 8
INFO  10:59:08,257 - INFO:  Poziv PRINT funkcije na liniji 20
INFO  10:59:08,257 - INFO:  Pristup simbolu eol na liniji 47
INFO  10:59:08,257 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  10:59:08,257 - INFO:  Pristup simbolu var na liniji 51
INFO  10:59:08,257 - INFO:  Pristup simbolu var na liniji 51
INFO  10:59:08,257 - INFO:  Pristup simbolu var na liniji 51
INFO  10:59:08,257 - INFO:  Pristup simbolu var na liniji 52
INFO  10:59:08,257 - INFO:  Poziv PRINT funkcije na liniji 9
INFO  10:59:08,257 - INFO:  Poziv PRINT funkcije na liniji 20
INFO  10:59:08,257 - INFO:  Poziv PRINT funkcije na liniji 31
INFO  10:59:08,257 - INFO:  Pristup simbolu eol na liniji 60
INFO  10:59:08,257 - INFO:  Poziv PRINT funkcije na liniji 7
INFO  10:59:08,257 - INFO:  Pristup simbolu var na liniji 65
INFO  10:59:08,257 - INFO:  Pristup metodi printf na liniji 65
INFO  10:59:09,231 - INFO:  Pozvana metoda printf na liniji 65
INFO  10:59:09,231 - INFO:  Deklarisan metod main na liniji 27
INFO  10:59:09,231 - ===================================
