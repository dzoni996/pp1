INFO  01:56:15,411 - Compiling source file: C:\Users\Ana\git\pp1\MJCompiler\test\program.mj
INFO  01:56:15,484 - #2 program
INFO  01:56:15,484 - #45 MJProgram
INFO  01:56:15,484 - #45 int
INFO  01:56:15,485 - #45 x
INFO  01:56:15,486 - #5 ;
INFO  01:56:15,487 - #45 char
INFO  01:56:15,487 - #45 x2
INFO  01:56:15,488 - #26 [
INFO  01:56:15,488 - #36 ]
INFO  01:56:15,488 - #5 ;
INFO  01:56:15,490 - #23 const
INFO  01:56:15,490 - #45 bool
INFO  01:56:15,490 - #45 y2
INFO  01:56:15,490 - #12 =
INFO  01:56:15,490 - #28 true
INFO  01:56:15,490 - #5 ;
INFO  01:56:15,491 - #31 enum
INFO  01:56:15,491 - #45 nums
INFO  01:56:15,491 - #3 {
INFO  01:56:15,492 - #45 ONE
INFO  01:56:15,492 - #8 ,
INFO  01:56:15,492 - #45 TWO
INFO  01:56:15,492 - #8 ,
INFO  01:56:15,493 - #45 THREE
INFO  01:56:15,493 - #12 =
INFO  01:56:15,493 - #44 3
INFO  01:56:15,493 - #4 }
INFO  01:56:15,493 - #16 class
INFO  01:56:15,494 - #45 klasa
INFO  01:56:15,494 - #41 extends
INFO  01:56:15,494 - #45 Inyt
INFO  01:56:15,494 - #42 implements
INFO  01:56:15,494 - #45 Inter1
INFO  01:56:15,494 - #8 ,
INFO  01:56:15,495 - #45 INter2
INFO  01:56:15,495 - #3 {
INFO  01:56:15,495 - #45 int
INFO  01:56:15,496 - #45 f
INFO  01:56:15,496 - #5 ;
INFO  01:56:15,496 - #45 bool
INFO  01:56:15,496 - #45 f5
INFO  01:56:15,496 - #26 [
INFO  01:56:15,496 - #36 ]
INFO  01:56:15,496 - #5 ;
INFO  01:56:15,496 - #3 {
INFO  01:56:15,497 - #13 void
INFO  01:56:15,497 - #45 f
INFO  01:56:15,498 - #6 (
INFO  01:56:15,498 - #7 )
INFO  01:56:15,499 - #3 {
INFO  01:56:15,499 - #4 }
INFO  01:56:15,500 - #4 }
INFO  01:56:15,501 - #4 }
INFO  01:56:15,501 - #14 interface
INFO  01:56:15,501 - #45 Inter1
INFO  01:56:15,501 - #3 {
INFO  01:56:15,501 - #13 void
INFO  01:56:15,501 - #45 foo
INFO  01:56:15,502 - #6 (
INFO  01:56:15,502 - #45 int
INFO  01:56:15,502 - #45 x
INFO  01:56:15,502 - #8 ,
INFO  01:56:15,502 - #45 int
INFO  01:56:15,502 - #45 z
INFO  01:56:15,502 - #26 [
INFO  01:56:15,502 - #36 ]
INFO  01:56:15,502 - #7 )
INFO  01:56:15,503 - #5 ;
INFO  01:56:15,503 - #4 }
INFO  01:56:15,503 - #3 {
INFO  01:56:15,504 - #13 void
INFO  01:56:15,504 - #45 m2
INFO  01:56:15,504 - #6 (
INFO  01:56:15,504 - #45 int
INFO  01:56:15,504 - #45 x5
INFO  01:56:15,504 - #26 [
INFO  01:56:15,504 - #36 ]
INFO  01:56:15,505 - #7 )
INFO  01:56:15,505 - #3 {
INFO  01:56:15,505 - #45 var
INFO  01:56:15,505 - #15 .
INFO  01:56:15,506 - #45 x
INFO  01:56:15,506 - #15 .
INFO  01:56:15,506 - #45 d
INFO  01:56:15,506 - #26 [
INFO  01:56:15,506 - #35 -
INFO  01:56:15,506 - #44 5
INFO  01:56:15,507 - #32 *
INFO  01:56:15,508 - #44 8
INFO  01:56:15,510 - #32 *
INFO  01:56:15,510 - #44 9
INFO  01:56:15,510 - #32 *
INFO  01:56:15,510 - #44 8
INFO  01:56:15,510 - #36 ]
INFO  01:56:15,511 - #40 ++
INFO  01:56:15,511 - #5 ;
INFO  01:56:15,512 - #45 var
INFO  01:56:15,512 - #15 .
INFO  01:56:15,512 - #45 a
INFO  01:56:15,512 - #12 =
INFO  01:56:15,519 - #45 varA
INFO  01:56:15,521 - #32 *
INFO  01:56:15,522 - #45 varB
INFO  01:56:15,522 - #6 (
INFO  01:56:15,522 - #7 )
INFO  01:56:15,522 - #32 *
INFO  01:56:15,523 - #45 varC
INFO  01:56:15,523 - #6 (
INFO  01:56:15,523 - #28 false
INFO  01:56:15,523 - #7 )
INFO  01:56:15,524 - #5 ;
INFO  01:56:15,524 - #45 var
INFO  01:56:15,524 - #15 .
INFO  01:56:15,524 - #45 b
INFO  01:56:15,524 - #40 ++
INFO  01:56:15,524 - #5 ;
INFO  01:56:15,524 - #45 var
INFO  01:56:15,524 - #15 .
INFO  01:56:15,524 - #45 c
INFO  01:56:15,524 - #6 (
INFO  01:56:15,524 - #7 )
INFO  01:56:15,524 - #5 ;
INFO  01:56:15,524 - #45 var
INFO  01:56:15,525 - #15 .
INFO  01:56:15,525 - #45 d
INFO  01:56:15,525 - #12 =
INFO  01:56:15,525 - #18 new
INFO  01:56:15,525 - #45 klasa
INFO  01:56:15,525 - #5 ;
INFO  01:56:15,526 - #45 var
INFO  01:56:15,526 - #15 .
INFO  01:56:15,526 - #45 e
INFO  01:56:15,526 - #12 =
INFO  01:56:15,526 - #6 (
INFO  01:56:15,526 - #35 -
INFO  01:56:15,526 - #44 25
INFO  01:56:15,526 - #32 *
INFO  01:56:15,526 - #44 9
INFO  01:56:15,526 - #7 )
INFO  01:56:15,526 - #5 ;
INFO  01:56:15,527 - #17 break
INFO  01:56:15,527 - #5 ;
INFO  01:56:15,527 - #38 continue
INFO  01:56:15,527 - #5 ;
INFO  01:56:15,527 - #10 return
INFO  01:56:15,528 - #5 ;
INFO  01:56:15,528 - #10 return
INFO  01:56:15,528 - #44 1
INFO  01:56:15,528 - #35 -
INFO  01:56:15,528 - #44 2
INFO  01:56:15,530 - #5 ;
INFO  01:56:15,530 - #27 read
INFO  01:56:15,530 - #6 (
INFO  01:56:15,530 - #45 a
INFO  01:56:15,530 - #7 )
INFO  01:56:15,530 - #5 ;
INFO  01:56:15,530 - #9 print
INFO  01:56:15,530 - #6 (
INFO  01:56:15,530 - #22 v
INFO  01:56:15,530 - #7 )
INFO  01:56:15,532 - #5 ;
INFO  01:56:15,532 - #3 {
INFO  01:56:15,532 - #9 print
INFO  01:56:15,532 - #6 (
INFO  01:56:15,532 - #22 a
INFO  01:56:15,532 - #7 )
INFO  01:56:15,532 - #5 ;
INFO  01:56:15,532 - #4 }
INFO  01:56:15,532 - #46 if
INFO  01:56:15,533 - #6 (
INFO  01:56:15,533 - #45 a
INFO  01:56:15,533 - #19 <
INFO  01:56:15,533 - #44 6
INFO  01:56:15,534 - #7 )
INFO  01:56:15,534 - #17 break
INFO  01:56:15,534 - #5 ;
INFO  01:56:15,535 - #46 if
INFO  01:56:15,536 - #6 (
INFO  01:56:15,536 - #44 5
INFO  01:56:15,536 - #37 ==
INFO  01:56:15,536 - #45 f
INFO  01:56:15,537 - #7 )
INFO  01:56:15,537 - #27 read
INFO  01:56:15,537 - #6 (
INFO  01:56:15,538 - #45 a
INFO  01:56:15,538 - #7 )
INFO  01:56:15,538 - #5 ;
INFO  01:56:15,538 - #47 else
INFO  01:56:15,538 - #27 read
INFO  01:56:15,539 - #6 (
INFO  01:56:15,539 - #45 f
INFO  01:56:15,539 - #7 )
INFO  01:56:15,539 - #5 ;
INFO  01:56:15,539 - #4 }
INFO  01:56:15,540 - #4 }
INFO  01:56:15,544 - Program(
 MJProgram
  VarDeclLists(
    VarDeclLists(
      VarDeclLists(
        VarDeclLists(
          VarDeclLists(
            VarDeclLists(
              NoVarDecl(
              ) [NoVarDecl]
              VarDeclaration(
                VarDeclarations(
                  Type(
                   int
                  ) [Type]
                  SingleVar(
                    Var(
                     x
                      NoArrayVar(
                      ) [NoArrayVar]
                    ) [Var]
                  ) [SingleVar]
                ) [VarDeclarations]
              ) [VarDeclaration]
            ) [VarDeclLists]
            VarDeclaration(
              VarDeclarations(
                Type(
                 char
                ) [Type]
                SingleVar(
                  Var(
                   x2
                    ArrayVar(
                    ) [ArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [VarDeclaration]
          ) [VarDeclLists]
          ConstDeclaration(
            ConstDeclarations(
              Type(
               bool
              ) [Type]
              SingleConst(
                ConstInit(
                 y2
                  InitializerBool(
                  ) [InitializerBool]
                ) [ConstInit]
              ) [SingleConst]
            ) [ConstDeclarations]
          ) [ConstDeclaration]
        ) [VarDeclLists]
        EnumDeclaration(
          EnumDeclarations(
           nums
            MultipleEnums(
              MultipleEnums(
                SingleEnum(
                  NoInitEnum(
                   ONE
                  ) [NoInitEnum]
                ) [SingleEnum]
                NoInitEnum(
                 TWO
                ) [NoInitEnum]
              ) [MultipleEnums]
              InitEnum(
               THREE
               3
              ) [InitEnum]
            ) [MultipleEnums]
          ) [EnumDeclarations]
        ) [EnumDeclaration]
      ) [VarDeclLists]
      ClasstDeclaration(
        ClassDeclaration(
         klasa
          SuperClass(
            Type(
             Inyt
            ) [Type]
          ) [SuperClass]
          ImplInteraces(
            InterfList(
              NoInterfList(
                Type(
                 Inter1
                ) [Type]
              ) [NoInterfList]
              Type(
               INter2
              ) [Type]
            ) [InterfList]
          ) [ImplInteraces]
          OptVars(
            OptVars(
              NoOptVars(
              ) [NoOptVars]
              VarDeclarations(
                Type(
                 int
                ) [Type]
                SingleVar(
                  Var(
                   f
                    NoArrayVar(
                    ) [NoArrayVar]
                  ) [Var]
                ) [SingleVar]
              ) [VarDeclarations]
            ) [OptVars]
            VarDeclarations(
              Type(
               bool
              ) [Type]
              SingleVar(
                Var(
                 f5
                  ArrayVar(
                  ) [ArrayVar]
                ) [Var]
              ) [SingleVar]
            ) [VarDeclarations]
          ) [OptVars]
          ClassMethodDecl(
            OptMethods(
              NoOptMethods(
              ) [NoOptMethods]
              MethodDeclarations(
                VoidIdentificator(
                ) [VoidIdentificator]
               f
                NoOptionalFormPars(
                ) [NoOptionalFormPars]
                NoOptVars(
                ) [NoOptVars]
                NoOptionalStmt(
                ) [NoOptionalStmt]
              ) [MethodDeclarations]
            ) [OptMethods]
          ) [ClassMethodDecl]
        ) [ClassDeclaration]
      ) [ClasstDeclaration]
    ) [VarDeclLists]
    InterfaceDeclaration(
      InterfaceDeclarations(
       Inter1
        OptInterMethodDeclList(
          SingleInterfaceMethodDeclaration(
            InterfaceMethodDeclaration(
              VoidIdentificator(
              ) [VoidIdentificator]
             foo
              OptionalFormPars(
                MultipleFormPars(
                  SingleFormPars(
                    FormParam(
                      Type(
                       int
                      ) [Type]
                     x
                    ) [FormParam]
                  ) [SingleFormPars]
                  FormParArray(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [FormParArray]
                ) [MultipleFormPars]
              ) [OptionalFormPars]
            ) [InterfaceMethodDeclaration]
          ) [SingleInterfaceMethodDeclaration]
        ) [OptInterMethodDeclList]
      ) [InterfaceDeclarations]
    ) [InterfaceDeclaration]
  ) [VarDeclLists]
  OptMethods(
    NoOptMethods(
    ) [NoOptMethods]
    MethodDeclarations(
      VoidIdentificator(
      ) [VoidIdentificator]
     m2
      OptionalFormPars(
        SingleFormPars(
          FormParArray(
            Type(
             int
            ) [Type]
           x5
          ) [FormParArray]
        ) [SingleFormPars]
      ) [OptionalFormPars]
      NoOptVars(
      ) [NoOptVars]
      OptionalStmt(
        OptionalStmt(
          OptionalStmt(
            OptionalStmt(
              OptionalStmt(
                OptionalStmt(
                  OptionalStmt(
                    OptionalStmt(
                      OptionalStmt(
                        OptionalStmt(
                          OptionalStmt(
                            OptionalStmt(
                              OptionalStmt(
                                OptionalStmt(
                                  OptionalStmt(
                                    NoOptionalStmt(
                                    ) [NoOptionalStmt]
                                    DesignatorStmt(
                                      DesignStmt(
                                        Design(
                                         var
                                          OptDesignator(
                                            OptDesignator(
                                              OptDesignator(
                                                NoDesignator(
                                                ) [NoDesignator]
                                                DesignField(
                                                 x
                                                ) [DesignField]
                                              ) [OptDesignator]
                                              DesignField(
                                               d
                                              ) [DesignField]
                                            ) [OptDesignator]
                                            DesignArr(
                                              Expression(
                                                Positive(
                                                ) [Positive]
                                                Terms(
                                                  NumFactor(
                                                   5
                                                  ) [NumFactor]
                                                  WithMulFacts(
                                                    WithMulFacts(
                                                      WithMulFacts(
                                                        NoMulFacts(
                                                        ) [NoMulFacts]
                                                        MultOp(
                                                        ) [MultOp]
                                                        NumFactor(
                                                         8
                                                        ) [NumFactor]
                                                      ) [WithMulFacts]
                                                      MultOp(
                                                      ) [MultOp]
                                                      NumFactor(
                                                       9
                                                      ) [NumFactor]
                                                    ) [WithMulFacts]
                                                    MultOp(
                                                    ) [MultOp]
                                                    NumFactor(
                                                     8
                                                    ) [NumFactor]
                                                  ) [WithMulFacts]
                                                ) [Terms]
                                                NoAddTerms(
                                                ) [NoAddTerms]
                                              ) [Expression]
                                            ) [DesignArr]
                                          ) [OptDesignator]
                                        ) [Design]
                                        PlusPlusSideEff(
                                        ) [PlusPlusSideEff]
                                      ) [DesignStmt]
                                    ) [DesignatorStmt]
                                  ) [OptionalStmt]
                                  DesignatorStmt(
                                    DesignStmt(
                                      Design(
                                       var
                                        OptDesignator(
                                          NoDesignator(
                                          ) [NoDesignator]
                                          DesignField(
                                           a
                                          ) [DesignField]
                                        ) [OptDesignator]
                                      ) [Design]
                                      AddSideEff(
                                        AssignOperation(
                                        ) [AssignOperation]
                                        Expression(
                                          Negative(
                                          ) [Negative]
                                          Terms(
                                            DesignFactor(
                                              Design(
                                               varA
                                                NoDesignator(
                                                ) [NoDesignator]
                                              ) [Design]
                                              NoMethodCall(
                                              ) [NoMethodCall]
                                            ) [DesignFactor]
                                            WithMulFacts(
                                              WithMulFacts(
                                                NoMulFacts(
                                                ) [NoMulFacts]
                                                MultOp(
                                                ) [MultOp]
                                                DesignFactor(
                                                  Design(
                                                   varB
                                                    NoDesignator(
                                                    ) [NoDesignator]
                                                  ) [Design]
                                                  WithMethodCall(
                                                    NoActPars(
                                                    ) [NoActPars]
                                                  ) [WithMethodCall]
                                                ) [DesignFactor]
                                              ) [WithMulFacts]
                                              MultOp(
                                              ) [MultOp]
                                              DesignFactor(
                                                Design(
                                                 varC
                                                  NoDesignator(
                                                  ) [NoDesignator]
                                                ) [Design]
                                                WithMethodCall(
                                                  WithActPars(
                                                    SingleActPars(
                                                      Expression(
                                                        Negative(
                                                        ) [Negative]
                                                        Terms(
                                                          BoolFactor(
                                                          ) [BoolFactor]
                                                          NoMulFacts(
                                                          ) [NoMulFacts]
                                                        ) [Terms]
                                                        NoAddTerms(
                                                        ) [NoAddTerms]
                                                      ) [Expression]
                                                    ) [SingleActPars]
                                                  ) [WithActPars]
                                                ) [WithMethodCall]
                                              ) [DesignFactor]
                                            ) [WithMulFacts]
                                          ) [Terms]
                                          NoAddTerms(
                                          ) [NoAddTerms]
                                        ) [Expression]
                                      ) [AddSideEff]
                                    ) [DesignStmt]
                                  ) [DesignatorStmt]
                                ) [OptionalStmt]
                                DesignatorStmt(
                                  DesignStmt(
                                    Design(
                                     var
                                      OptDesignator(
                                        NoDesignator(
                                        ) [NoDesignator]
                                        DesignField(
                                         b
                                        ) [DesignField]
                                      ) [OptDesignator]
                                    ) [Design]
                                    PlusPlusSideEff(
                                    ) [PlusPlusSideEff]
                                  ) [DesignStmt]
                                ) [DesignatorStmt]
                              ) [OptionalStmt]
                              DesignatorStmt(
                                DesignStmt(
                                  Design(
                                   var
                                    OptDesignator(
                                      NoDesignator(
                                      ) [NoDesignator]
                                      DesignField(
                                       c
                                      ) [DesignField]
                                    ) [OptDesignator]
                                  ) [Design]
                                  ActParsSideEff(
                                    NoActPars(
                                    ) [NoActPars]
                                  ) [ActParsSideEff]
                                ) [DesignStmt]
                              ) [DesignatorStmt]
                            ) [OptionalStmt]
                            DesignatorStmt(
                              DesignStmt(
                                Design(
                                 var
                                  OptDesignator(
                                    NoDesignator(
                                    ) [NoDesignator]
                                    DesignField(
                                     d
                                    ) [DesignField]
                                  ) [OptDesignator]
                                ) [Design]
                                AddSideEff(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expression(
                                    Negative(
                                    ) [Negative]
                                    Terms(
                                      NewFactor(
                                        Type(
                                         klasa
                                        ) [Type]
                                        NoExpr(
                                        ) [NoExpr]
                                      ) [NewFactor]
                                      NoMulFacts(
                                      ) [NoMulFacts]
                                    ) [Terms]
                                    NoAddTerms(
                                    ) [NoAddTerms]
                                  ) [Expression]
                                ) [AddSideEff]
                              ) [DesignStmt]
                            ) [DesignatorStmt]
                          ) [OptionalStmt]
                          DesignatorStmt(
                            DesignStmt(
                              Design(
                               var
                                OptDesignator(
                                  NoDesignator(
                                  ) [NoDesignator]
                                  DesignField(
                                   e
                                  ) [DesignField]
                                ) [OptDesignator]
                              ) [Design]
                              AddSideEff(
                                AssignOperation(
                                ) [AssignOperation]
                                Expression(
                                  Negative(
                                  ) [Negative]
                                  Terms(
                                    ExprFactor(
                                      Expression(
                                        Positive(
                                        ) [Positive]
                                        Terms(
                                          NumFactor(
                                           25
                                          ) [NumFactor]
                                          WithMulFacts(
                                            NoMulFacts(
                                            ) [NoMulFacts]
                                            MultOp(
                                            ) [MultOp]
                                            NumFactor(
                                             9
                                            ) [NumFactor]
                                          ) [WithMulFacts]
                                        ) [Terms]
                                        NoAddTerms(
                                        ) [NoAddTerms]
                                      ) [Expression]
                                    ) [ExprFactor]
                                    NoMulFacts(
                                    ) [NoMulFacts]
                                  ) [Terms]
                                  NoAddTerms(
                                  ) [NoAddTerms]
                                ) [Expression]
                              ) [AddSideEff]
                            ) [DesignStmt]
                          ) [DesignatorStmt]
                        ) [OptionalStmt]
                        StatementDerived3(
                        ) [StatementDerived3]
                      ) [OptionalStmt]
                      StatementDerived4(
                      ) [StatementDerived4]
                    ) [OptionalStmt]
                    StatementDerived5(
                      OptRetExprDerived2(
                      ) [OptRetExprDerived2]
                    ) [StatementDerived5]
                  ) [OptionalStmt]
                  StatementDerived5(
                    OptRetExprDerived1(
                      Expression(
                        Negative(
                        ) [Negative]
                        Terms(
                          NumFactor(
                           1
                          ) [NumFactor]
                          NoMulFacts(
                          ) [NoMulFacts]
                        ) [Terms]
                        WithAddTerms(
                          NoAddTerms(
                          ) [NoAddTerms]
                          MinusOp(
                          ) [MinusOp]
                          Terms(
                            NumFactor(
                             2
                            ) [NumFactor]
                            NoMulFacts(
                            ) [NoMulFacts]
                          ) [Terms]
                        ) [WithAddTerms]
                      ) [Expression]
                    ) [OptRetExprDerived1]
                  ) [StatementDerived5]
                ) [OptionalStmt]
                StatementDerived6(
                  Design(
                   a
                    NoDesignator(
                    ) [NoDesignator]
                  ) [Design]
                ) [StatementDerived6]
              ) [OptionalStmt]
              StatementDerived7(
                Expression(
                  Negative(
                  ) [Negative]
                  Terms(
                    CharFactor(
                    ) [CharFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  NoAddTerms(
                  ) [NoAddTerms]
                ) [Expression]
                OptNumConstDerived2(
                ) [OptNumConstDerived2]
              ) [StatementDerived7]
            ) [OptionalStmt]
            StatementDerived8(
              OptionalStmt(
                NoOptionalStmt(
                ) [NoOptionalStmt]
                StatementDerived7(
                  Expression(
                    Negative(
                    ) [Negative]
                    Terms(
                      CharFactor(
                      ) [CharFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                  OptNumConstDerived2(
                  ) [OptNumConstDerived2]
                ) [StatementDerived7]
              ) [OptionalStmt]
            ) [StatementDerived8]
          ) [OptionalStmt]
          StatementDerived1(
            ConditionDerived2(
              CondTermDerived2(
                CondFactDerived1(
                  Expression(
                    Negative(
                    ) [Negative]
                    Terms(
                      DesignFactor(
                        Design(
                         a
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                        NoMethodCall(
                        ) [NoMethodCall]
                      ) [DesignFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                  OptRelExprDerived1(
                    RelLess(
                    ) [RelLess]
                    Expression(
                      Negative(
                      ) [Negative]
                      Terms(
                        NumFactor(
                         6
                        ) [NumFactor]
                        NoMulFacts(
                        ) [NoMulFacts]
                      ) [Terms]
                      NoAddTerms(
                      ) [NoAddTerms]
                    ) [Expression]
                  ) [OptRelExprDerived1]
                ) [CondFactDerived1]
              ) [CondTermDerived2]
            ) [ConditionDerived2]
            StatementDerived3(
            ) [StatementDerived3]
            OptElseDerived2(
            ) [OptElseDerived2]
          ) [StatementDerived1]
        ) [OptionalStmt]
        StatementDerived1(
          ConditionDerived2(
            CondTermDerived2(
              CondFactDerived1(
                Expression(
                  Negative(
                  ) [Negative]
                  Terms(
                    NumFactor(
                     5
                    ) [NumFactor]
                    NoMulFacts(
                    ) [NoMulFacts]
                  ) [Terms]
                  NoAddTerms(
                  ) [NoAddTerms]
                ) [Expression]
                OptRelExprDerived1(
                  RelSame(
                  ) [RelSame]
                  Expression(
                    Negative(
                    ) [Negative]
                    Terms(
                      DesignFactor(
                        Design(
                         f
                          NoDesignator(
                          ) [NoDesignator]
                        ) [Design]
                        NoMethodCall(
                        ) [NoMethodCall]
                      ) [DesignFactor]
                      NoMulFacts(
                      ) [NoMulFacts]
                    ) [Terms]
                    NoAddTerms(
                    ) [NoAddTerms]
                  ) [Expression]
                ) [OptRelExprDerived1]
              ) [CondFactDerived1]
            ) [CondTermDerived2]
          ) [ConditionDerived2]
          StatementDerived6(
            Design(
             a
              NoDesignator(
              ) [NoDesignator]
            ) [Design]
          ) [StatementDerived6]
          OptElseDerived1(
            StatementDerived6(
              Design(
               f
                NoDesignator(
                ) [NoDesignator]
              ) [Design]
            ) [StatementDerived6]
          ) [OptElseDerived1]
        ) [StatementDerived1]
      ) [OptionalStmt]
    ) [MethodDeclarations]
  ) [OptMethods]
) [Program]
INFO  01:56:15,545 - ===================================
INFO  01:56:15,548 -  Print count calls = 310
INFO  01:56:15,548 -  Deklarisanih promenljivih ima = 0
